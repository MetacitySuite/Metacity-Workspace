{"version":3,"sources":["url.tsx","axios.tsx","screens/elements/header.tsx","screens/home.tsx","screens/elements/dialog.tsx","screens/elements/project/projectactions.tsx","screens/login.tsx","screens/elements/layers.tsx","screens/elements/styles.tsx","screens/elements/project.tsx","screens/elements/project/projectlist.tsx","screens/projects.tsx","screens/upload.tsx","screens/elements/jobs.tsx","screens/elements/log.tsx","screens/elements/logs.tsx","screens/jobs.tsx","screens/mapping.tsx","engine/renderer/csm/Frustum.js","engine/renderer/csm/CSMShader.js","engine/renderer/csm/CSM.js","engine/renderer/csm/CSMHelper.js","engine/renderer/picker.tsx","engine/renderer/shaders.tsx","engine/renderer/selector.tsx","engine/renderer/controls.tsx","engine/renderer/camera.tsx","engine/utils/status.tsx","engine/renderer/renderer.tsx","engine/geometry/base.tsx","engine/utils/decoder.ts","engine/renderer/style.tsx","engine/geometry/polygons.tsx","engine/geometry/geometry.tsx","engine/geometry/lines.tsx","engine/geometry/deserialize.tsx","engine/geometry/points.tsx","engine/datamodel/tile.tsx","engine/datamodel/grid.tsx","engine/datamodel/layer.tsx","engine/datamodel/project.tsx","engine/engine.tsx","screens/elements/viewmenu.tsx","screens/elements/metadialog.tsx","screens/view.tsx","screens/style.tsx","app.tsx","index.tsx"],"names":["url","apiurl","iaxios","axios","create","authToken","localStorage","getItem","defaults","headers","common","Authorization","EvergreenReactRouterLink","props","Link","is","ReactRouterLink","Header","Pane","className","to","home","projects","jobs","Home","useState","setProjects","history","useHistory","useEffect","get","then","response","data","Heading","map","project","index","Button","height","appearance","onClick","push","InputDialog","nameref","createRef","isShown","setShown","invalid","setInvalid","error","setError","submit","e","preventDefault","value","current","body","submitBody","method","submitUrl","onSubmit","catch","reject","onError","Dialog","title","onConfirm","onCloseComplete","confirmLabel","TextInputField","name","label","description","placeholder","ref","isInvalid","validationMessage","cloneElement","children","TextDialog","intent","Paragraph","InlineAlert","marginTop","tooltip","Tooltip","content","ProjectActions","marginRight","marginBottom","iconBefore","AddToArtifactIcon","style","StyleIcon","CubeIcon","MergeColumnsIcon","PresentationIcon","new","old","showProject","EditIcon","TrashIcon","authUser","callback","Login","status","setStatus","pass","length","event","formData","FormData","append","post","setItem","access_token","console","TextInput","width","type","Layers","layers","setLayers","loadLayers","changeDisabled","layer","disabled","Table","Head","TextHeaderCell","Body","Row","paddingY","TextCell","size","IconButton","icon","CrossIcon","TickIcon","EmptyState","background","orientation","LayersIcon","color","iconBgColor","anchorCta","LinkButton","Styles","styles","setStyles","getStyles","Project","ProjectList","onSelect","AddIcon","Tablist","Tab","id","isSelected","currentProject","Projects","project_name","useParams","setCurrentProject","getProjects","lurl","justifyContent","alignItems","indexOf","ProjectsIcon","Dropzone","useDropzone","acceptedFiles","getRootProps","getInputProps","files","file","form","UploadLayer","progress","setProgress","uploading","setUploading","Spinner","padding","borderRadius","Text","toFixed","layer_name","undefined","forEach","dataset","onUploadProgress","progressEvent","loaded","total","toast","JobList","update","setJobs","selectedJob","setSelectedJob","detailIsShown","setDetailIsShown","loadJobs","setTimeout","clearTimeout","SideSheet","preventBodyScrolling","job_id","src","enableClipboard","theme","base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F","job","ApplicationIcon","CodeIcon","ConsoleIcon","Log","contents","setContents","loadLog","Pre","split","line","LogList","logs","setLogs","selectedLog","setSelectedLog","loadLogs","flexBasis","log","Jobs","Mapping","selectedSource","setSelectedSource","selectedTarget","setSelectedTarget","filter","x","overlay_name","source","target","overlay","success","Code","SelectMenu","options","selected","item","ArrowRightIcon","inverseProjectionMatrix","Matrix4","Frustum","this","vertices","near","Vector3","far","projectionMatrix","setFromProjectionMatrix","maxFar","isOrthographic","elements","copy","invert","set","v","applyMatrix4","absZ","Math","abs","z","min","multiplyScalar","breaks","i","cascade","j","lerpVectors","cameraMatrix","CSMShader","lights_fragment_begin","lights_pars_begin","ShaderChunk","_cameraToLightMatrix","_lightSpaceFrustum","_center","_bbox","Box3","_uniformArray","_logArray","CSM","camera","parent","cascades","mode","shadowMapSize","shadowBias","lightDirection","normalize","lightIntensity","lightNear","lightFar","lightMargin","customSplitsCallback","fade","mainFrustum","frustums","lights","shaders","Map","createLights","updateFrustums","injectInclude","light","DirectionalLight","castShadow","shadow","mapSize","bias","add","updateProjectionMatrix","shadowCam","frustum","nearVerts","farVerts","point1","point2","distanceTo","squaredBBWidth","max","linearDepth","pow","left","right","top","bottom","uniformSplit","logarithmicSplit","amount","lambda","MathUtils","lerp","practicalSplit","texelWidth","texelHeight","updateMatrixWorld","multiplyMatrices","matrixWorldInverse","matrixWorld","toSpace","makeEmpty","expandByPoint","getCenter","floor","y","position","material","defines","USE_CSM","CSM_CASCADES","CSM_FADE","breaksVec2","scope","onBeforeCompile","shader","getExtendedBreaks","uniforms","CSM_cascades","cameraNear","shadowFar","needsUpdate","Vector2","prev","getBreaks","initCascades","updateShadowBounds","updateUniforms","remove","clear","CSMHelper","csm","displayFrustum","displayPlanes","displayShadowBounds","indices","Uint16Array","positions","Float32Array","frustumGeometry","BufferGeometry","setIndex","BufferAttribute","setAttribute","frustumLines","LineSegments","LineBasicMaterial","cascadeLines","cascadePlanes","shadowLines","l","cascadeLine","cascadePlane","shadowLineGroup","visible","frustumLinePositions","geometry","getAttribute","quaternion","scale","pop","Box3Helper","planeMat","MeshBasicMaterial","transparent","opacity","depthWrite","side","DoubleSide","Mesh","PlaneGeometry","Group","shadowLine","box","addVectors","subVectors","attach","setXYZ","GPUPickHelper","renderer","pickingTexture","pixelBuffer","offsets","maxOffest","THREE","Uint8Array","has","Error","range","entries","oid","oid_array","Uint32Array","oid_view","DataView","buffer","getUint8","scene","pixelRatio","getPixelRatio","setViewOffset","getContext","drawingBufferWidth","drawingBufferHeight","setRenderTarget","render","clearViewOffset","readRenderTargetPixels","getUint32","Stage","MaterialLibrary","polygonMaterial","pointMaterial","lineMaterial","pickingPolygonMaterial","pickingPointMaterial","customUniforms","merge","phong","selectedID","shininess","vertexShader","fragmentShader","polygonSelectMaterial","setupMaterial","zoffset","pointSize","pointSimpleSelectMaterial","pickingMaterial","uniformsNeedUpdate","MapControls","domElement","up","screenSpacePanning","mouseButtons","LEFT","PAN","RIGHT","ROTATE","touches","ONE","TWO","DOLLY_ROTATE","zoomSpeed","dampingFactor","enableDamping","minDistance","minPolarAngle","maxPolarAngle","PI","OrbitControls","PerspectiveControls","canvas","window","innerWidth","innerHeight","controls","enableRotate","maxDistance","aspect","OrthographicControls","object","CameraControls","perspective","orthographic","enable","resize","topView","focusPoint","isOrthographicCamera","vector","unproject","Action","manager","counter","StatusManager","actions","loadingGeometry","parsingGeometry","loadingStyles","applyingStyles","bar","document","getElementById","action","isRunning","toString","innerHTML","Renderer","actionCall","pickingScene","picker","matlib","helper","stats1","stats2","changed","updateShadows","trim","antialias","setupRenderer","setupLightsAndShadows","initOrthographic","hemisphere","margin","autoUpdateHelper","setPixelRatio","devicePixelRatio","shadowMap","enabled","autoUpdate","setClearColor","setSize","setAnimationLoop","frame","getRenderTarget","pick","select","layerAndOidForId","setSelectedID","setPointSize","OIDType","Selector","NOSELECT","cube","ends","depth","wirebox","dashSize","gapSize","start","end","tmp","sub","Decoder","abort","conf","p","it","view","ArrayBuffer","Float64Array","BYTES_PER_ELEMENT","blob","atob","len","Promise","resolve","iteration","c","stepStop","stop","totalStop","setUint8","charCodeAt","array","getFloat64","offset","Int32Array","getInt32","LayerStyle","base64touint8","buffer_source","buffer_target","pickable","oid_offset","oids","outputbuffer","ci","total_stop","step_stop","color_default","oid_length","Model","mesh","pickingMesh","visibility","removeFrom","dispose","threeVertLength","colors","attributes","objectID","out","color_buffer","afterApplyStyle","bind","ModelProxy","color_buffer_source","color_buffer_target","PolygonalModel","tile","offsetForLayer","base64tofloat32","base64toint32","objectid","init","createGeometry","createMesh","createPickingMesh","receiveShadow","baseColors","computeVertexNormals","PolygonalProxyModel","offset_source","source_oid","capLeft","resolution","shift","step","cos","sin","capRight","segment","concat","LineModel","frustumCulled","instanceCount","LineProxyModel","registeredModels","model","simplepolygon","simpleline","simplepoint","symbol","symbolGeometry","proxy","modelTypes","Object","keys","proxyTypes","deserializeModel","tags","includes","TileLoader","stopFlag","CancelToken","sourceFile","cancelToken","token","cancel","Tile","bbox","brect","models","isVisible","loader","caching","show","hide","modeldata","applyStyleToModels","disposeCache","toSpiral","level","n","base","Grid","tileSize","tiles","visible_radius","visibleSwap","zero2","tile_size","Infinity","createTiles","Set","b","values","a","tiledata","idx","fp","visibleTile","clone","divideScalar","nvisibleTile","equals","updateVisibility","tmpVisible","trad","ceil","sid","subScalar","eid","addScalar","LayerBase","style_names","grid","layout","focus","center","updateVisibleTiles","point","reloadVisibility","radius","lstyle","_","enableCache","disableCache","Layer","applyStyle","Overlay","usedStyle","updateVisibleRadius","setVisibleRadius","clearStyle","MetacityEngine","selector","keymap","showMetaCallback","addEventListener","moved","click","res","key","swap","updateHelper","StyleMenu","engine","setSelected","LayerMenu","setVisibility","EyeOpenIcon","EyeOffIcon","ViewMenu","menuIsShown","setMenuIsShown","setRadius","shadows","setShadows","cache","setCache","enableShadows","disableShadows","useCache","defaultValue","onChange","parseInt","updateRadius","parseFloat","updatePointSize","Switch","checked","toggleShadows","toggleCache","PropertiesIcon","MetaDialog","meta","setMeta","metaIsShown","setMetaIsShown","showMeta","CornerDialog","hasCancel","hasFooter","onCancel","View","useLayoutEffect","updateSize","removeEventListener","useWindowSize","setEngine","exit","location","reload","onDoubleClick","doubleclick","clientX","clientY","onKeyDown","repeat","keyDown","code","onKeyUp","keyUp","tabIndex","languageDef","defaultToken","number","keywords","typeKeywords","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","regexpctl","regexpesc","tokenizer","root","include","cases","bracket","next","whitespace","regexp","regexrange","string_double","string_single","string_backtick","bracketCounting","configuration","brackets","createDependencyProposals","kind","monaco","CompletionItemKind","Class","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","documentation","insertText","Value","matchTag","RegExp","StyleEditor","style_name","editor","setEditor","setValue","isParsedShown","setParsedIsShown","parsed","setParsed","getValue","UpdatedIcon","beforeMount","languages","getLanguages","some","register","setMonarchTokensProvider","setLanguageConfiguration","registerCompletionItemProvider","provideCompletionItems","getValueInRange","startLineNumber","startColumn","endLineNumber","lineNumber","endColumn","column","match","suggestions","word","getWordUntilPosition","onMount","defaultLanguage","App","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","exact","path","ReactDOM","StrictMode","Provider"],"mappings":"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","file":"static/js/main.4ca925ca.chunk.js","sourcesContent":["\n\n\nexport const url = {\n    HOME: '/app',\n    LOGIN: '/app/login',\n    VIEWTEMPLATE: '/app/view/:project_name',\n    VIEW: '/app/view/',\n    PROJECTSTEMPLATE: '/app/projects/:project_name?',\n    PROJECTS: '/app/projects/',\n    JOBS: '/app/jobs',\n    UPLOADLAYERTEMPLATE: '/app/upload/:project_name',\n    UPLOADLAYER: '/app/upload/',\n    STYLETEMPLATE: '/app/style/:project_name/:style_name',\n    STYLE: '/app/style/',\n    MAPPINGTEMPLATE: '/app/mapping/:project_name',\n    MAPPING: '/app/mapping/'\n};\n\nexport const apiurl = {\n    LISTPROJECT: '/api/projects',\n    ADDPROJECT: '/api/project',\n    EXISTSPROJECT: '/api/project/exists',\n    RENAMEPROJECT: '/api/project/rename',\n    DELETEPROJECT: '/api/project',\n    BUILDPROJECT: '/api/project/build',\n    GETMETA: '/api/project/meta',\n    \n    LISTLAYER: '/api/layers',\n    ADDLAYER: '/api/layer',\n    RENAMELAYER: '/api/layer/rename',\n    DELETELAYER: '/api/layer',\n    ENABLELAYER: '/api/layer/enable',\n    DISABLELAYER: '/api/layer/disable',\n    MAPLAYERS: '/api/layer/map',\n    \n    LISTJOBS: '/api/jobs',\n    LISTLOGS: '/api/logs',\n    LOG: '/api/log',\n    \n    AUTHUSER: '/auth/user',\n    TOKEN: '/auth/token',\n\n    LISTSTYLES: '/api/styles',\n    GETSTYLE: '/api/style',\n    CREATESTYLE: '/api/style/create',\n    UPDATESTYLE: '/api/style/update',\n    DELETESTYLE: '/api/style',\n    RENAMESTYLE: '/api/style/rename',\n    APPLYSTYLE: '/api/style/apply',\n    PARSESTYLE: '/api/style/parse'\n};\n","import axios from \"axios\";\n\nlet config = {};\nif (process.env.NODE_ENV !== 'production') {\n  config = {\n    baseURL: \"http://localhost:5000\" // leave unset if you are using the production server\n  };\n}\n\nconst iaxios = axios.create(config);\n\n(function() { \n  let authToken = localStorage.getItem(\"JWT\");\n  if (authToken === null) {\n      // This means that there ISN'T JWT and no user is logged in.\n      iaxios.defaults.headers.common.Authorization = null;\n  } else {\n      // This means that there IS a JWT so someone must be logged in.\n      iaxios.defaults.headers.common.Authorization = `Bearer ${authToken}`;\n  }\n})();\n\n\n\n\nexport default iaxios;","import React from 'react'\nimport { Link as ReactRouterLink } from 'react-router-dom'\nimport { Link, Pane } from 'evergreen-ui'\nimport { url } from '../../url'\n\nexport const EvergreenReactRouterLink = (props: any) =>\n    <Link is={ReactRouterLink} {...props} />\n\n\ninterface IHeaderProps {\n    home?: boolean;\n    projects?: boolean;\n    jobs?: boolean;\n}\n\nexport function Header(props: IHeaderProps) {\n\n    return (\n        <Pane className=\"header\" >\n                <EvergreenReactRouterLink to={url.HOME} className={`headerLink ${props.home ? 'selected' : ''}`}>Home</EvergreenReactRouterLink>\n                <EvergreenReactRouterLink to={url.PROJECTS} className={`headerLink ${props.projects ? 'selected' : ''}`}>Projects</EvergreenReactRouterLink>\n                <EvergreenReactRouterLink to={url.JOBS} className={`headerLink ${props.jobs ? 'selected' : ''}`}>Jobs &amp; Logs</EvergreenReactRouterLink>\n        </Pane>\n    )\n}","import { Pane, Heading, Button, Paragraph, Link } from 'evergreen-ui'\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport iaxios from '../axios';\nimport { apiurl, url } from '../url';\nimport { EvergreenReactRouterLink, Header } from './elements/header';\n\n\nexport function Home() {\n  const [projects, setProjects] = useState<string[]>([]);\n  const history = useHistory();\n\n  const getProjects = () => {\n    iaxios.get(apiurl.LISTPROJECT).then((response) => {\n      setProjects(response.data);\n    });\n  }\n\n  useEffect(() => {\n    getProjects();\n    return () => {\n      setProjects([]);\n    };\n  }, []);\n\n  return (\n    <>\n    <Pane className=\"home\">\n      <Heading className=\"homeHeading\">Metacity</Heading>\n      <Pane className=\"homeProjectList\">\n        {projects.map((project, index) => (\n          <Button height={48} key={index} appearance=\"minimal\" onClick={() => history.push(url.VIEW + project)}>\n            {project}\n          </Button>)\n        )}\n      </Pane>\n      <EvergreenReactRouterLink to={url.PROJECTS} className=\"homeNav\">\n        Go to Controls\n      </EvergreenReactRouterLink>\n    </Pane>\n    </>\n  );\n}","import { Paragraph, Dialog, TextInputField, InlineAlert, Tooltip } from 'evergreen-ui'\nimport { useState, FormEvent, createRef, useEffect, cloneElement } from 'react'\nimport iaxios from '../../axios';\n\ninterface IInputDialogProps {\n    submitUrl: string;\n    title: string;\n    confirmLabel: string;\n    label: string;\n    description?: string;\n    placeholder?: string;\n    method: \"post\" | \"delete\";\n\n    submitBody: (input: string) => Object;\n    onSubmit: (input: string) => void;\n    onError: (reject: any, value: string) => string;\n\n    children: React.ReactElement;\n\n}\n\n\nexport function InputDialog(props: IInputDialogProps) {\n    const nameref = createRef<HTMLInputElement>();\n    const [isShown, setShown] = useState(false);\n    const [invalid, setInvalid] = useState(false);\n    const [error, setError] = useState(\"\");\n\n    const submit = (e?: FormEvent) => {\n        if (e)\n            e.preventDefault();\n\n        const value = nameref.current?.value;\n        if (!value)\n            return;\n        const body = props.submitBody(value);\n\n        iaxios[props.method](props.submitUrl, body).then(() => {\n            if (nameref.current)\n                nameref.current.value = \"\";\n            setShown(false);\n            props.onSubmit(value);\n        }).catch((reject) => {\n            const error = props.onError(reject, value);\n            setInvalid(true);\n            setError(error);\n        });\n    };\n\n    useEffect(() => {\n        setError(\"\");\n        setInvalid(false);\n    }, [isShown]);\n\n    return (\n        <>\n        <Dialog\n            isShown={isShown}\n            title={props.title}\n            onConfirm={() => submit()}\n            onCloseComplete={() => setShown(false)}\n            confirmLabel={props.confirmLabel}>\n            <form className=\"dialogForm\" onSubmit={submit}>\n                { invalid ? \n                    <TextInputField name=\"name\" \n                        label={props.label} \n                        description={props.description} \n                        placeholder={props.placeholder} \n                        ref={nameref} \n                        isInvalid={invalid} \n                        validationMessage={error}\n                    />\n                    :\n                    <TextInputField name=\"name\" \n                        label={props.label} \n                        description={props.description} \n                        placeholder={props.placeholder} \n                        ref={nameref} \n                    />\n                }\n            </form>\n        </Dialog>\n        { cloneElement(props.children, { onClick: () => setShown(true) }) }\n    </>\n    );\n}\n\n\ninterface ITextDialogProps {\n    submitUrl: string;\n    title: string;\n    confirmLabel: string;\n    label: string;\n    method: \"post\" | \"delete\";\n    tooltip?: string;\n    intent?: \"success\" | \"warning\" | \"danger\" | \"none\";\n\n    submitBody: () => Object;\n    onSubmit: () => void;\n    onError: (reject: any) => string;\n\n    children: React.ReactElement;\n}\n\n\nexport function TextDialog(props: ITextDialogProps) {\n    const [isShown, setShown] = useState(false);\n    const [invalid, setInvalid] = useState(false);\n    const [error, setError] = useState(\"\");\n\n    const submit = () => {\n        try {\n            const body = props.submitBody();\n            iaxios[props.method](props.submitUrl, body).then(() => {\n                setShown(false);\n                props.onSubmit();\n            }).catch((reject) => {\n                const error = props.onError(reject);\n                setInvalid(true);\n                setError(error);\n            });\n        } catch(error: any) {\n            setInvalid(true);\n            setError(error); \n        }\n\n    };\n\n    useEffect(() => {\n        setError(\"\");\n        setInvalid(false);\n    }, [isShown]);\n\n    return (\n        <>\n        <Dialog\n            isShown={isShown}\n            intent={props.intent ? props.intent :  \"none\"}\n            title={props.title}\n            onConfirm={submit}\n            onCloseComplete={() => setShown(false)}\n            confirmLabel={props.confirmLabel}>\n            <Paragraph>{props.label}</Paragraph>\n            { invalid ? <InlineAlert intent=\"danger\" marginTop={16}>{error}</InlineAlert> : \"\"}\n        </Dialog>\n        {props.tooltip? \n            <Tooltip content={props.tooltip}>\n                { cloneElement(props.children, { onClick: () => { setShown(true); } }) }\n            </Tooltip> :\n            cloneElement(props.children, { onClick: () => { setShown(true); } })\n    \n        }   \n        </>\n    );\n}\n\n\n","import { Pane, Button, CubeIcon, AddToArtifactIcon, MergeColumnsIcon, Text, StyleIcon, PresentationIcon, EditIcon, TrashIcon } from 'evergreen-ui'\nimport { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { InputDialog, TextDialog } from '../dialog'\nimport { url, apiurl } from '../../../url'\n\n\ninterface IProjectProps {\n    name: string;\n    showProject: (name?: string) => void;\n\n}\n\nexport function ProjectActions(props: IProjectProps) {\n    const history = useHistory();\n\n    const recompile = () => {\n        history.push(url.JOBS);\n    }\n\n    return (\n        <Pane className=\"actions\">\n\n            <Button marginRight={12} marginBottom={12} appearance=\"minimal\" iconBefore={AddToArtifactIcon} onClick={() => history.push(url.UPLOADLAYER + props.name)}>\n                Add Layer\n            </Button>\n\n            <InputDialog\n                submitUrl={apiurl.CREATESTYLE}\n                title=\"Add Style\"\n                label={`Choose the name of the new style`}\n                confirmLabel=\"Create\"\n                method=\"post\"\n                submitBody={(name) => { return { project: props.name, name: name } }}\n                onSubmit={(style) => { history.push(url.STYLE + props.name + \"/\" + style) }}\n                onError={(reject, style) => {return \"Style already exists\"}} \n            >\n                <Button marginRight={12} marginBottom={12} appearance=\"minimal\" iconBefore={StyleIcon}>\n                    Add Style\n                </Button>\n            </InputDialog>\n\n            <TextDialog\n                submitUrl={apiurl.BUILDPROJECT}\n                title={`Recompile project ${props.name}`}\n                label={`Are you sure you want to recompile project ${props.name}?`}\n                confirmLabel=\"Recompile\"\n                method=\"post\"\n                submitBody={() => { return { name: props.name }}}\n                onSubmit={recompile}\n                onError={(reject) => {return \"Project could not be recompiled\"}} \n                tooltip=\"Publish selected layers and compile data for visualization\"\n            >\n                <Button marginRight={12} marginBottom={12} appearance=\"minimal\" iconBefore={CubeIcon}>\n                    Publish 3D\n                </Button>\n            </TextDialog>\n\n            <Button  marginBottom={12} appearance=\"minimal\" iconBefore={MergeColumnsIcon} onClick={() => { history.push(url.MAPPING + props.name) }}>\n                Map Layers\n            </Button>\n            <Button marginRight={12} marginBottom={12} appearance=\"minimal\" iconBefore={PresentationIcon} onClick={() => { history.push(url.VIEW + props.name) }}>\n                View\n            </Button>\n            <InputDialog\n                submitUrl={apiurl.RENAMEPROJECT}\n                title={`Rename project ${props.name}`}\n                label={`Choose a new name for project ${props.name}`}\n                confirmLabel=\"Rename\"\n                method=\"post\"\n                submitBody={(name) => { return {new: name, old: props.name} }}\n                onSubmit={props.showProject}\n                onError={(reject, name) => {return \"Project already exists\"}} \n            >\n                <Button marginRight={12} marginBottom={12} appearance=\"minimal\" iconBefore={EditIcon}>\n                    Rename\n                </Button>\n            </InputDialog>\n            <TextDialog\n                submitUrl={apiurl.DELETEPROJECT}\n                title={`Delete project ${props.name}`}\n                label={`Do you really want to delete project ${props.name}?`}\n                confirmLabel=\"Delete\"\n                method=\"delete\"\n                intent=\"danger\"\n                submitBody={() => { return { data: { name: props.name }}}}\n                onSubmit={() => { props.showProject() }}\n                onError={(reject) => {return \"Project could not be deleted\"}} \n            >\n                <Button  marginBottom={12} appearance=\"minimal\" iconBefore={TrashIcon} intent=\"danger\">\n                    Delete Project\n                </Button>\n            </TextDialog>\n\n        </Pane>\n    );\n}\n\n","import { Pane, Tablist, Tab, Heading, EmptyState, ProjectsIcon, AddIcon, Dialog, TextInput, Text } from 'evergreen-ui'\nimport { useEffect, useState, FormEvent, createRef } from 'react'\nimport { useHistory, useParams } from 'react-router-dom';\nimport iaxios from '../axios';\nimport { url, apiurl } from '../url';\n\n\nexport function authUser(history: any, callback: CallableFunction) {\n    iaxios.get(apiurl.AUTHUSER).then((response) => {\n        callback();\n    }).catch((reject) => {\n        history.push(url.LOGIN);\n    });\n}\n\n\nexport function Login() {\n  const [status, setStatus] = useState<string>(\"\");\n  let history = useHistory();\n\n  const name = createRef<HTMLInputElement>();\n  const pass = createRef<HTMLInputElement>();\n\n  const login = (event: FormEvent) => {\n    event.preventDefault();\n\n    let formData = new FormData();\n    formData.append(\"username\", name.current?.value || \"\");\n    formData.append(\"password\", pass.current?.value || \"\");\n\n    iaxios.post(apiurl.TOKEN, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then((response) => {\n      localStorage.setItem(\"JWT\", response.data.access_token);\n      iaxios.defaults.headers.common[\"Authorization\"] = `Bearer ${response.data.access_token}`;\n      history.push(url.PROJECTS);\n    }).catch((reject) => {\n      console.error(reject);\n      setStatus(\"There was a problem with your login, check your username and password.\")\n    });\n  };\n\n  useEffect(() => {\n    iaxios.get(apiurl.AUTHUSER, ).then(() => {\n      history.push(url.PROJECTS);\n    }).catch((reject) => {\n        //silently pass\n    });\n  }, []);\n\n\n  return (\n    <Pane className=\"fullScreen\">\n        <Pane>\n          <Heading is=\"h1\">Login</Heading>\n          { status.length > 0? <p>{status}</p> : \"\"}\n          <form onSubmit={login}>\n            <TextInput width=\"100%\" placeholder=\"username\" ref={name} type=\"text\" />\n            <TextInput width=\"100%\" placeholder=\"password\" ref={pass} type=\"password\" />\n            <TextInput type=\"submit\"/>\n          </form>\n        </Pane>\n    </Pane>\n  )\n}","import { Pane, Table, TrashIcon, EditIcon, IconButton, EmptyState, LayersIcon, Heading, Button, AddToArtifactIcon, Icon, Switch, EyeOpenIcon, EyeOffIcon, CrossIcon, TickIcon, Tooltip } from 'evergreen-ui'\nimport { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport iaxios from '../../axios'\nimport { url, apiurl } from '../../url'\nimport { EvergreenReactRouterLink } from './header'\nimport { TextDialog, InputDialog } from './dialog'\nimport { authUser } from '../login'\n\n\ninterface ILayersProps {\n    name: string;\n}\n\nexport interface ILayer {\n    name: string;\n    size: number | [number, number];\n    type: string;\n    disabled: boolean;\n}\n\nexport function Layers(props: ILayersProps) {\n    const [layers, setLayers] = useState<ILayer[]>([]);\n    const history = useHistory();\n\n    const loadLayers = () => {\n        iaxios.post(apiurl.LISTLAYER, { name: props.name }).then((response) => {\n            setLayers(response.data);\n        });\n    }\n\n    useEffect(() => {\n        authUser(history, () => {\n            loadLayers();\n        })\n\n        return () => {\n            setLayers([]);\n        };\n    }, [props.name]);\n\n    const changeDisabled = (layer: ILayer) => {\n        if (layer.disabled) {\n            iaxios.post(apiurl.ENABLELAYER, { project: props.name, name: layer.name }).then(() => {\n                loadLayers();\n            });\n        } else {\n            iaxios.post(apiurl.DISABLELAYER, { project: props.name, name: layer.name }).then(() => {\n                loadLayers();\n            });\n        }\n    };\n\n\n    return (\n        <Pane className=\"section\">\n            <Pane className=\"projectHeader\">\n                <Heading className=\"wide\" is=\"h3\"> Layers</Heading>\n            </Pane>\n\n            <Table>\n                <Table.Head className=\"row\">\n                    <Table.TextHeaderCell className=\"wide\">Layer</Table.TextHeaderCell>\n                    <Table.TextHeaderCell className=\"wide\">Number of Objects</Table.TextHeaderCell>\n                    <Table.TextHeaderCell className=\"wide\">Type</Table.TextHeaderCell>\n                    <Table.TextHeaderCell className=\"narrow\">Public</Table.TextHeaderCell>\n                    <Table.TextHeaderCell className=\"narrow\">Rename</Table.TextHeaderCell>\n                    <Table.TextHeaderCell className=\"narrow\">Delete</Table.TextHeaderCell>\n                </Table.Head>\n                <Table.Body>\n                    {layers.length > 0 ? layers.map((layer) => (\n                        <Table.Row key={layer.name} paddingY={12} height=\"auto\" className=\"row\">\n                            <Table.TextCell className=\"wide\">{layer.name}</Table.TextCell>\n                            <Table.TextCell className=\"wide\">{typeof layer.size === 'number'? layer.size : `${layer.size[0]} x ${layer.size[1]}`}</Table.TextCell>\n                            <Table.TextCell className=\"wide\">{layer.type}</Table.TextCell>\n                            <Table.TextCell className=\"narrow\">\n                                {   layer.disabled ?\n                                        <IconButton icon={CrossIcon} appearance=\"minimal\" onClick={() => changeDisabled(layer)} />\n                                    :\n                                        <IconButton icon={TickIcon} intent=\"success\" appearance=\"minimal\" onClick={() => changeDisabled(layer)} />\n                                }\n                            </Table.TextCell>\n                            <Table.TextCell className=\"narrow\">\n                                <InputDialog\n                                    submitUrl={apiurl.RENAMELAYER}\n                                    title={`Rename layer ${layer.name}`}\n                                    label={`Choose a new name for layer ${layer.name}`}\n                                    confirmLabel=\"Rename\"\n                                    method=\"post\"\n                                    submitBody={(name) => { return { project: props.name, new: name, old: layer.name } }}\n                                    onSubmit={loadLayers}\n                                    onError={(reject, name) => { return \"Project already exists\" }}\n                                >\n                                    <IconButton icon={EditIcon} appearance=\"minimal\" />\n                                </InputDialog>\n                            </Table.TextCell>\n                            <Table.TextCell className=\"narrow\">\n                                <TextDialog\n                                    submitUrl={apiurl.DELETELAYER}\n                                    title={`Delete layer ${layer.name}`}\n                                    label={`Do you really want to delete layer ${layer.name}?`}\n                                    confirmLabel=\"Delete\"\n                                    method=\"delete\"\n                                    submitBody={() => { return { data: { project: props.name, name: layer.name } } }}\n                                    onSubmit={loadLayers}\n                                    onError={(reject) => { return \"Layer could not be deleted\" }}\n                                >\n                                    <IconButton icon={TrashIcon} intent=\"danger\" appearance=\"minimal\" />\n                                </TextDialog>\n                            </Table.TextCell>\n                        </Table.Row>\n                    )) :\n                        <EmptyState\n                            background=\"light\"\n                            title=\"No Layers in this Project\"\n                            orientation=\"horizontal\"\n                            icon={<LayersIcon color=\"#C1C4D6\" />}\n                            iconBgColor=\"#EDEFF5\"\n                            description=\"Layers apper after successfull processing of the input files.\"\n                            anchorCta={\n                                <EmptyState.LinkButton is={EvergreenReactRouterLink} to={url.UPLOADLAYER + props.name}>\n                                    Add first layer\n                                </EmptyState.LinkButton>\n                            }\n                        />\n                    }\n                </Table.Body>\n            </Table>\n        </Pane>\n    );\n}\n\n","import { Pane, Heading, Button, StyleIcon, EmptyState, TrashIcon, EditIcon } from 'evergreen-ui'\nimport { useEffect, useState } from 'react'\nimport iaxios from '../../axios'\nimport { url, apiurl } from '../../url'\nimport { authUser } from '../login'\nimport { useHistory } from 'react-router'\nimport { InputDialog, TextDialog } from './dialog'\n\ninterface IStyleListProps {\n    project: string;\n}\n\nexport function Styles(props: IStyleListProps) {\n    const [styles, setStyles] = useState<any[]>([]);\n    const history = useHistory();\n\n    const getStyles = () => {\n        iaxios.post(apiurl.LISTSTYLES, { name: props.project }).then((response) => {\n            setStyles(response.data);\n        });\n    };\n\n    useEffect(() => {\n        authUser(history, () => {\n            getStyles();\n        })\n    }, [props.project]);\n\n    return (\n        <Pane className=\"styles\">\n            <Pane className=\"projectHeader\">\n                <Heading className=\"wide\" is=\"h3\">Styles</Heading> \n            </Pane>\n            <Pane className=\"styleList\">\n                {styles.length > 0 ? styles.map((style) => (\n                    <Pane key={style} className=\"styleItem\">\n                        <Pane className=\"styleTitle\" onClick={() => { history.push(url.STYLE + props.project + \"/\" + style) }}>\n                            {style}\n                        </Pane>\n                        <Pane>\n\n                        <InputDialog\n                            submitUrl={apiurl.RENAMESTYLE}\n                            title={`Rename style ${style}`}\n                            label={`Choose a new name for style ${style}`}\n                            confirmLabel=\"Rename\"\n                            method=\"post\"\n                            submitBody={(name) => { return {project: props.project, new: name, old: style } }}\n                            onSubmit={() => { getStyles() }}\n                            onError={(reject, name) => {return \"Project already exists\"}} \n                        >\n\n                            <Button marginRight={16} appearance=\"minimal\" iconBefore={EditIcon}>\n                                Rename\n                            </Button>\n\n                        </InputDialog>\n\n\n                        <TextDialog\n                            submitUrl={apiurl.DELETESTYLE}\n                            title={`Delete style ${style}`}\n                            label={`Do you really want to delete style ${style}?`}\n                            confirmLabel=\"Delete\"\n                            method=\"delete\"\n                            intent=\"danger\"\n                            submitBody={() => { return { data: { project: props.project, name: style }}}}\n                            onSubmit={() => { getStyles() }}\n                            onError={(reject) => {return \"Style could not be deleted\"}} \n                        >\n                            <Button appearance=\"minimal\" intent=\"danger\" iconBefore={TrashIcon}>\n                                Delete\n                            </Button>\n                        </TextDialog>\n\n                        </Pane>\n                    </Pane>\n                )) : \n                <EmptyState\n                    background=\"light\"\n                    title=\"No Styles in this Project\"\n                    orientation=\"vertical\"\n                    icon={<StyleIcon color=\"#C1C4D6\" />}\n                    iconBgColor=\"#EDEFF5\"\n                    description=\"Styles modify the appearance of the layer in the visualization according to the layer and object metadata\"\n                />\n                }\n            </Pane>\n        </Pane>\n    )\n}","import { Heading, Pane } from 'evergreen-ui'\nimport { ProjectActions } from './project/projectactions'\nimport { Layers } from './layers'\nimport { Styles } from './styles'\n\n\ninterface IProjectProps {\n    name: string;\n    showProject: (name?: string) => void;\n}\n\nexport function Project(props: IProjectProps) {\n\n    return ( \n        <Pane className=\"project\">\n            <Pane>\n                <Pane className=\"projectHeader main\">\n                    <Heading className=\"wide\">Project {props.name}</Heading> \n                </Pane>\n            </Pane>\n            <ProjectActions name={props.name} showProject={props.showProject}/>\n            <Layers name={props.name} />\n            <Styles project={props.name}/>\n        </Pane>\n    );\n}\n\n","import { Pane, Tablist, Tab, Heading, AddIcon } from 'evergreen-ui'\nimport { apiurl } from '../../../url'\nimport { InputDialog } from '../dialog';\n\ninterface IProjectListProps {\n    currentProject: string | undefined;\n    onSelect: (name: string) => void;\n    projects: string[];\n}\n\nexport function ProjectList(props: IProjectListProps) {\n\n  return (\n    <Pane className=\"list\">\n        <Heading className=\"projectList title\">Projects</Heading>\n\n        <InputDialog\n                submitUrl={apiurl.ADDPROJECT}\n                title=\"Add Project\"\n                label={`Choose the name of the new project`}\n                confirmLabel=\"Create\"\n                method=\"post\"\n                submitBody={(name) => { return { name: name } }}\n                onSubmit={(project) => { props.onSelect(project) }}\n                onError={(reject, style) => {return \"Project already exists\"}} \n            >\n              <Pane className=\"projectList action\"><AddIcon/>Add Project</Pane>\n          </InputDialog>\n\n        <Tablist className=\"projectList tabs\">\n        {props.projects.map((project) => (\n            <Tab\n            key={project}\n            id={`tab-${project}`}\n            onSelect={() => props.onSelect(project)}\n            isSelected={project === props.currentProject}>\n            {project}\n            </Tab>\n        ))}\n        </Tablist>\n    </Pane>\n  );\n}","import { Pane, EmptyState, ProjectsIcon } from 'evergreen-ui'\nimport { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom';\nimport iaxios from '../axios';\nimport { url, apiurl } from '../url';\nimport { Header } from './elements/header'\nimport { Project } from './elements/project'\nimport { ProjectList } from './elements/project/projectlist'\nimport { authUser } from './login';\n\n\nexport function Projects() {\n    const { project_name } = useParams<{ project_name: string|undefined }>();\n    const [currentProject, setCurrentProject] = useState<string|undefined>(project_name);\n    const [projects, setProjects] = useState<string[]>([]);\n    const history = useHistory();\n\n    const getProjects = () => {\n        iaxios.get(apiurl.LISTPROJECT).then((response) => {\n            setProjects(response.data);\n        });\n    }\n\n    useEffect(() => {\n        authUser(history, () => {\n            getProjects();\n        });\n        return () => {\n            setProjects([]);\n        };\n    }, []);\n\n    const showProject = (name?: string) => {\n        getProjects();\n        setCurrentProject(name);\n\n        let lurl = url.PROJECTS;\n        if (name)\n            lurl += name;\n        history.push(lurl);\n    }\n\n    return (\n        <Pane>\n            <Header projects />\n            <Pane className=\"projects\">\n                <ProjectList\n                    currentProject={currentProject}\n                    onSelect={showProject}\n                    projects={projects}\n                />\n                <Pane className={`content ${currentProject ? \"\" : \"empty\"}`} justifyContent=\"center\" alignItems=\"center\">\n                    {currentProject ?\n                        (projects.indexOf(currentProject) > -1 ?    \n                            <Project\n                            name={currentProject} \n                            showProject={showProject}\n                            /> :\n                            <EmptyState\n                            background=\"light\"\n                            title={`Project ${currentProject} not found`}\n                            orientation=\"vertical\"\n                            icon={<ProjectsIcon color=\"#C1C4D6\" />}\n                            iconBgColor=\"#EDEFF5\"\n                        />                            \n                        ) :\n                        <EmptyState\n                            background=\"light\"\n                            title=\"No project selected\"\n                            orientation=\"vertical\"\n                            icon={<ProjectsIcon color=\"#C1C4D6\" />}\n                            iconBgColor=\"#EDEFF5\"\n                        />}\n                </Pane>\n            </Pane>\n        </Pane>\n    );\n}","import { Pane, Heading, LayersIcon, Icon, TextInput, Button, Spinner, Text } from 'evergreen-ui'\nimport { useEffect, useState, createRef, FormEvent } from 'react'\nimport { useHistory, useParams } from 'react-router-dom';\nimport iaxios from '../axios';\nimport { url, apiurl } from '../url';\nimport { Header } from './elements/header'\nimport { authUser } from './login';\nimport { useDropzone } from 'react-dropzone';\nimport { toast } from 'react-toastify';\n\n\ninterface IDropzone {\n    submit: (layer_name: string, files: File[]) => void;\n};\n\nfunction Dropzone(props: IDropzone) {\n    const { acceptedFiles, getRootProps, getInputProps } = useDropzone();\n    const name = createRef<HTMLInputElement>();\n\n    const files = acceptedFiles.map(file => (\n        <li key={file.name}>\n            <span className=\"fileName\">{file.name}</span><span className=\"fileSize\">{file.size} bytes</span>\n        </li>\n    ));\n\n    const submit = (event: FormEvent) => {\n        event.preventDefault();\n        props.submit(name.current!.value, acceptedFiles);\n    }\n\n    return (\n        <Pane className=\"dropzoneContainer\">\n            <form onSubmit={submit} id=\"layerUploadForm\">\n                <TextInput placeholder=\"layer name\" ref={name} className=\"layerName\" />\n                <div {...getRootProps({ className: \"dropzone\" })}>\n                    <input {...getInputProps()} />\n                    <p>Click or drag 'n' drop layer files here</p>\n                    <ul className=\"filelist\">{files}</ul>\n                </div>\n            </form>\n            <Button appearance=\"primary\" type=\"submit\" form=\"layerUploadForm\">\n                Upload\n            </Button>\n        </Pane>\n    );\n}\n\n\n\nexport function UploadLayer() {\n    const { project_name } = useParams<{ project_name: string }>();\n    const history = useHistory();\n\n    const [progress, setProgress] = useState<number>(0);\n    const [uploading, setUploading] = useState<boolean>(false);\n\n    useEffect(() => {\n        authUser(history, () => { });\n    }, []);\n\n    const submit = (layer_name: string, files: File[]) => {\n        if (uploading)\n            return;\n\n        if (layer_name === undefined || layer_name.length == 0)\n        {\n            toast('No name specified');\n            return;\n        }\n\n        if (files === undefined || files.length == 0)\n        {\n            toast('No files provided');\n            return;\n        }\n\n        setUploading(true);\n\n        let formData = new FormData();\n        formData.append(\"project\", project_name);\n        formData.append(\"layer\", layer_name);\n        files.forEach(dataset => {\n            formData.append(\"files\", dataset)\n        });\n\n        iaxios.post(apiurl.ADDLAYER, formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            },\n            onUploadProgress: progressEvent => setProgress(progressEvent.loaded / progressEvent.total * 100)\n        }).then((response) => {\n            history.push(url.JOBS);\n        })\n    }\n\n\n    return (\n        <Pane>\n            <Header projects />\n            <Pane className=\"upload\">\n                { uploading ?\n                    <Spinner/>\n                    :\n                    <Icon icon={LayersIcon} size={30} color=\"#C1C4D6\" background=\"#EDEFF5\" className=\"uploadIcon\" padding={20} borderRadius={40} />\n                }\n                <Heading className=\"uploadTitle\">Uploading Layer to Project {project_name}</Heading>\n                { uploading ?\n                    <Pane className=\"progress\">\n                        <Text className=\"label\">{progress.toFixed(0)}%</Text>\n                    </Pane> \n                    :\n                    <Dropzone submit={submit} />\n                }\n            </Pane>\n\n        </Pane>\n    );\n}","import { Pane, Table, CodeIcon, ApplicationIcon, IconButton, EmptyState, ConsoleIcon, SideSheet, Heading } from 'evergreen-ui'\nimport { useEffect, useState } from 'react'\nimport iaxios from '../../axios'\nimport { apiurl } from '../../url'\nimport ReactJson from 'react-json-view'\n\n\ninterface IJob {\n    type: string;\n    status: number;\n    project?: string;\n    job_id: string;\n}\n\nexport function JobList() {\n    const [jobs, setJobs] = useState<IJob[]>([]);\n    const [selectedJob, setSelectedJob] = useState<IJob | undefined>(undefined);\n    const [detailIsShown, setDetailIsShown] = useState(false)\n\n    let update: NodeJS.Timeout;\n\n    const loadJobs = () => {\n        iaxios.get(apiurl.LISTJOBS).then((response) => {\n            setJobs(response.data);\n            update = setTimeout(loadJobs, 2000);\n        });\n    }\n\n    useEffect(() => {\n        loadJobs();\n        return () => {\n            clearTimeout(update);\n            setJobs([]);\n        };\n    }, []);\n\n    return (\n        <Pane>\n            <SideSheet\n                isShown={detailIsShown}\n                onCloseComplete={() => setDetailIsShown(false)}\n                preventBodyScrolling>\n                <Pane className=\"jsonRaw\">\n                    <Heading className=\"jsonHeading\">Job {selectedJob?.job_id}</Heading>\n\n                    <Pane className=\"json\">\n                        <ReactJson \n                            src={selectedJob as object} \n                            enableClipboard={false}\n                            theme={{\n                                base00: \"#FFF\",\n                                base01: \"#DDD\",\n                                base02: \"#DDD\",\n                                base03: \"#444\",\n                                base04: \"#BBB\",\n                                base05: \"#444\",\n                                base06: \"#444\",\n                                base07: \"#444\",\n                                base08: \"#444\",\n                                base09: \"#3366FF\",\n                                base0A: \"#3366FF\",\n                                base0B: \"#3366FF\",\n                                base0C: \"#3366FF\",\n                                base0D: \"#BBB\",\n                                base0E: \"#BBB\",\n                                base0F: \"#3366FF\"\n                                //https://github.com/chriskempson/base16/blob/master/styling.md\n                            }}/>\n                    </Pane>\n                </Pane>\n            </SideSheet>\n            <Table>\n                <Table.Head className=\"row\">\n                    <Table.TextHeaderCell className=\"wide\">Job Type</Table.TextHeaderCell>\n                    <Table.TextHeaderCell className=\"wide\">Status</Table.TextHeaderCell>\n                    <Table.TextHeaderCell className=\"wide\">Project</Table.TextHeaderCell>\n                    <Table.TextHeaderCell className=\"narrow\">Log</Table.TextHeaderCell>\n                    <Table.TextHeaderCell className=\"narrow\">Raw</Table.TextHeaderCell>\n                </Table.Head>\n                <Table.Body>\n                    {jobs.length > 0 ? jobs.map((job) => (\n                        <Table.Row key={job.job_id} paddingY={12} height=\"auto\" className=\"row\">\n                            <Table.TextCell className=\"wide\">{job.type}</Table.TextCell>\n                            <Table.TextCell className=\"wide\">{job.status}</Table.TextCell>\n                            <Table.TextCell className=\"wide\">{job.project ? job.project : \"--\"}</Table.TextCell>\n                            <Table.TextCell className=\"narrow\">\n                                <IconButton icon={ApplicationIcon} onClick={() => {}} disabled/>\n                            </Table.TextCell>\n                            <Table.TextCell className=\"narrow\">\n                                <IconButton icon={CodeIcon} onClick={() => { setSelectedJob(job); setDetailIsShown(true); }} />\n                            </Table.TextCell>\n                        </Table.Row>\n                    )) :\n                        <EmptyState\n                            background=\"light\"\n                            title=\"No Running Jobs\"\n                            orientation=\"horizontal\"\n                            icon={<ConsoleIcon color=\"#C1C4D6\" />}\n                            iconBgColor=\"#EDEFF5\"\n                            description=\"Jobs run in the background and process input data into visualizable elements\"\n                        />\n                    }\n                </Table.Body>\n            </Table>\n        </Pane>\n    );\n}\n\n","import { Pane, Pre } from 'evergreen-ui'\nimport { useEffect, useState } from 'react'\nimport iaxios from '../../axios'\nimport { apiurl } from '../../url'\n\n\ninterface ILogProps {\n    name: string;\n}\n\nexport function Log(props: ILogProps) {\n    const [contents, setContents] = useState(\"\");\n\n    let update: NodeJS.Timeout;\n\n    const loadLog = () => {\n        iaxios.post(apiurl.LOG, {\n            name: props.name\n        }).then((response) => {\n            setContents(response.data);\n            update = setTimeout(loadLog, 2000);\n        })\n    }\n\n    useEffect(() => {\n        loadLog();\n        return () => {\n            setContents(\"\");\n            clearTimeout(update);\n        };\n    }, [props.name]);\n\n    return ( \n        <Pane className=\"logContents\">\n            { contents && contents.length > 0 ?\n                <Pre className=\"logLines\">{contents.split(/[\\r\\n]+/).map((line, index) => <span key={index}>{line}</span>)}</Pre>\n                :\n                <Pre>No contents</Pre>\n            }\n        </Pane>\n    );\n}\n\n","import { Pane, Tablist, Tab, EmptyState, ApplicationIcon } from 'evergreen-ui'\nimport { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { Log } from './log'\nimport iaxios from '../../axios'\nimport { url, apiurl } from '../../url'\nimport { EvergreenReactRouterLink } from './header'\nimport ReactJson from 'react-json-view'\n\n\nexport function LogList() {\n    const [logs, setLogs] = useState<string[]>([]);\n    const [selectedLog, setSelectedLog] = useState<string | undefined>(undefined);\n\n    let update: NodeJS.Timeout;\n\n    const loadLogs = () => {\n        iaxios.get(apiurl.LISTLOGS).then((response) => {\n            setLogs(response.data);\n            update = setTimeout(loadLogs, 2000);\n        });\n    }\n\n    useEffect(() => {\n        loadLogs();\n        return () => {\n            setLogs([]);\n            clearTimeout(update);\n        };\n    }, []);\n\n    return (\n        <Pane>\n            <Tablist className=\"logList\" marginBottom={16} flexBasis={240} marginRight={24}>\n                {logs.map((log, index) => (\n                    <Tab\n                        key={log}\n                        id={log}\n                        onSelect={() => setSelectedLog(log)}\n                        isSelected={log === selectedLog}\n                        aria-controls={`panel-${log}`}\n                        className=\"logTab\"\n                    >\n                        {log}\n                    </Tab>\n                ))}\n            </Tablist>\n            <Pane>\n                { selectedLog ?\n                    <Log name={selectedLog}/>\n                :\n                <EmptyState\n                    background=\"light\"\n                    title=\"No Log selected\"\n                    orientation=\"horizontal\"\n                    icon={<ApplicationIcon color=\"#C1C4D6\" />}\n                    iconBgColor=\"#EDEFF5\"\n                    description=\"Logs contain debug information for running processes\"\n                />\n                }\n            </Pane>\n        </Pane>\n    );\n}\n\n","import { Pane, Heading } from 'evergreen-ui'\nimport { useEffect} from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { Header } from './elements/header'\nimport { JobList } from './elements/jobs'\nimport { LogList } from './elements/logs'\nimport { authUser } from './login';\n\n\nexport function Jobs() {\n    const history = useHistory();\n\n    useEffect(() => {\n        authUser(history, () => { });\n    }, []);\n\n    return (\n        <Pane>\n            <Header jobs />\n            <Pane className=\"jobs\">\n                <Heading className=\"jobsHeading\">Jobs</Heading>\n                <JobList />\n            </Pane>\n            <Pane className=\"logs\">\n                <Heading className=\"logsHeading\">Logs</Heading>\n                <LogList />\n            </Pane>\n        </Pane>\n    );\n}","import { Pane, Heading, LayersIcon, Icon, TextInput, Button, Spinner, Text, SelectMenu, MergeColumnsIcon, Tooltip, Paragraph, ArrowRightIcon, Code } from 'evergreen-ui'\nimport { useEffect, useState, createRef, FormEvent } from 'react'\nimport { useHistory, useParams } from 'react-router-dom';\nimport iaxios from '../axios';\nimport { url, apiurl } from '../url';\nimport { Header } from './elements/header'\nimport { authUser } from './login';\nimport { toast } from 'react-toastify';\nimport { ILayer } from './elements/layers';\n\n\n\nexport function Mapping() {\n    const { project_name } = useParams<{ project_name: string }>();\n    const [layers, setLayers] = useState<ILayer[]>([]);\n    const [selectedSource, setSelectedSource] = useState<string | undefined>(undefined);\n    const [selectedTarget, setSelectedTarget] = useState<string | undefined>(undefined);\n    const name = createRef<HTMLInputElement>();\n    const history = useHistory();\n\n\n    const loadLayers = () => {\n        iaxios.post(apiurl.LISTLAYER, { name: project_name }).then((response) => {\n            setLayers(response.data.filter((x: ILayer) => x.type === 'layer'));\n        });\n    }\n\n    useEffect(() => {\n        authUser(history, () => {\n            loadLayers();\n        })\n\n        return () => {\n            setLayers([]);\n        };\n    }, [project_name]);\n\n\n    const submit = (event: FormEvent) => {\n        event.preventDefault();\n\n        const overlay_name = name.current!.value;\n        if (overlay_name === undefined || overlay_name.length == 0)\n        {\n            toast.error('No name specified.');\n            return;\n        }\n\n        if (selectedSource === undefined || selectedTarget === undefined) {\n            toast.error('Please select source and target layer.');\n            return;\n        }\n\n        if (selectedSource === selectedTarget) {\n            toast.error('Source and target layer cannot be same.');\n            return;\n        }\n\n        iaxios.post(apiurl.MAPLAYERS, {\n                project: project_name,\n                source: selectedSource,\n                target: selectedTarget,\n                overlay: overlay_name\n            }).then(() => {\n                toast.success('Mapping layers successfully.');\n            }).catch(() => {\n                toast.error('Mapping layers failed.');\n            });\n    };\n\n\n    return (\n        <Pane>\n            <Header projects />\n            <Pane className=\"mapping\">\n                <Icon icon={MergeColumnsIcon} size={30} color=\"#C1C4D6\" background=\"#EDEFF5\" className=\"uploadIcon\" padding={20} borderRadius={40} />\n                <Heading className=\"mappingTitle\">Layer mapping in Project {project_name}</Heading>\n\n                <Pane className=\"mappingDialog\">\n                    <form onSubmit={submit} id=\"layerMappingForm\">\n                        <TextInput placeholder=\"overlay name\" ref={name} className=\"layerName\" />\n                        <Paragraph className=\"mappingDescription\">\n                            Geometry of source layer is mapped onto geometry of target layer. The output of this operation is a new layer with type <Code size={300}>overlay</Code>. The <Code size={300}>source</Code> layer can contain any geometry, the <Code size={300}>target</Code> layer must contain any <Code size={300}>polygons</Code>.\n                        </Paragraph>\n                        <Pane className=\"mappingLayerPicker\">\n                            <SelectMenu\n                                title=\"Select source layer\"\n                                options={layers.map((layer) => ({ label: layer.name, value: layer.name }))}\n                                selected={selectedSource}\n                                onSelect={(item) => setSelectedSource(item.value as string)}\n                            >\n                                <Tooltip content=\"Can contain 2D or 3D points, lines or polygons\">\n                                    <Button type=\"button\">{selectedSource || 'select source layer'}</Button>\n                                </Tooltip>\n                        </SelectMenu>\n                        <Pane className=\"dialogPart\">\n                            <Icon icon={ArrowRightIcon} color=\"#C1C4D6\"/>\n                        </Pane>\n                        <SelectMenu\n                            title=\"Select target layer\"\n                            options={layers.map((layer) => ({ label: layer.name, value: layer.name }))}\n                            selected={selectedTarget}\n                            onSelect={(item) => setSelectedTarget(item.value as string)}\n                        >\n                            <Tooltip content=\"Must contain 2D or 3D polygons\">\n                            <Button type=\"button\">{selectedTarget || 'select target layer'}</Button>\n                            </Tooltip>\n                        </SelectMenu>\n                        </Pane>\n                    </form>\n                    <Button appearance=\"primary\" type=\"submit\" form=\"layerMappingForm\">\n                        Apply Mapping\n                    </Button>\n                </Pane>\n            </Pane>\n        </Pane>\n    );\n}","import { Vector3, Matrix4 } from 'three';\n\nconst inverseProjectionMatrix = new Matrix4();\n\nclass Frustum {\n\n\tconstructor( data ) {\n\n\t\tdata = data || {};\n\n\t\tthis.vertices = {\n\t\t\tnear: [\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3()\n\t\t\t],\n\t\t\tfar: [\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3()\n\t\t\t]\n\t\t};\n\n\t\tif ( data.projectionMatrix !== undefined ) {\n\n\t\t\tthis.setFromProjectionMatrix( data.projectionMatrix, data.maxFar || 10000 );\n\n\t\t}\n\n\t}\n\n\tsetFromProjectionMatrix( projectionMatrix, maxFar ) {\n\n\t\tconst isOrthographic = projectionMatrix.elements[ 2 * 4 + 3 ] === 0;\n\n\t\tinverseProjectionMatrix.copy( projectionMatrix ).invert();\n\n\t\t// 3 --- 0  vertices.near/far order\n\t\t// |     |\n\t\t// 2 --- 1\n\t\t// clip space spans from [-1, 1]\n\n\t\tthis.vertices.near[ 0 ].set( 1, 1, - 1 );\n\t\tthis.vertices.near[ 1 ].set( 1, - 1, - 1 );\n\t\tthis.vertices.near[ 2 ].set( - 1, - 1, - 1 );\n\t\tthis.vertices.near[ 3 ].set( - 1, 1, - 1 );\n\t\tthis.vertices.near.forEach( function ( v ) {\n\n\t\t\tv.applyMatrix4( inverseProjectionMatrix );\n\n\t\t} );\n\n\t\tthis.vertices.far[ 0 ].set( 1, 1, 1 );\n\t\tthis.vertices.far[ 1 ].set( 1, - 1, 1 );\n\t\tthis.vertices.far[ 2 ].set( - 1, - 1, 1 );\n\t\tthis.vertices.far[ 3 ].set( - 1, 1, 1 );\n\t\tthis.vertices.far.forEach( function ( v ) {\n\n\t\t\tv.applyMatrix4( inverseProjectionMatrix );\n\n\t\t\tconst absZ = Math.abs( v.z );\n\t\t\tif ( isOrthographic ) {\n\n\t\t\t\tv.z *= Math.min( maxFar / absZ, 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\tv.multiplyScalar( Math.min( maxFar / absZ, 1.0 ) );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn this.vertices;\n\n\t}\n\n\tsplit( breaks, target ) {\n\n\t\twhile ( breaks.length > target.length ) {\n\n\t\t\ttarget.push( new Frustum() );\n\n\t\t}\n\n\t\ttarget.length = breaks.length;\n\n\t\tfor ( let i = 0; i < breaks.length; i ++ ) {\n\n\t\t\tconst cascade = target[ i ];\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tfor ( let j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\tcascade.vertices.near[ j ].copy( this.vertices.near[ j ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( let j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\tcascade.vertices.near[ j ].lerpVectors( this.vertices.near[ j ], this.vertices.far[ j ], breaks[ i - 1 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( i === breaks.length - 1 ) {\n\n\t\t\t\tfor ( let j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\tcascade.vertices.far[ j ].copy( this.vertices.far[ j ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( let j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\tcascade.vertices.far[ j ].lerpVectors( this.vertices.near[ j ], this.vertices.far[ j ], breaks[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoSpace( cameraMatrix, target ) {\n\n\t\tfor ( var i = 0; i < 4; i ++ ) {\n\n\t\t\ttarget.vertices.near[ i ]\n\t\t\t\t.copy( this.vertices.near[ i ] )\n\t\t\t\t.applyMatrix4( cameraMatrix );\n\n\t\t\ttarget.vertices.far[ i ]\n\t\t\t\t.copy( this.vertices.far[ i ] )\n\t\t\t\t.applyMatrix4( cameraMatrix );\n\n\t\t}\n\n\t}\n\n}\n\nexport { Frustum };\n","import { ShaderChunk } from 'three';\n\nconst CSMShader = {\n\tlights_fragment_begin: /* glsl */`\nGeometricContext geometry;\n\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n\n#ifdef CLEARCOAT\n\n\tgeometry.clearcoatNormal = clearcoatNormal;\n\n#endif\n\nIncidentLight directLight;\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0) && defined( RE_Direct ) && defined( USE_CSM ) && defined( CSM_CASCADES )\n\n\tDirectionalLight directionalLight;\n\tfloat linearDepth = (vViewPosition.z) / (shadowFar - cameraNear);\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#if defined( USE_SHADOWMAP ) && defined( CSM_FADE )\n\tvec2 cascade;\n\tfloat cascadeCenter;\n\tfloat closestEdge;\n\tfloat margin;\n\tfloat csmx;\n\tfloat csmy;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\n\t\t// NOTE: Depth gets larger away from the camera.\n\t\t// cascade.x is closer, cascade.y is further\n\t\tcascade = CSM_cascades[ i ];\n\t\tcascadeCenter = ( cascade.x + cascade.y ) / 2.0;\n\t\tclosestEdge = linearDepth < cascadeCenter ? cascade.x : cascade.y;\n\t\tmargin = 0.25 * pow( closestEdge, 2.0 );\n\t\tcsmx = cascade.x - margin / 2.0;\n\t\tcsmy = cascade.y + margin / 2.0;\n\t\tif( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS && linearDepth >= csmx && ( linearDepth < csmy || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 ) ) {\n\n\t\t\tfloat dist = min( linearDepth - csmx, csmy - linearDepth );\n\t\t\tfloat ratio = clamp( dist / margin, 0.0, 1.0 );\n\t\t\tif( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS ) {\n\n\t\t\t\tvec3 prevColor = directLight.color;\n\t\t\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\t\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t\t\t\tbool shouldFadeLastCascade = UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 && linearDepth > cascadeCenter;\n\t\t\t\tdirectLight.color = mix( prevColor, directLight.color, shouldFadeLastCascade ? ratio : 1.0 );\n\n\t\t\t}\n\n\t\t\tReflectedLight prevLight = reflectedLight;\n\t\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t\t\tbool shouldBlend = UNROLLED_LOOP_INDEX != CSM_CASCADES - 1 || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 && linearDepth < cascadeCenter;\n\t\t\tfloat blendRatio = shouldBlend ? ratio : 1.0;\n\n\t\t\treflectedLight.directDiffuse = mix( prevLight.directDiffuse, reflectedLight.directDiffuse, blendRatio );\n\t\t\treflectedLight.directSpecular = mix( prevLight.directSpecular, reflectedLight.directSpecular, blendRatio );\n\t\t\treflectedLight.indirectDiffuse = mix( prevLight.indirectDiffuse, reflectedLight.indirectDiffuse, blendRatio );\n\t\t\treflectedLight.indirectSpecular = mix( prevLight.indirectSpecular, reflectedLight.indirectSpecular, blendRatio );\n\n\t\t}\n\n\t}\n\t#pragma unroll_loop_end\n\t#else\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tif(linearDepth >= CSM_cascades[UNROLLED_LOOP_INDEX].x && linearDepth < CSM_cascades[UNROLLED_LOOP_INDEX].y) directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t\t#endif\n\n\t\tif(linearDepth >= CSM_cascades[UNROLLED_LOOP_INDEX].x && (linearDepth < CSM_cascades[UNROLLED_LOOP_INDEX].y || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1)) RE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct ) && !defined( USE_CSM ) && !defined( CSM_CASCADES )\n\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\n\tRectAreaLight rectAreaLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n\tvec3 iblIrradiance = vec3( 0.0 );\n\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n\n#endif\n`,\n\tlights_pars_begin: /* glsl */`\n#if defined( USE_CSM ) && defined( CSM_CASCADES )\nuniform vec2 CSM_cascades[CSM_CASCADES];\nuniform float cameraNear;\nuniform float shadowFar;\n#endif\n\t` + ShaderChunk.lights_pars_begin\n};\n\nexport { CSMShader };\n","import {\n\tVector2,\n\tVector3,\n\tDirectionalLight,\n\tMathUtils,\n\tShaderChunk,\n\tMatrix4,\n\tBox3\n} from 'three';\nimport { Frustum } from './Frustum.js';\nimport { CSMShader } from './CSMShader.js';\n\nconst _cameraToLightMatrix = new Matrix4();\nconst _lightSpaceFrustum = new Frustum();\nconst _center = new Vector3();\nconst _bbox = new Box3();\nconst _uniformArray = [];\nconst _logArray = [];\n\nexport class CSM {\n\n\tconstructor( data ) {\n\n\t\tdata = data || {};\n\n\t\tthis.camera = data.camera;\n\t\tthis.parent = data.parent;\n\t\tthis.cascades = data.cascades || 3;\n\t\tthis.maxFar = data.maxFar || 100000;\n\t\tthis.mode = data.mode || 'practical';\n\t\tthis.shadowMapSize = data.shadowMapSize || 2048;\n\t\tthis.shadowBias = [];\n\n\t\tfor(let i = 0; i < this.cascades; ++i)\n\t\t\tthis.shadowBias.push(data.shadowBias ? data.shadowBias[i] : 0.000001);\n\n\t\tthis.lightDirection = data.lightDirection || new Vector3( 1, - 1, 1 ).normalize();\n\t\tthis.lightIntensity = data.lightIntensity || 1;\n\t\tthis.lightNear = data.lightNear || 1;\n\t\tthis.lightFar = data.lightFar || 2000;\n\t\t\n\t\tthis.lightMargin = data.lightMargin || 200;\n\t\tthis.customSplitsCallback = data.customSplitsCallback;\n\t\tthis.fade = false;\n\t\tthis.mainFrustum = new Frustum();\n\t\tthis.frustums = [];\n\t\tthis.breaks = [];\n\n\t\tthis.lights = [];\n\t\tthis.shaders = new Map();\n\n\t\tthis.createLights();\n\t\tthis.updateFrustums();\n\t\tthis.injectInclude();\n\n\t}\n\n\tcreateLights() {\n\n\t\tfor ( let i = 0; i < this.cascades; i ++ ) {\n\n\t\t\tconst light = new DirectionalLight( 0xffffff, this.lightIntensity );\n\t\t\tlight.castShadow = true;\n\t\t\tlight.shadow.mapSize.width = this.shadowMapSize;\n\t\t\tlight.shadow.mapSize.height = this.shadowMapSize;\n\n\t\t\tlight.shadow.camera.near = this.lightNear;\n\t\t\tlight.shadow.camera.far = this.lightFar;\n\t\t\tlight.shadow.bias = this.shadowBias[i];\n\n\t\t\tthis.parent.add( light );\n\t\t\tthis.parent.add( light.target );\n\t\t\tthis.lights.push( light );\n\n\t\t}\n\n\t}\n\n\tinitCascades() {\n\n\t\tconst camera = this.camera;\n\t\tcamera.updateProjectionMatrix();\n\t\tthis.mainFrustum.setFromProjectionMatrix( camera.projectionMatrix, this.maxFar );\n\t\tthis.mainFrustum.split( this.breaks, this.frustums );\n\n\t}\n\n\tupdateShadowBounds() {\n\n\t\tconst frustums = this.frustums;\n\t\tfor ( let i = 0; i < frustums.length; i ++ ) {\n\n\t\t\tconst light = this.lights[ i ];\n\t\t\tconst shadowCam = light.shadow.camera;\n\t\t\tconst frustum = this.frustums[ i ];\n\n\t\t\t// Get the two points that represent that furthest points on the frustum assuming\n\t\t\t// that's either the diagonal across the far plane or the diagonal across the whole\n\t\t\t// frustum itself.\n\t\t\tconst nearVerts = frustum.vertices.near;\n\t\t\tconst farVerts = frustum.vertices.far;\n\t\t\tconst point1 = farVerts[ 0 ];\n\t\t\tlet point2;\n\t\t\tif ( point1.distanceTo( farVerts[ 2 ] ) > point1.distanceTo( nearVerts[ 2 ] ) ) {\n\n\t\t\t\tpoint2 = farVerts[ 2 ];\n\n\t\t\t} else {\n\n\t\t\t\tpoint2 = nearVerts[ 2 ];\n\n\t\t\t}\n\n\t\t\tlet squaredBBWidth = point1.distanceTo( point2 );\n\t\t\tif ( this.fade ) {\n\n\t\t\t\t// expand the shadow extents by the fade margin if fade is enabled.\n\t\t\t\tconst camera = this.camera;\n\t\t\t\tconst far = Math.max( camera.far, this.maxFar );\n\t\t\t\tconst linearDepth = frustum.vertices.far[ 0 ].z / ( far - camera.near );\n\t\t\t\tconst margin = 0.25 * Math.pow( linearDepth, 2.0 ) * ( far - camera.near );\n\t\t\t\tsquaredBBWidth += margin;\n\n\t\t\t}\n\n\t\t\tshadowCam.left = - squaredBBWidth / 2;\n\t\t\tshadowCam.right = squaredBBWidth / 2;\n\t\t\tshadowCam.top = squaredBBWidth / 2;\n\t\t\tshadowCam.bottom = - squaredBBWidth / 2;\n\t\t\tshadowCam.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n\tgetBreaks() {\n\n\t\tconst camera = this.camera;\n\t\tconst far = Math.min( camera.far, this.maxFar );\n\t\tthis.breaks.length = 0;\n\n\t\tswitch ( this.mode ) {\n\n\t\t\tcase 'uniform':\n\t\t\t\tuniformSplit( this.cascades, camera.near, far, this.breaks );\n\t\t\t\tbreak;\n\t\t\tcase 'logarithmic':\n\t\t\t\tlogarithmicSplit( this.cascades, camera.near, far, this.breaks );\n\t\t\t\tbreak;\n\t\t\tcase 'practical':\n\t\t\t\tpracticalSplit( this.cascades, camera.near, far, 0.8, this.breaks );\n\t\t\t\tbreak;\n\t\t\tcase 'custom':\n\t\t\t\tif ( this.customSplitsCallback === undefined ) console.error( 'CSM: Custom split scheme callback not defined.' );\n\t\t\t\tthis.customSplitsCallback( this.cascades, camera.near, far, this.breaks );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tfunction uniformSplit( amount, near, far, target ) {\n\n\t\t\tfor ( let i = 1; i < amount; i ++ ) {\n\n\t\t\t\ttarget.push( ( near + ( far - near ) * i / amount ) / far );\n\n\t\t\t}\n\n\t\t\ttarget.push( 1 );\n\n\t\t}\n\n\t\tfunction logarithmicSplit( amount, near, far, target ) {\n\n\t\t\tfor ( let i = 1; i < amount; i ++ ) {\n\n\t\t\t\ttarget.push( ( near * ( far / near ) ** ( i / amount ) ) / far );\n\n\t\t\t}\n\n\t\t\ttarget.push( 1 );\n\n\t\t}\n\n\t\tfunction practicalSplit( amount, near, far, lambda, target ) {\n\n\t\t\t_uniformArray.length = 0;\n\t\t\t_logArray.length = 0;\n\t\t\tlogarithmicSplit( amount, near, far, _logArray );\n\t\t\tuniformSplit( amount, near, far, _uniformArray );\n\n\t\t\tfor ( let i = 1; i < amount; i ++ ) {\n\n\t\t\t\ttarget.push( MathUtils.lerp( _uniformArray[ i - 1 ], _logArray[ i - 1 ], lambda ) );\n\n\t\t\t}\n\n\t\t\ttarget.push( 1 );\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst camera = this.camera;\n\t\tconst frustums = this.frustums;\n\t\tfor ( let i = 0; i < frustums.length; i ++ ) {\n\n\t\t\tconst light = this.lights[ i ];\n\t\t\tconst shadowCam = light.shadow.camera;\n\t\t\tconst texelWidth = ( shadowCam.right - shadowCam.left ) / this.shadowMapSize;\n\t\t\tconst texelHeight = ( shadowCam.top - shadowCam.bottom ) / this.shadowMapSize;\n\t\t\tlight.shadow.camera.updateMatrixWorld( true );\n\t\t\t_cameraToLightMatrix.multiplyMatrices( light.shadow.camera.matrixWorldInverse, camera.matrixWorld );\n\t\t\tfrustums[ i ].toSpace( _cameraToLightMatrix, _lightSpaceFrustum );\n\n\t\t\tconst nearVerts = _lightSpaceFrustum.vertices.near;\n\t\t\tconst farVerts = _lightSpaceFrustum.vertices.far;\n\t\t\t_bbox.makeEmpty();\n\t\t\tfor ( let j = 0; j < 4; j ++ ) {\n\n\t\t\t\t_bbox.expandByPoint( nearVerts[ j ] );\n\t\t\t\t_bbox.expandByPoint( farVerts[ j ] );\n\n\t\t\t}\n\n\t\t\t_bbox.getCenter( _center );\n\t\t\t_center.z = _bbox.max.z + this.lightMargin;\n\t\t\t_center.x = Math.floor( _center.x / texelWidth ) * texelWidth;\n\t\t\t_center.y = Math.floor( _center.y / texelHeight ) * texelHeight;\n\t\t\t_center.applyMatrix4( light.shadow.camera.matrixWorld );\n\n\t\t\tlight.position.copy( _center );\n\t\t\tlight.target.position.copy( _center );\n\n\t\t\tlight.target.position.x += this.lightDirection.x;\n\t\t\tlight.target.position.y += this.lightDirection.y;\n\t\t\tlight.target.position.z += this.lightDirection.z;\n\n\t\t}\n\n\t}\n\n\tinjectInclude() {\n\n\t\tShaderChunk.lights_fragment_begin = CSMShader.lights_fragment_begin;\n\t\tShaderChunk.lights_pars_begin = CSMShader.lights_pars_begin;\n\n\t}\n\n\tsetupMaterial( material ) {\n\n\t\tmaterial.defines = material.defines || {};\n\t\tmaterial.defines.USE_CSM = 1;\n\t\tmaterial.defines.CSM_CASCADES = this.cascades;\n\n\t\tif ( this.fade ) {\n\n\t\t\tmaterial.defines.CSM_FADE = '';\n\n\t\t}\n\n\t\tconst breaksVec2 = [];\n\t\tconst scope = this;\n\t\tconst shaders = this.shaders;\n\n\t\tmaterial.onBeforeCompile = function ( shader ) {\n\n\t\t\tconst far = Math.min( scope.camera.far, scope.maxFar );\n\t\t\tscope.getExtendedBreaks( breaksVec2 );\n\n\t\t\tshader.uniforms.CSM_cascades = { value: breaksVec2 };\n\t\t\tshader.uniforms.cameraNear = { value: scope.camera.near };\n\t\t\tshader.uniforms.shadowFar = { value: far };\n\n\t\t\tshaders.set( material, shader );\n\n\t\t};\n\n\t\tshaders.set( material, null );\n\n\t}\n\n\tupdateUniforms() {\n\n\t\tconst far = Math.min( this.camera.far, this.maxFar );\n\t\tconst shaders = this.shaders;\n\n\t\tshaders.forEach( function ( shader, material ) {\n\n\t\t\tif ( shader !== null ) {\n\n\t\t\t\tconst uniforms = shader.uniforms;\n\t\t\t\tthis.getExtendedBreaks( uniforms.CSM_cascades.value );\n\t\t\t\tuniforms.cameraNear.value = this.camera.near;\n\t\t\t\tuniforms.shadowFar.value = far;\n\n\t\t\t}\n\n\t\t\tif ( ! this.fade && 'CSM_FADE' in material.defines ) {\n\n\t\t\t\tdelete material.defines.CSM_FADE;\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( this.fade && ! ( 'CSM_FADE' in material.defines ) ) {\n\n\t\t\t\tmaterial.defines.CSM_FADE = '';\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}, this );\n\n\t}\n\n\tgetExtendedBreaks( target ) {\n\n\t\twhile ( target.length < this.breaks.length ) {\n\n\t\t\ttarget.push( new Vector2() );\n\n\t\t}\n\n\t\ttarget.length = this.breaks.length;\n\n\t\tfor ( let i = 0; i < this.cascades; i ++ ) {\n\n\t\t\tconst amount = this.breaks[ i ];\n\t\t\tconst prev = this.breaks[ i - 1 ] || 0;\n\t\t\ttarget[ i ].x = prev;\n\t\t\ttarget[ i ].y = amount;\n\n\t\t}\n\n\t}\n\n\tupdateFrustums() {\n\n\t\tthis.getBreaks();\n\t\tthis.initCascades();\n\t\tthis.updateShadowBounds();\n\t\tthis.updateUniforms();\n\n\t}\n\n\tremove() {\n\n\t\tfor ( let i = 0; i < this.lights.length; i ++ ) {\n\n\t\t\tthis.parent.remove( this.lights[ i ] );\n\n\t\t}\n\n\t}\n\n\tdispose() {\n\n\t\tconst shaders = this.shaders;\n\t\tshaders.forEach( function ( shader, material ) {\n\n\t\t\tdelete material.onBeforeCompile;\n\t\t\tdelete material.defines.USE_CSM;\n\t\t\tdelete material.defines.CSM_CASCADES;\n\t\t\tdelete material.defines.CSM_FADE;\n\n\t\t\tif ( shader !== null ) {\n\n\t\t\t\tdelete shader.uniforms.CSM_cascades;\n\t\t\t\tdelete shader.uniforms.cameraNear;\n\t\t\t\tdelete shader.uniforms.shadowFar;\n\n\t\t\t}\n\n\t\t\tmaterial.needsUpdate = true;\n\n\t\t} );\n\t\tshaders.clear();\n\n\t}\n\n}\n","import {\n\tGroup,\n\tMesh,\n\tLineSegments,\n\tBufferGeometry,\n\tLineBasicMaterial,\n\tBox3Helper,\n\tBox3,\n\tPlaneGeometry,\n\tMeshBasicMaterial,\n\tBufferAttribute,\n\tDoubleSide\n} from 'three';\n\nclass CSMHelper extends Group {\n\n\tconstructor( csm ) {\n\n\t\tsuper();\n\t\tthis.csm = csm;\n\t\tthis.displayFrustum = true;\n\t\tthis.displayPlanes = true;\n\t\tthis.displayShadowBounds = true;\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 24 );\n\t\tconst frustumGeometry = new BufferGeometry();\n\t\tfrustumGeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tfrustumGeometry.setAttribute( 'position', new BufferAttribute( positions, 3, false ) );\n\t\tconst frustumLines = new LineSegments( frustumGeometry, new LineBasicMaterial() );\n\t\tthis.add( frustumLines );\n\n\t\tthis.frustumLines = frustumLines;\n\t\tthis.cascadeLines = [];\n\t\tthis.cascadePlanes = [];\n\t\tthis.shadowLines = [];\n\n\t}\n\n\tupdateVisibility() {\n\n\t\tconst displayFrustum = this.displayFrustum;\n\t\tconst displayPlanes = this.displayPlanes;\n\t\tconst displayShadowBounds = this.displayShadowBounds;\n\n\t\tconst frustumLines = this.frustumLines;\n\t\tconst cascadeLines = this.cascadeLines;\n\t\tconst cascadePlanes = this.cascadePlanes;\n\t\tconst shadowLines = this.shadowLines;\n\t\tfor ( let i = 0, l = cascadeLines.length; i < l; i ++ ) {\n\n\t\t\tconst cascadeLine = cascadeLines[ i ];\n\t\t\tconst cascadePlane = cascadePlanes[ i ];\n\t\t\tconst shadowLineGroup = shadowLines[ i ];\n\n\t\t\tcascadeLine.visible = displayFrustum;\n\t\t\tcascadePlane.visible = displayFrustum && displayPlanes;\n\t\t\tshadowLineGroup.visible = displayShadowBounds;\n\n\t\t}\n\n\t\tfrustumLines.visible = displayFrustum;\n\n\t}\n\n\tupdate() {\n\n\t\tconst csm = this.csm;\n\t\tconst camera = csm.camera;\n\t\tconst cascades = csm.cascades;\n\t\tconst mainFrustum = csm.mainFrustum;\n\t\tconst frustums = csm.frustums;\n\t\tconst lights = csm.lights;\n\n\t\tconst frustumLines = this.frustumLines;\n\t\tconst frustumLinePositions = frustumLines.geometry.getAttribute( 'position' );\n\t\tconst cascadeLines = this.cascadeLines;\n\t\tconst cascadePlanes = this.cascadePlanes;\n\t\tconst shadowLines = this.shadowLines;\n\n\t\tthis.position.copy( camera.position );\n\t\tthis.quaternion.copy( camera.quaternion );\n\t\tthis.scale.copy( camera.scale );\n\t\tthis.updateMatrixWorld( true );\n\n\t\twhile ( cascadeLines.length > cascades ) {\n\n\t\t\tthis.remove( cascadeLines.pop() );\n\t\t\tthis.remove( cascadePlanes.pop() );\n\t\t\tthis.remove( shadowLines.pop() );\n\n\t\t}\n\n\t\twhile ( cascadeLines.length < cascades ) {\n\n\t\t\tconst cascadeLine = new Box3Helper( new Box3(), 0x000000 );\n\t\t\tconst planeMat = new MeshBasicMaterial( { color: 0x000000, transparent: true, opacity: 0.1, depthWrite: false, side: DoubleSide } );\n\t\t\tconst cascadePlane = new Mesh( new PlaneGeometry(), planeMat );\n\t\t\tconst shadowLineGroup = new Group();\n\t\t\tconst shadowLine = new Box3Helper( new Box3(), 0xff0000 );\n\t\t\tshadowLineGroup.add( shadowLine );\n\n\t\t\tthis.add( cascadeLine );\n\t\t\tthis.add( cascadePlane );\n\t\t\tthis.add( shadowLineGroup );\n\n\t\t\tcascadeLines.push( cascadeLine );\n\t\t\tcascadePlanes.push( cascadePlane );\n\t\t\tshadowLines.push( shadowLineGroup );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < cascades; i ++ ) {\n\n\t\t\tconst frustum = frustums[ i ];\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadowCam = light.shadow.camera;\n\t\t\tconst farVerts = frustum.vertices.far;\n\n\t\t\tconst cascadeLine = cascadeLines[ i ];\n\t\t\tconst cascadePlane = cascadePlanes[ i ];\n\t\t\tconst shadowLineGroup = shadowLines[ i ];\n\t\t\tconst shadowLine = shadowLineGroup.children[ 0 ];\n\n\t\t\tcascadeLine.box.min.copy( farVerts[ 2 ] );\n\t\t\tcascadeLine.box.max.copy( farVerts[ 0 ] );\n\t\t\tcascadeLine.box.max.z += 1e-4;\n\n\t\t\tcascadePlane.position.addVectors( farVerts[ 0 ], farVerts[ 2 ] );\n\t\t\tcascadePlane.position.multiplyScalar( 0.5 );\n\t\t\tcascadePlane.scale.subVectors( farVerts[ 0 ], farVerts[ 2 ] );\n\t\t\tcascadePlane.scale.z = 1e-4;\n\n\t\t\tthis.remove( shadowLineGroup );\n\t\t\tshadowLineGroup.position.copy( shadowCam.position );\n\t\t\tshadowLineGroup.quaternion.copy( shadowCam.quaternion );\n\t\t\tshadowLineGroup.scale.copy( shadowCam.scale );\n\t\t\tshadowLineGroup.updateMatrixWorld( true );\n\t\t\tthis.attach( shadowLineGroup );\n\n\t\t\tshadowLine.box.min.set( shadowCam.bottom, shadowCam.left, - shadowCam.far );\n\t\t\tshadowLine.box.max.set( shadowCam.top, shadowCam.right, - shadowCam.near );\n\n\t\t}\n\n\t\tconst nearVerts = mainFrustum.vertices.near;\n\t\tconst farVerts = mainFrustum.vertices.far;\n\t\tfrustumLinePositions.setXYZ( 0, farVerts[ 0 ].x, farVerts[ 0 ].y, farVerts[ 0 ].z );\n\t\tfrustumLinePositions.setXYZ( 1, farVerts[ 3 ].x, farVerts[ 3 ].y, farVerts[ 3 ].z );\n\t\tfrustumLinePositions.setXYZ( 2, farVerts[ 2 ].x, farVerts[ 2 ].y, farVerts[ 2 ].z );\n\t\tfrustumLinePositions.setXYZ( 3, farVerts[ 1 ].x, farVerts[ 1 ].y, farVerts[ 1 ].z );\n\n\t\tfrustumLinePositions.setXYZ( 4, nearVerts[ 0 ].x, nearVerts[ 0 ].y, nearVerts[ 0 ].z );\n\t\tfrustumLinePositions.setXYZ( 5, nearVerts[ 3 ].x, nearVerts[ 3 ].y, nearVerts[ 3 ].z );\n\t\tfrustumLinePositions.setXYZ( 6, nearVerts[ 2 ].x, nearVerts[ 2 ].y, nearVerts[ 2 ].z );\n\t\tfrustumLinePositions.setXYZ( 7, nearVerts[ 1 ].x, nearVerts[ 1 ].y, nearVerts[ 1 ].z );\n\t\tfrustumLinePositions.needsUpdate = true;\n\n\t}\n\n}\n\nexport { CSMHelper };\n","import * as THREE from 'three';\n\n\nexport class GPUPickHelper {\n    pickingTexture: THREE.WebGLRenderTarget;\n    pixelBuffer: Uint8Array;\n    renderer: THREE.WebGLRenderer;\n\n    selected: number[];\n    id: number;\n\n    offsets: Map<string, [number, number]>;\n    maxOffest: number;\n\n\n    constructor(renderer: THREE.WebGLRenderer) {\n        // create a 1x1 pixel render target\n        this.pickingTexture = new THREE.WebGLRenderTarget(1, 1);\n        this.pixelBuffer = new Uint8Array(4);\n        this.renderer = renderer;\n        this.selected = [-1, -1, -1, -1];\n        this.id = -1;\n        this.offsets = new Map();\n        this.maxOffest = 0;\n    }\n\n    offsetForLayer(name: string, size: number = -1) {\n        if (!this.offsets.has(name))\n        {\n            if (size === -1)\n                throw new Error(`Layer ${name} not registered.`);    \n\n            this.offsets.set(name, [this.maxOffest, this.maxOffest + size]);\n            this.maxOffest += size;\n        }\n\n        let range = this.offsets.get(name);\n        return (range as [number, number])[0];\n    }\n\n    layerAndOidForId(id: number) {\n        for (const [layer, range] of this.offsets.entries()) {\n            if (id >= range[0] && id < range[1])\n                return {\n                    layer: layer,\n                    oid: id - range[0]\n                };\n        }\n    }\n\n    select(oid: number) {\n        this.id = oid;\n        const oid_array = new Uint32Array([oid]);\n        const oid_view = new DataView(oid_array.buffer);\n        this.selected = [oid_view.getUint8(0) / 255, oid_view.getUint8(1) / 255, oid_view.getUint8(2) / 255, oid_view.getUint8(3) / 255];\n    }\n\n    pick(x: number, y: number, scene: THREE.Scene, camera: THREE.OrthographicCamera | THREE.PerspectiveCamera) {\n        const { pickingTexture, pixelBuffer } = this;\n\n        // set the view offset to represent just a single pixel under the mouse\n        const pixelRatio = this.renderer.getPixelRatio();\n        camera.setViewOffset(\n            this.renderer.getContext().drawingBufferWidth,\n            this.renderer.getContext().drawingBufferHeight,\n            x * pixelRatio | 0,\n            y * pixelRatio | 0,\n            1,\n            1,\n        );\n        // render the scene\n        this.renderer.setRenderTarget(pickingTexture)\n        this.renderer.render(scene, camera);\n        this.renderer.setRenderTarget(null);\n\n        // clear the view offset so rendering returns to normal\n        camera.clearViewOffset();\n\n        //read the pixel\n        this.renderer.readRenderTargetPixels(\n            pickingTexture,\n            0,   // x\n            0,   // y\n            1,   // width\n            1,   // height\n            pixelBuffer);\n\n        this.selected = [pixelBuffer[0] / 255, pixelBuffer[1] / 255, pixelBuffer[2] / 255, pixelBuffer[3] / 255];\n        this.id = new DataView(pixelBuffer.buffer).getUint32(0, true);\n        return this.id;\n    }\n}","import * as THREE from 'three';\nimport { CSM } from 'three/examples/jsm/csm/CSM';\n\nexport const PHONG_SELECT_VERT = `\n#define PHONG\n\nvarying vec3 vViewPosition;\n\nuniform vec4 selectedID;\n\nattribute vec4 objectID;\nattribute vec3 color;\nvarying float varyingObjectID;\nvarying vec3 colorFrag;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n    int marked = 1;\n\n    for(int i = 0; i < 4; ++i)\n        marked *= int(floor(selectedID[i] * 255.0 + 0.5) == floor(objectID[i] * 255.0 + 0.5));\n\n    varyingObjectID = float(marked);\n\tcolorFrag = color;\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n`;\n\n\nexport const PHONG_SELECT_FRAG = `\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\nvarying float varyingObjectID;\nvarying vec3 colorFrag;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n    vec3 marked = vec3(float(varyingObjectID > 0.5) * 0.5 + 0.5, 0.5, 0.5);\n\n\tvec4 diffuseColor = vec4(diffuse, opacity);\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\t//vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tvec3 outgoingLight = clamp(reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance, 0.75, 1.0) * colorFrag;\n\t//vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t\n\tif (varyingObjectID > 0.5) \n\t\toutgoingLight -= vec3(0.0, 0.6, 0.6); \n\n\n\t//outgoingLight -= vec3(0.8);\n\t//vec3 shade = outgoingLight;\n\t//const vec3 slices = vec3(10.0);\n\t//const vec3 slices_inv = vec3(1.0) / slices;\n\t//outgoingLight *= vec3(5.0);\n\t//outgoingLight *= slices;\n\t//outgoingLight = floor(outgoingLight + vec3(0.5));\n\t//outgoingLight *= slices_inv;\n\t//outgoingLight = pow(outgoingLight, vec3(0.4));\n\t//outgoingLight *= vec3(0.3);\n\t//outgoingLight += vec3(0.7);\n\n\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n\n\nexport function polygonSelectMaterial() {\n\n\tconst customUniforms = THREE.UniformsUtils.merge([\n\t\tTHREE.ShaderLib.phong.uniforms,\n\t\t{ selectedID: { value: [-1, -1, -1, -1] } },\n\t\t{ shininess: { value: 1000 } }\n\t]);\n\n\treturn new THREE.ShaderMaterial({\n\t\tuniforms: customUniforms,\n\t\tvertexShader: PHONG_SELECT_VERT,\n\t\tfragmentShader: PHONG_SELECT_FRAG,\n\t\tlights: true,\n\t\tside: THREE.DoubleSide,\n\t\tname: 'custom-polygon-material'\n\t});\n}\n\nexport const PHONG_LINE_VERT = `\n#define PHONG\n\nvarying vec3 vViewPosition;\n\nattribute vec3 lineStart;\nattribute vec3 lineEnd;\nuniform float zoffset;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n/**\n * Create rotation matrix from field vector.\n * The returned matrix can rotate vector (1, 0, 0)\n * into the desired setup.\n */\nmat4 getRotationMat(vec3 vector)\n{\n\tvec3 unit = vec3(1, 0, 0);\n\tvec3 f = normalize(vector);\n\tvec3 cross = cross(f, unit);\n\tvec3 a = normalize(cross);\n\tfloat s = length(cross);\n\tfloat c = dot(f, unit);\n\tfloat oc = 1.0 - c;\n\treturn mat4(oc * a.x * a.x + c,        oc * a.x * a.y - a.z * s,  oc * a.z * a.x + a.y * s,  0.0,\n                oc * a.x * a.y + a.z * s,  oc * a.y * a.y + c,        oc * a.y * a.z - a.x * s,  0.0,\n                oc * a.z * a.x - a.y * s,  oc * a.y * a.z + a.x * s,  oc * a.z * a.z + c,        0.0,\n                0.0,                       0.0,                       0.0,                       1.0);\n\n}\n\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\n\t#include <begin_vertex> //transformed contains location\n\n\tvec3 dir = lineEnd - lineStart;\n    float dist = length(dir);\n    mat4 rot = getRotationMat(dir);\n\n\tconst float thickness = 1.0;\n\tfloat end = float(transformed.x >= 0.9);\n\ttransformed.x = end * (dist - 1.0 + transformed.x) + (1.0 - end) * transformed.x; //subtract one because its the original length of the template line\n\ttransformed.y *= thickness;\n\n    transformed = lineStart + (rot * vec4(transformed, 1.0)).xyz;\n\ttransformed.z += zoffset;\n\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n`;\n\n\nexport const PHONG_LINE_FRAG = `\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t//#include <lights_phong_fragment>\n\t//#include <lights_fragment_begin>\n\t//#include <lights_fragment_maps>\n\t//#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n\n\nexport function lineMaterial() {\n\n\tconst customUniforms = THREE.UniformsUtils.merge([\n\t\t//THREE.ShaderLib.phong.uniforms,\n\t\t{ zoffset: { value: 1 } }\n\t]);\n\n\treturn new THREE.ShaderMaterial({\n\t\tuniforms: customUniforms,\n\t\tvertexShader: PHONG_LINE_VERT,\n\t\tfragmentShader: PHONG_LINE_FRAG,\n\t\tside: THREE.DoubleSide,\n\t\t//lights: true,\n\t\tname: 'custom-line-material'\n\t});\n}\n\n\nexport const PHONG_POINT_SELECT_VERT = `\n#define PHONG\n\nvarying vec3 vViewPosition;\n\nuniform vec4 selectedID;\n\nattribute vec3 location;\nattribute vec4 objectID;\nattribute vec3 color;\nvarying float varyingObjectID;\nvarying vec3 colorFrag;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n    int marked = 1;\n\n    for(int i = 0; i < 4; ++i)\n        marked *= int(floor(selectedID[i] * 255.0 + 0.5) == floor(objectID[i] * 255.0 + 0.5));\n\n    varyingObjectID = float(marked);\n\tcolorFrag = color;\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\n\t#include <begin_vertex>\n\n\ttransformed += location;\n\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n`;\n\n\nexport const PHONG_POINT_SELECT_FRAG = `\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\nvarying float varyingObjectID;\nvarying vec3 colorFrag;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n    vec3 marked = vec3(float(varyingObjectID > 0.5) * 0.5 + 0.5, 0.5, 0.5);\n\n\tvec4 diffuseColor = vec4(diffuse, opacity);\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = clamp(reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance, 0.75, 1.0) * colorFrag;\n\n\t\n\tif (varyingObjectID > 0.5) \n\t\toutgoingLight -= vec3(0.0, 0.6, 0.6); \n\n\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n\n\nexport function pointSelectMaterial() {\n\n\tconst customUniforms = THREE.UniformsUtils.merge([\n\t\tTHREE.ShaderLib.phong.uniforms,\n\t\t{ selectedID: { value: [-1, -1, -1, -1] } },\n\t\t{ shininess: { value: 1000 } }\n\t]);\n\n\treturn new THREE.ShaderMaterial({\n\t\tuniforms: customUniforms,\n\t\tvertexShader: PHONG_POINT_SELECT_VERT,\n\t\tfragmentShader: PHONG_POINT_SELECT_FRAG,\n\t\tlights: true,\n\t\tside: THREE.DoubleSide,\n\t\tname: 'custom-polygon-material'\n\t});\n}\n\nexport const PHONG_SIMPLE_POINT_SELECT_VERT = `\n#define PHONG\n\nvarying vec3 vViewPosition;\n\nuniform vec4 selectedID;\nuniform float pointSize;\n\nattribute vec3 location;\nattribute vec4 objectID;\nattribute vec3 color;\nvarying float varyingObjectID;\nvarying vec3 colorFrag;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n    int marked = 1;\n\n    for(int i = 0; i < 4; ++i)\n        marked *= int(floor(selectedID[i] * 255.0 + 0.5) == floor(objectID[i] * 255.0 + 0.5));\n\n    varyingObjectID = float(marked);\n\tcolorFrag = color;\n\n\t//#include <uv_vertex>\n\t//#include <uv2_vertex>\n\t//#include <color_vertex>\n\n\t//#include <beginnormal_vertex>\n\t//#include <morphnormal_vertex>\n\t//#include <skinbase_vertex>\n\t//#include <skinnormal_vertex>\n\t//#include <defaultnormal_vertex>\n\t//#include <normal_vertex>\n\n\t#include <begin_vertex>\n\n\ttransformed *= pointSize;\n\ttransformed += location;\n\n\t//#include <morphtarget_vertex>\n\t//#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t//#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t//#include <envmap_vertex>\n\t//#include <shadowmap_vertex>\n\t//#include <fog_vertex>\n}\n`;\n\n\nexport const PHONG_SIMPLE_POINT_SELECT_FRAG = `\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\nvarying float varyingObjectID;\nvarying vec3 colorFrag;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n    vec3 marked = vec3(float(varyingObjectID > 0.5) * 0.5 + 0.5, 0.5, 0.5);\n\n\t//vec4 diffuseColor = vec4(diffuse, opacity);\n\t//ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t//vec3 totalEmissiveRadiance = emissive;\n\n\t//#include <logdepthbuf_fragment>\n\t//#include <map_fragment>\n\t//#include <color_fragment>\n\t//#include <alphamap_fragment>\n\t//#include <alphatest_fragment>\n\t//#include <specularmap_fragment>\n\t//#include <normal_fragment_begin>\n\t//#include <normal_fragment_maps>\n\t//#include <emissivemap_fragment>\n\n\t// accumulation\n\t//#include <lights_phong_fragment>\n\t//#include <lights_fragment_begin>\n\t//#include <lights_fragment_maps>\n\t//#include <lights_fragment_end>\n\n\t// modulation\n\t//#include <aomap_fragment>\n\n\t//vec3 outgoingLight = clamp(reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance, 0.75, 1.0) * colorFrag;\n\tvec3 outgoingLight = colorFrag;\n\n\t\n\tif (varyingObjectID > 0.5) \n\t\toutgoingLight -= vec3(0.0, 0.6, 0.6); \n\n\n\t//#include <envmap_fragment>\n\t//#include <output_fragment>\n\t//the output is replaced by the segment bellow\n\tgl_FragColor = vec4( outgoingLight, 1.0 );\n\n\t//#include <tonemapping_fragment>\n\t//#include <encodings_fragment>\n\t//#include <fog_fragment>\n\t//#include <premultiplied_alpha_fragment>\n\t//#include <dithering_fragment>\n}\n`;\n\n\nexport function pointSimpleSelectMaterial() {\n\n\tconst customUniforms = THREE.UniformsUtils.merge([\n\t\tTHREE.ShaderLib.phong.uniforms,\n\t\t{ selectedID: { value: [-1, -1, -1, -1] } },\n\t\t{ shininess: { value: 1000 } },\n\t\t{ pointSize: { value: 1 } },\n\t]);\n\n\treturn new THREE.ShaderMaterial({\n\t\tuniforms: customUniforms,\n\t\tvertexShader: PHONG_SIMPLE_POINT_SELECT_VERT,\n\t\tfragmentShader: PHONG_SIMPLE_POINT_SELECT_FRAG,\n\t\tlights: true,\n\t\tside: THREE.DoubleSide,\n\t\tname: 'custom-point-material'\n\t});\n}\n\nexport const PICK_VERT = `\nattribute vec4 objectID;\nvarying vec4 objectIDColor;\n\nvoid main() {\n    objectIDColor = objectID;\n    gl_Position = projectionMatrix * (modelViewMatrix * vec4( position, 1.0 ));\n}\n`;\n\n\nexport const PICK_FRAG = `\nvarying vec4 objectIDColor;\n\nvoid main() {\n\tgl_FragColor = vec4(objectIDColor);\n}\n`;\n\n\nexport function pickingMaterial() {\n\n\tconst customUniforms = THREE.UniformsUtils.merge([]);\n\n\treturn new THREE.ShaderMaterial({\n\t\tuniforms: customUniforms,\n\t\tvertexShader: PICK_VERT,\n\t\tfragmentShader: PICK_FRAG,\n\t\tside: THREE.DoubleSide,\n\t\tname: 'custom-picking-material'\n\t});\n}\n\nexport const PICK_POINT_VERT = `\nattribute vec4 objectID;\nattribute vec3 location;\nvarying vec4 objectIDColor;\n\nvoid main() {\n    objectIDColor = objectID;\n    gl_Position = projectionMatrix * (modelViewMatrix * vec4( position + location, 1.0 ));\n}\n`;\n\n\nexport const PICK_POINT_FRAG = `\nvarying vec4 objectIDColor;\n\nvoid main() {\n\tgl_FragColor = vec4(objectIDColor);\n}\n`;\n\n\nexport function pickingPointMaterial() {\n\n\tconst customUniforms = THREE.UniformsUtils.merge([]);\n\n\treturn new THREE.ShaderMaterial({\n\t\tuniforms: customUniforms,\n\t\tvertexShader: PICK_POINT_VERT,\n\t\tfragmentShader: PICK_POINT_FRAG,\n\t\tside: THREE.DoubleSide,\n\t\tname: 'custom-point-picking-material'\n\t});\n}\n\n\nexport class MaterialLibrary {\n    polygonMaterial: THREE.ShaderMaterial;\n    pointMaterial: THREE.ShaderMaterial;\n    lineMaterial: THREE.ShaderMaterial;\n\t\n    pickingPolygonMaterial: THREE.Material;\n    pickingPointMaterial: THREE.Material;\n\n\tconstructor(csm: CSM) {        \n\t\tthis.polygonMaterial = polygonSelectMaterial();\n        csm.setupMaterial(this.polygonMaterial);\n        this.lineMaterial = lineMaterial();\n\t\tthis.pointMaterial = pointSimpleSelectMaterial();\n\n        this.pickingPolygonMaterial = pickingMaterial();\n        this.pickingPointMaterial = pickingPointMaterial();\n\t}\n\n\tsetPointSize(size: number) {\n\t\tthis.pointMaterial.uniforms.pointSize.value = size;\n\t\tthis.pointMaterial.uniformsNeedUpdate = true;\n\t}\n\n\tsetSelectedID(id: number[]) {\n\t\tthis.polygonMaterial.uniforms.selectedID = { value: id };\n\t\tthis.polygonMaterial.uniformsNeedUpdate = true;\n\t\tthis.lineMaterial.uniforms.selectedID = { value: id };\n\t\tthis.lineMaterial.uniformsNeedUpdate = true;\n\t\tthis.pointMaterial.uniforms.selectedID = { value: id };\n\t\tthis.pointMaterial.uniformsNeedUpdate = true;\n\t}\n}","import { Renderer } from './renderer'\nimport * as THREE from 'three';\n\n\nenum Stage {\n    NOSELECT,\n    SELECT,\n    SELECTEDFIRST\n}\n\nfunction wirebox(width: number, height: number, depth: number ) {\n    width = width * 0.5;\n    height = height * 0.5;\n    depth = depth * 0.5;\n\n    const geometry = new THREE.BufferGeometry();\n    const position = [];\n\n    position.push(\n        - width, - height, - depth,\n        - width, height, - depth,\n\n        - width, height, - depth,\n        width, height, - depth,\n\n        width, height, - depth,\n        width, - height, - depth,\n\n        width, - height, - depth,\n        - width, - height, - depth,\n\n        - width, - height, depth,\n        - width, height, depth,\n\n        - width, height, depth,\n        width, height, depth,\n\n        width, height, depth,\n        width, - height, depth,\n\n        width, - height, depth,\n        - width, - height, depth,\n\n        - width, - height, - depth,\n        - width, - height, depth,\n\n        - width, height, - depth,\n        - width, height, depth,\n\n        width, height, - depth,\n        width, height, depth,\n\n        width, - height, - depth,\n        width, - height, depth\n     );\n\n    geometry.setAttribute( 'position', new THREE.Float32BufferAttribute( position, 3 ) );\n    return geometry;\n}\n\n\nexport class Selector {\n\n    renderer: Renderer;\n    status: Stage = Stage.NOSELECT;\n    cube: THREE.LineSegments;\n    ends: THREE.Vector2[];\n\n    constructor(renderer: Renderer) {\n        this.renderer = renderer;\n        const geometry = wirebox(1, 1, 1);\n        const material = new THREE.LineDashedMaterial( {\n            color: 0x000000,\n            dashSize: 3, gapSize: 1\n        } );\n\n        this.cube = new THREE.LineSegments( geometry, material );\n        this.renderer.scene.add( this.cube );\n        this.ends = [];\n        this.cube.visible = false;\n    }\n\n    select(x: number, y: number) {\n        this.ends.push(new THREE.Vector2(x, y));\n        this.cube.visible = true;\n        this.renderer.changed = true;\n        \n        if (this.ends.length < 2)\n        {\n            this.cube.position.x = x;\n            this.cube.position.y = y;\n            this.cube.position.z = 0;\n            this.cube.scale.set(10, 10, 1000);\n            this.cube.updateMatrixWorld();\n\n            return {\n                start: [x, y]\n            }\n        } else {\n            const end: THREE.Vector2 = this.ends.pop() as any;\n            const tmp: THREE.Vector2 = this.ends.pop() as any;\n            const start = new THREE.Vector2(end.x, end.y);\n            start.min(tmp);\n            end.max(tmp);\n            tmp.copy(end).sub(start); //tmp is now size\n\n            this.cube.scale.set(tmp.x, tmp.y, 1000);\n            this.cube.position.set(start.x + tmp.x * 0.5, start.y + tmp.y * 0.5, 0);\n            this.cube.updateMatrixWorld();\n\n            return {\n                start: [start.x, start.y],\n                end: [end.x, end.y],\n                size: [tmp.x, tmp.y]\n            }\n        }\n    }\n\n    clear() {\n        this.cube.visible = false;\n        this.renderer.changed = true;\n    }\n}\n\n\n","import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\n\nexport class MapControls extends OrbitControls {\n\n    constructor(camera: THREE.Camera, domElement: HTMLCanvasElement) {\n\n        camera.up = new THREE.Vector3(0, 0, 1);\n        super(camera, domElement);\n\n        this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n        this.mouseButtons.LEFT = THREE.MOUSE.PAN;\n        this.mouseButtons.RIGHT = THREE.MOUSE.ROTATE;\n\n        this.touches.ONE = THREE.TOUCH.PAN;\n        this.touches.TWO = THREE.TOUCH.DOLLY_ROTATE;\n\n        this.zoomSpeed = 0.5;\n        this.dampingFactor = 0.1;\n        this.enableDamping = true;\n        this.minDistance = 400;\n        this.minPolarAngle = 0.001;\n        this.maxPolarAngle = Math.PI * 0.4;\n        this.update();\n    }\n}","import * as THREE from 'three';\nimport { CSM } from './csm/CSM';\nimport { MapControls } from './controls';\n\n\nclass PerspectiveControls {\n    camera: THREE.PerspectiveCamera;\n\n    constructor(canvas: HTMLCanvasElement) {\n        this.camera = new THREE.PerspectiveCamera(65, window.innerWidth / window.innerHeight, 1, 6000)\n    }\n\n    update(controls: MapControls) {\n        controls.update();\n    }\n\n    topView(controls: MapControls) {\n        this.camera.position.copy(controls.target);\n        this.camera.position.z = 3000;\n        this.camera.updateMatrixWorld();\n    }\n\n    enable(controls: MapControls) {\n        controls.enableRotate = true;\n        controls.maxDistance = 5000;\n    }\n\n    resize(width: number, height: number) {\n        this.camera.aspect = width / height;\n        this.camera.updateProjectionMatrix();\n    }\n}\n\n\nclass OrthographicControls {\n    camera: THREE.OrthographicCamera;\n    csm: CSM;\n\n    constructor(canvas: HTMLCanvasElement, csm: CSM) {\n        this.camera = new THREE.OrthographicCamera(\n            -window.innerWidth / 2,\n            window.innerWidth / 2,\n            window.innerHeight / 2,\n            -window.innerHeight / 2,\n            1,\n            10000);\n        this.csm = csm;\n    }\n\n    update(controls: MapControls) {\n        var size = controls.target.distanceTo( controls.object.position );\n        var aspect = (controls.object as any).aspect;\n\n        this.camera.left = size * aspect / -2;\n        this.camera.right = size * aspect / 2;\n\n        this.camera.top = size / 2;\n        this.camera.bottom = size / - 2;\n\n        this.camera.position.copy(controls.object.position);\n        this.camera.updateProjectionMatrix();\n        controls.update();\n        this.csm.updateFrustums();\n    }\n    \n    enable(controls: MapControls) {\n        this.camera.position.copy( controls.object.position );\n        controls.target.copy( this.camera.position );\n        controls.target.z = 0;\n        controls.maxDistance = 10000;\n        controls.enableRotate = false;\n    }\n\n    topView(controls: MapControls) {\n        this.camera.position.copy(controls.target);\n        this.camera.position.z = 3000;\n        this.camera.updateMatrixWorld()\n    }\n\n    resize(width: number, height: number) {\n        this.camera.left = -width / 2;\n        this.camera.right = width / 2;\n\n        this.camera.top = height / 2;\n        this.camera.bottom = -height / 2;\n\n        this.camera.updateProjectionMatrix();\n    }\n}\n\nexport class CameraControls {\n    controls: MapControls;\n    perspective: PerspectiveControls;\n    orthographic?: OrthographicControls;\n    current: PerspectiveControls | OrthographicControls;\n    csm?: CSM;\n\n    constructor(canvas: HTMLCanvasElement) {\n        this.perspective = new PerspectiveControls(canvas);\n        this.controls = new MapControls(this.perspective.camera, canvas);\n        this.current = this.perspective;\n        this.current.enable(this.controls);\n    }\n\n    initOrthographic(canvas: HTMLCanvasElement, csm: CSM) {\n        this.orthographic = new OrthographicControls(canvas, csm);\n        this.csm = csm;\n    }\n\n    resize(x: number, y: number){\n        this.perspective.resize(x, y);\n        if(this.orthographic)\n            this.orthographic.resize(x, y);\n    }\n\n    update() {\n        this.current.update(this.controls);\n    }\n\n    enable() {\n        this.current.enable(this.controls);\n    }\n\n    topView() {\n        this.current.topView(this.controls);\n    }\n\n    get camera() {\n        return this.current.camera;\n    }\n\n    get target() {\n        return this.controls.target;\n    }\n\n    swap() {\n        if (!this.orthographic || !this.csm)\n            return; \n\n        this.current.topView(this.controls);\n        this.current = this.current === this.perspective ? this.orthographic : this.perspective;\n        this.current.enable(this.controls);\n\n        this.csm.camera = this.current.camera;\n        this.csm.updateFrustums();   \n    }\n\n    focus(focusPoint: THREE.Vector2) {\n        this.controls.target = new THREE.Vector3(focusPoint.x, focusPoint.y, 0);\n        this.current.camera.position.x = focusPoint.x;\n        this.current.camera.position.y = focusPoint.y;\n        this.current.camera.position.z = 1000;\n    }\n\n    screenToWorldOrthographic(x: number, y: number) {\n        if ((this.current.camera as any).isOrthographicCamera)\n        {\n            const camera = this.current.camera as any;\n            const vector = new THREE.Vector3();\n            vector.set(\n                (x / window.innerWidth) * 2 - 1,\n                - (y / window.innerHeight) * 2 + 1,\n                ( camera.near + camera.far ) / ( camera.near - camera.far )\n            );\n            return vector.unproject( camera );\n        }\n    }\n}","\n\nclass Action {\n    name: string;\n    counter: number;\n    manager: StatusManager;\n\n    constructor(name: string, manager: StatusManager) {\n        this.name = name;\n        this.counter = 0;\n        this.manager = manager;\n    }\n\n    start() {\n        this.counter++;\n        this.manager.update();\n    }\n    \n    stop() { \n        this.counter--;\n        this.manager.update();\n    }\n\n    toString() {\n        return `${this.name}: ${this.counter} remaining`;\n    }\n\n    get isRunning() {  \n        return this.counter > 0;\n    }\n}\n\ninterface IActionList {\n    [key: string]: Action;\n    loadingGeometry: Action;\n    parsingGeometry: Action;\n    loadingStyles: Action;\n    applyingStyles: Action;\n}\n\nexport class StatusManager {\n    actions: IActionList;\n\n    constructor() {\n        this.actions = {\n            loadingGeometry: new Action(\"Loading Geometry\", this),\n            parsingGeometry: new Action(\"Parsing Geometry\", this),\n            loadingStyles: new Action(\"Loading Styles\", this),\n            applyingStyles: new Action(\"Applying Styles\", this)\n        };\n    }\n\n    update() {\n        const bar = document.getElementById(\"viewStatusBar\");\n        if (!bar)\n            return;\n\n        for (let action in this.actions) {\n            if ((this.actions[action] as Action).isRunning) {\n                const status = this.actions[action].toString();\n                bar.innerHTML = status;\n                return;\n            }\n        }\n        \n        bar.innerHTML = 'Ready.';\n    }\n}","import * as THREE from 'three';\nimport { CSM } from './csm/CSM';\nimport { CSMHelper } from './csm/CSMHelper';\nimport Stats from 'three/examples/jsm/libs/stats.module';\nimport { GPUPickHelper } from './picker';\nimport { MaterialLibrary } from './shaders';\nimport { CameraControls } from './camera';\nimport { StatusManager } from '../utils/status';\n\n\nconst SHOWSTATS = false;\nconst SHADOWS = true;\n\nexport class Renderer {\n    canvas: HTMLCanvasElement;\n    scene: THREE.Scene;\n    pickingScene: THREE.Scene;\n    renderer: THREE.WebGLRenderer;\n\n    controls: CameraControls;\n    picker: GPUPickHelper;\n    matlib: MaterialLibrary;\n    csm!: CSM;\n    helper!: CSMHelper;\n\n    stats1!: Stats;\n    stats2!: Stats;\n    changed: boolean;\n\n    updateShadows = false;\n    actionCall: CallableFunction;\n\n    status: StatusManager;\n\n    trim = 0;\n\n    constructor(canvas: HTMLCanvasElement, actionCall: CallableFunction) {\n        this.canvas = canvas;\n        this.actionCall = actionCall;\n        this.status = new StatusManager();\n\n        //basic threejs\n        this.scene = new THREE.Scene();\n        this.pickingScene = new THREE.Scene();\n        this.controls = new CameraControls(this.canvas);\n        this.renderer = new THREE.WebGLRenderer({ canvas: this.canvas, antialias: true });\n        this.setupRenderer();\n        this.setupLightsAndShadows();\n        this.controls.initOrthographic(this.canvas, this.csm);\n        \n        //materials\n        this.matlib = new MaterialLibrary(this.csm);\n        \n        //picker\n        this.picker = new GPUPickHelper(this.renderer);\n        this.changed = true;\n\n        //devstats\n        if (SHOWSTATS) {\n            this.stats1 = Stats();\n            this.stats1.showPanel(0);\n            this.stats1.dom.style.cssText = 'position:absolute;top:0px;left:0px;';\n            document.body.appendChild(this.stats1.dom);\n            this.stats2 = Stats();\n            this.stats2.showPanel(1);\n            this.stats2.dom.style.cssText = 'position:absolute;top:0px;left:80px;';\n            document.body.appendChild(this.stats2.dom);\n        }\n    }\n\n\n    private setupLightsAndShadows() {\n        const hemisphere = new THREE.HemisphereLight(0xFFFFFF, 0x555555, 0.4);\n        hemisphere.position.set(0, 1, 1);\n        this.scene.add(hemisphere);\n        this.scene.add(new THREE.AmbientLight(0xFFFFFF, 0.5));\n\n        this.csm = new CSM({\n            fade: true,\n            mode: 'practical',\n            cascades: 4,\n            shadowBias: [-0.0005, -0.001, -0.001, -0.003],\n            shadowMapSize: 2048,\n            lightDirection: new THREE.Vector3(-1, -1, -1).normalize(),\n            camera: this.controls.camera,\n            parent: this.scene,\n            lightNear: 1,\n            lightFar: 10000,\n            maxFar: 5000,\n            margin: 0,\n            lightIntensity: 0.2,\n            autoUpdateHelper: false\n        });\n\n        this.helper = new CSMHelper(this.csm);\n        this.helper.visible = true;\n        this.scene.add(this.helper);\n        this.helper.update();\n    }\n\n    private setupRenderer() {\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.shadowMap.enabled = true;\n        this.renderer.shadowMap.autoUpdate = false;\n        this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n        this.renderer.setClearColor(0xa6fff3);\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n        this.renderer.setAnimationLoop(() => this.frame());\n    }\n\n    enableShadows() {\n        this.updateShadows = true;\n        this.changed = true;\n        console.log('shadows enabled');\n    }\n\n    disableShadows() {\n        this.updateShadows = false;\n        this.changed = true;\n\n        let light: THREE.DirectionalLight;\n        for(light of this.csm.lights)\n        {\n            console.log(light);\n            const target = this.renderer.getRenderTarget();\n            if (light.shadow && light.shadow.map)\n            {\n\n                this.renderer.setRenderTarget( light.shadow.map as any);\n                this.renderer.clear();\n            }\n            this.renderer.setRenderTarget(target);\n        }\n\n        console.log('shadows disabled');\n    }\n\n    frame() {\n        this.actionCall();\n        this.controls.update();\n        \n        if (this.changed) {\n            this.csm.update();\n            if (this.updateShadows) {\n                this.renderer.shadowMap.needsUpdate = true;\n            }\n\n            this.renderer.render(this.scene, this.controls.camera);\n        }\n\n        if (SHOWSTATS) {\n            this.stats1.update();\n            this.stats2.update();\n        }\n\n        this.changed = false;\n    }\n\n    click(x: number, y: number) {\n        const id = this.picker.pick(x, y, this.pickingScene, this.controls.camera);\n        return this.select(id);\n    }\n\n    select(oid: number) {\n        if (this.picker.id != oid)\n            this.picker.select(oid);\n\n        const selected = this.picker.layerAndOidForId(oid);\n\n        if (selected)\n            this.matlib.setSelectedID(this.picker.selected);\n        else \n            this.matlib.setSelectedID([-1, -1, -1, -1]);\n\n        this.changed = true;\n        return selected;\n    }\n\n    setPointSize(size: number) {\n        this.matlib.setPointSize(size);\n        this.changed = true;\n    }\n\n    updateHelper() {\n        this.helper.update();\n        this.updateShadows = false;\n        this.changed = true;\n    }\n\n    resize(x: number, y: number) {\n        this.controls.resize(x, y);\n        this.renderer.setSize(x, y);\n        this.changed = true;\n    }\n}","import { Renderer } from \"../renderer/renderer\"\nimport * as THREE from \"three\";\nimport { color, color_default, LayerStyle } from \"../renderer/style\";\n\n\nexport enum OIDType {\n    source,\n    target,\n    object\n}\n\nexport class Model {\n    renderer: Renderer;\n    mesh?: THREE.Mesh;\n    pickingMesh?: THREE.Mesh;\n    private visibility: boolean;\n\n    constructor(renderer: Renderer) {\n        this.renderer = renderer;\n        this.visibility = true;\n    }\n\n    set visible(v: boolean) {\n        this.visibility = v;\n        if (this.mesh) {\n            this.mesh.visible = v;\n        }\n        if (this.pickingMesh) {\n            this.pickingMesh.visible = v;\n        }\n    }\n\n    remove() {\n        this.mesh = this.removeFrom(this.mesh, this.renderer.scene);\n        this.pickingMesh = this.removeFrom(this.pickingMesh, this.renderer.pickingScene);\n    }\n\n    removeFrom(mesh: THREE.Mesh | THREE.LineSegments | undefined, scene: THREE.Scene) {\n        if (mesh) {\n            scene.remove(mesh);\n            mesh.geometry.dispose();\n        }\n        return undefined;\n    }\n\n    baseColors(threeVertLength: number) {\n        const colors = new Uint8Array(threeVertLength);\n        for (let i = 0; i < threeVertLength; i++)\n            colors[i] = 255;\n        return colors;\n    }\n\n    afterApplyStyle() {\n        this.renderer.status.actions.applyingStyles.stop();\n        if (this.mesh)\n        {\n            this.mesh.geometry.attributes.color.needsUpdate = true;\n            this.renderer.changed = true;\n        }\n    }\n\n    applyStyle(offset: number, style?: LayerStyle, type?: OIDType) {\n        if (!this.mesh || !this.mesh.geometry.attributes.objectID)\n            return;\n\n        this.renderer.status.actions.applyingStyles.start();\n        const oids = this.mesh.geometry.attributes.objectID.array;\n        const out = this.mesh.geometry.attributes.color.array;\n\n        if (style) {\n            color(offset, oids as Uint8Array, style.color_buffer, out, this.afterApplyStyle.bind(this));\n        } else {\n            color_default(oids.length, out, this.afterApplyStyle.bind(this));\n        }\n    }\n\n}\n\nexport class ModelProxy extends Model {\n    applyStyle(offset: number, style?: LayerStyle, type: OIDType = OIDType.source) {\n        if (!this.mesh || !this.mesh.geometry.attributes.objectID)\n            return;\n\n        this.renderer.status.actions.applyingStyles.start();\n        const oids = this.mesh.geometry.attributes.objectID.array;\n        const out = this.mesh.geometry.attributes.color.array;\n\n        if (style) {\n            if (type === OIDType.source)\n                color(offset, oids as Uint8Array, style.color_buffer_source, out, this.afterApplyStyle.bind(this))\n            else\n                color(offset, oids as Uint8Array, style.color_buffer_target, out, this.afterApplyStyle.bind(this))\n        } else {\n            color_default(oids.length, out, this.afterApplyStyle.bind(this));\n        }\n    }\n}\n\n","\nexport class Decoder {\n    static base64tofloat32(data: string,  abort: CallableFunction, callback: CallableFunction) {        \n        const iteration = (c: {p: number, it: number, view: DataView, blob: string, totalStop: number, array: Float32Array}) => {\n            const itStep = 100000;\n            const stepStop = c.it * itStep * Float64Array.BYTES_PER_ELEMENT;\n            const stop = Math.min(stepStop, c.totalStop);\n\n            for (; c.p < stop; c.p += Float64Array.BYTES_PER_ELEMENT) {\n                for(let i = 0; i < Float64Array.BYTES_PER_ELEMENT; ++i)\n                    c.view.setUint8(i, c.blob.charCodeAt(c.p + i));\n                c.array[c.p / Float64Array.BYTES_PER_ELEMENT] = c.view.getFloat64(0, true);\n            }\n\n            if (abort())\n                return;\n\n            if (c.p < c.totalStop) {\n                c.it++;\n                Promise.resolve(c).then(iteration);\n            } else {\n                callback(c.array);\n            }\n\n            c = null as any;\n        }\n\n        let conf: any = {\n            p: 0,\n            it: 1,\n            view: new DataView(new ArrayBuffer(Float64Array.BYTES_PER_ELEMENT)),\n            blob: window.atob(data)\n        };\n\n        const len = conf.blob.length / Float64Array.BYTES_PER_ELEMENT;\n        conf['array'] = new Float32Array(len);\n        conf['totalStop'] = len * Float64Array.BYTES_PER_ELEMENT;\n        \n        Promise.resolve(conf).then(iteration);\n        conf = null;\n    }\n\n    static base64toint32(data: string, offset: number = 0, abort: CallableFunction, callback: CallableFunction) {        \n        const iteration = (c: {p: number, it: number, view: DataView, blob: string, totalStop: number, array: Uint32Array}) => {\n            const itStep = 100000;\n            const stepStop = c.it * itStep * Int32Array.BYTES_PER_ELEMENT;\n            const stop = Math.min(stepStop, c.totalStop);\n\n            for (; c.p < stop; c.p += Int32Array.BYTES_PER_ELEMENT) {\n                for(let i = 0; i < Int32Array.BYTES_PER_ELEMENT; ++i)\n                    c.view.setUint8(i, c.blob.charCodeAt(c.p + i));\n                c.array[c.p / Int32Array.BYTES_PER_ELEMENT] = c.view.getInt32(0, true) + offset;\n            }\n\n            if (abort())\n                return;\n\n            if (c.p < c.totalStop) {\n                c.it++;\n                Promise.resolve(c).then(iteration);\n            } else {\n                callback(new Uint8Array(c.array.buffer));\n            }\n\n            c = null as any;\n        }\n\n        let conf: any = {\n            p: 0,\n            it: 1,\n            view: new DataView(new ArrayBuffer(Int32Array.BYTES_PER_ELEMENT)),\n            blob: window.atob(data)\n        };\n\n        const len = conf.blob.length / Int32Array.BYTES_PER_ELEMENT;\n        conf['array'] = new Int32Array(len);\n        conf['totalStop'] = len * Int32Array.BYTES_PER_ELEMENT;\n        Promise.resolve(conf).then(iteration);\n        conf = null;\n    }\n\n    static base64touint8(data: string, callback: CallableFunction) {\n        const iteration = (c: {p: number, it: number, blob: string, totalStop: number, array: Uint32Array}) => {\n            const itStep = 1000000;\n            const stepStop = c.it * itStep * Uint8Array.BYTES_PER_ELEMENT;\n            const stop = Math.min(stepStop, c.totalStop);\n            \n            for (; c.p < stop; c.p += Uint8Array.BYTES_PER_ELEMENT) {\n                c.array[c.p] = c.blob.charCodeAt(c.p)\n            }\n\n            if (c.p < c.totalStop) {\n                c.it++;\n                Promise.resolve(c).then(iteration);\n            } else {\n                callback(c.array);\n            }\n\n            c = null as any;\n        }\n\n        let conf: any = {\n            p: 0,\n            it: 1,\n            blob: window.atob(data)\n        };\n\n        const len = conf.blob.length / Uint8Array.BYTES_PER_ELEMENT;\n        conf['array'] = new Uint8Array(len);\n        conf['totalStop'] = len;\n        Promise.resolve(conf).then(iteration);\n        conf = null;\n    }\n}","import { ILayerStyle } from \"../types\";\nimport { Decoder } from \"../utils/decoder\";\n\n\nexport class LayerStyle {\n    styles: ILayerStyle;\n\n    constructor(styles?: ILayerStyle, callback: (style: LayerStyle) => void = () => {}) {\n        this.styles = styles || {};\n\n        if (this.styles.buffer) {\n            Decoder.base64touint8(this.styles.buffer as string, (buffer: Uint8Array) => {\n                this.styles.buffer = buffer;\n                callback(this);\n            });\n        }\n\n        if (this.styles.buffer_source && this.styles.buffer_target) {\n            Decoder.base64touint8(this.styles.buffer_source as string, (buffer: Uint8Array) => {\n                this.styles.buffer_source = buffer;\n                Decoder.base64touint8(this.styles.buffer_target as string, (buffer: Uint8Array) => {\n                    this.styles.buffer_target = buffer;\n                    callback(this);\n                });\n            });\n        }\n    }\n\n    get pickable() {\n        if (this.styles.pickable) {\n            return this.styles.pickable;\n        }\n        return true;\n    }\n\n    get visible() {\n        if (this.styles.visible) {\n            return this.styles.visible;\n        }\n        return true;\n    }\n\n    get color_buffer() {\n        if (this.styles.buffer)\n            return this.styles.buffer as Uint8Array;\n        throw new Error(\"No colors defined\");\n    }\n\n    get color_buffer_target() {\n        if (this.styles.buffer_target) \n            return this.styles.buffer_target as Uint8Array;\n        throw new Error(\"No target colors defined\");\n    }\n\n    get color_buffer_source() {\n        if (this.styles.buffer_source) \n            return this.styles.buffer_source as Uint8Array;\n        throw new Error(\"No source colors defined\");\n    }\n}\n\n\n\n\nexport function color(oid_offset: number, oids: Uint8Array, buffer: Uint8Array, outputbuffer: any, callback: CallableFunction) {\n\n    const iteration = (c: {i: number, ci: number, it: number, total_stop: number, view: DataView}) => {\n        const itStep = 100000;\n        const step_stop = c.it * itStep;\n        const stop = Math.min(step_stop, c.total_stop);\n\n        let oid;\n        for (; c.i < stop; c.i++) {\n            oid = (c.view.getUint32(c.i * Uint32Array.BYTES_PER_ELEMENT, true) - oid_offset) * 3;\n            outputbuffer[c.ci++] = buffer[oid];\n            outputbuffer[c.ci++] = buffer[oid + 1];\n            outputbuffer[c.ci++] = buffer[oid + 2];\n        }\n\n        if (c.i < c.total_stop) {\n            c.it++;\n            Promise.resolve(c).then(iteration);\n        } else {\n            callback();\n        }\n\n        c = null as any;\n    }\n\n    Promise.resolve({\n        i: 0,\n        ci: 0,\n        it: 1,\n        total_stop: oids.length / Uint32Array.BYTES_PER_ELEMENT,\n        view: new DataView(oids.buffer)\n    }).then(iteration);\n}\n\nexport function color_default(oid_length: number, outputbuffer: any, callback: CallableFunction) {    \n    const iteration = (c: {i: number, ci: number, it: number, total_stop: number}) => {\n        const itStep = 100000;\n        const step_stop = c.it * itStep * Uint8Array.BYTES_PER_ELEMENT;\n        const stop = Math.min(step_stop, c.total_stop);\n\n        for (; c.i < stop; c.i++) {\n            outputbuffer[c.ci++] = 255;\n            outputbuffer[c.ci++] = 255;\n            outputbuffer[c.ci++] = 255;\n        }\n\n        if (c.i < c.total_stop) {\n            c.it++;\n            Promise.resolve(c).then(iteration);\n        } else {\n            callback();\n        }\n        c = null as any;\n    }\n\n    Promise.resolve({\n        i: 0,\n        ci: 0,\n        it: 1,\n        total_stop: oid_length\n    }).then(iteration);\n}","import { IModel } from \"../types\";\nimport * as THREE from \"three\";\nimport { Decoder } from \"../utils/decoder\";\nimport { Tile } from \"../datamodel/tile\";\nimport { Model, ModelProxy } from \"./base\";\nimport { Overlay } from \"../datamodel/layer\";\n\n\nexport class PolygonalModel extends Model {\n    constructor(data: IModel, tile: Tile, callback: CallableFunction, abort: CallableFunction) {\n        super(tile.renderer);\n        const offset = tile.renderer.picker.offsetForLayer(tile.layer.name);\n        Decoder.base64tofloat32(data.vertices, abort, (vertices: Float32Array) => {\n            Decoder.base64toint32(data.attributes.oid.data, offset, abort, (objectid: Uint8Array) => {    \n                this.init(vertices, objectid, tile);\n                callback(this);\n            });\n        });\n    }\n\n    private init(vertices: Float32Array, objectid: Uint8Array, tile: Tile) {\n        const geometry = this.createGeometry(vertices, objectid);\n        this.createMesh(geometry);\n        this.createPickingMesh(geometry);\n        this.visible = tile.visible;\n        this.renderer.changed = true;  \n    }\n\n\n    private createPickingMesh(geometry: THREE.BufferGeometry) {\n        const pickingMesh = new THREE.Mesh(geometry, this.renderer.matlib.pickingPolygonMaterial);\n        this.renderer.pickingScene.add(pickingMesh);\n        this.pickingMesh = pickingMesh;\n    }\n\n    private createMesh(geometry: THREE.BufferGeometry) {\n        const material = this.renderer.matlib.polygonMaterial;\n        const mesh = new THREE.Mesh(geometry, material);\n        mesh.receiveShadow = true;\n        mesh.castShadow = true;\n        this.renderer.scene.add(mesh);\n        this.mesh = mesh;\n    }\n\n    private createGeometry(vertices: Float32Array, objectid: Uint8Array) {\n        const geometry = new THREE.BufferGeometry();\n        geometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n        geometry.setAttribute('objectID', new THREE.BufferAttribute(objectid, 4, true));\n        geometry.setAttribute('color', new THREE.BufferAttribute(this.baseColors(vertices.length), 3, true));\n        geometry.computeVertexNormals();\n        return geometry;\n    }\n}\n\n\nexport class PolygonalProxyModel extends ModelProxy {\n    constructor(data: IModel, tile: Tile, callback: CallableFunction, abort: CallableFunction) {\n        super(tile.renderer);\n        const offset_source = tile.renderer.picker.offsetForLayer((tile.layer as Overlay).source);\n        const offset_target = tile.renderer.picker.offsetForLayer((tile.layer as Overlay).target);\n        \n        Decoder.base64tofloat32(data.vertices, abort, (vertices: Float32Array) => {\n            Decoder.base64toint32(data.attributes.source_oid.data, offset_source, abort, (objectid: Uint8Array) => {    \n                this.init(vertices, objectid, tile);\n                callback(this);\n            });\n        });\n    }\n\n    private init(vertices: Float32Array, objectid: Uint8Array, tile: Tile) {\n        const geometry = this.createGeometry(vertices, objectid);\n        this.createMesh(geometry);\n        this.createPickingMesh(geometry);\n        this.visible = tile.visible;\n        this.renderer.changed = true;  \n    }\n\n\n    private createPickingMesh(geometry: THREE.BufferGeometry) {\n        const pickingMesh = new THREE.Mesh(geometry, this.renderer.matlib.pickingPolygonMaterial);\n        this.renderer.pickingScene.add(pickingMesh);\n        this.pickingMesh = pickingMesh;\n    }\n\n    private createMesh(geometry: THREE.BufferGeometry) {\n        const material = this.renderer.matlib.polygonMaterial;\n        const mesh = new THREE.Mesh(geometry, material);\n        mesh.receiveShadow = true;\n        mesh.castShadow = true;\n        this.renderer.scene.add(mesh);\n        this.mesh = mesh;\n    }\n\n    private createGeometry(vertices: Float32Array, objectid: Uint8Array) {\n        const geometry = new THREE.BufferGeometry();\n        geometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n        geometry.setAttribute('objectID', new THREE.BufferAttribute(objectid, 4, true));\n        geometry.setAttribute('color', new THREE.BufferAttribute(this.baseColors(vertices.length), 3, true));\n        geometry.computeVertexNormals();\n        return geometry;\n    }\n}","\n\nfunction capLeft(resolution: number) {\n    let vertices = [];\n    const shift = Math.PI / 2;\n    const step = Math.PI / resolution;\n\n    for (let i = 0; i < resolution; ++i) {\n        vertices.push(0, 0, 0);\n        vertices.push(Math.cos(shift + step * i), Math.sin(shift + step * i), 0);\n        vertices.push(Math.cos(shift + step * (i + 1)), Math.sin(shift + step * (i + 1)), 0);\n\n    }\n\n    return vertices\n}\n\nfunction capRight(resolution: number) {\n    let vertices = [];\n    const shift = Math.PI / 2;\n    const step = Math.PI / resolution;\n\n    for (let i = 0; i < resolution; ++i) {\n        vertices.push(1, 0, 0);\n        vertices.push(1 - Math.cos(shift + step * i), Math.sin(shift + step * i), 0);\n        vertices.push(1 - Math.cos(shift + step * (i + 1)), Math.sin(shift + step * (i + 1)), 0);\n    }\n\n    return vertices;\n}\n\nexport function segment(resolution: number = 5) {\n    let geometry = [\n        0, -1, 0,\n        1, -1, 0,\n        1, 1, 0,\n        0, -1, 0,\n        1, 1, 0,\n        0, 1, 0\n    ];\n\n    geometry = geometry.concat(capLeft(resolution));\n    geometry = geometry.concat(capRight(resolution));\n    return geometry;\n}\n","import { IModel } from \"../types\";\nimport * as THREE from \"three\";\nimport { Decoder } from \"../utils/decoder\";\nimport { segment } from \"./geometry\";\nimport { Tile } from \"../datamodel/tile\";\nimport { Model } from \"./base\";\nimport { Overlay } from \"../datamodel/layer\";\n\n\nexport class LineModel extends Model {\n    constructor(data: IModel, tile: Tile, callback: CallableFunction, abort: CallableFunction) {\n        super(tile.renderer);\n        const offset = tile.renderer.picker.offsetForLayer(tile.layer.name);\n\n        Decoder.base64tofloat32(data.vertices, abort, (vertices: Float32Array) => {\n            Decoder.base64toint32(data.attributes.oid.data, offset, abort, (objectid: Uint8Array) => {\n                const geometry = this.createGeometry(vertices); //offset\n                this.createMesh(geometry);\n\n                this.visible = tile.visible;\n                this.renderer.changed = true;\n                callback(this);\n            });\n        });\n    }\n\n    private createMesh(geometry: THREE.InstancedBufferGeometry) {\n        const mesh = new THREE.Mesh(geometry, this.renderer.matlib.lineMaterial);\n        mesh.frustumCulled = false; //this one was a big pain to figure out...\n        this.renderer.scene.add(mesh);\n        this.mesh = mesh;\n    }\n\n    private createGeometry(vertices: Float32Array) {\n        const geometry = new THREE.InstancedBufferGeometry();\n        geometry.instanceCount = vertices.length / 3;\n        geometry.setAttribute('position', new THREE.BufferAttribute(new Float32Array(segment()), 3));\n        geometry.setAttribute('lineStart', new THREE.InterleavedBufferAttribute(\n            new THREE.InstancedInterleavedBuffer(vertices, 6, 1), 3, 0));\n\n        geometry.setAttribute('lineEnd', new THREE.InterleavedBufferAttribute(\n            new THREE.InstancedInterleavedBuffer(vertices, 6, 1), 3, 3));\n\n        return geometry;\n    }\n}\n\nexport class LineProxyModel extends Model {\n    constructor(data: IModel, tile: Tile, callback: CallableFunction, abort: CallableFunction) {\n        super(tile.renderer);\n\n        const offset_source = tile.renderer.picker.offsetForLayer((tile.layer as Overlay).source);\n        const offset_target = tile.renderer.picker.offsetForLayer((tile.layer as Overlay).target);\n\n        Decoder.base64tofloat32(data.vertices, abort, (vertices: Float32Array) => {\n            Decoder.base64toint32(data.attributes.source_oid.data, offset_source, abort, (objectid: Uint8Array) => {    \n                const geometry = this.createGeometry(vertices); //offset\n                this.createMesh(geometry);\n\n                this.visible = tile.visible;\n                this.renderer.changed = true;\n                callback(this);\n            });\n        });\n    }\n\n    private createMesh(geometry: THREE.InstancedBufferGeometry) {\n        const mesh = new THREE.Mesh(geometry, this.renderer.matlib.lineMaterial);\n        mesh.frustumCulled = false; //this one was a big pain to figure out...\n        this.renderer.scene.add(mesh);\n        this.mesh = mesh;\n    }\n\n    private createGeometry(vertices: Float32Array) {\n        const geometry = new THREE.InstancedBufferGeometry();\n        geometry.instanceCount = vertices.length / 3;\n        geometry.setAttribute('position', new THREE.BufferAttribute(new Float32Array(segment()), 3));\n        geometry.setAttribute('lineStart', new THREE.InterleavedBufferAttribute(\n            new THREE.InstancedInterleavedBuffer(vertices, 6, 1), 3, 0));\n\n        geometry.setAttribute('lineEnd', new THREE.InterleavedBufferAttribute(\n            new THREE.InstancedInterleavedBuffer(vertices, 6, 1), 3, 3));\n\n        return geometry;\n    }\n}\n","import { PolygonalModel, PolygonalProxyModel } from \"../geometry/polygons\"\nimport { LineModel, LineProxyModel } from \"../geometry/lines\"\nimport { PointModel, PointProxyModel } from \"../geometry/points\"\nimport { Tile } from \"../datamodel/tile\";\nimport { IModel } from \"../types\";\nimport { Model } from \"./base\"\n\n\nconst registeredModels: {[name: string]: {[name: string]: new(data: IModel, tile: Tile, callback: CallableFunction, abort: CallableFunction) => Model }} = {\n    model: {\n        simplepolygon: PolygonalModel,\n        simpleline: LineModel,\n        simplepoint: PointModel,\n    },\n    proxy: {\n        simpleline: LineProxyModel,\n        simplepolygon: PolygonalProxyModel,\n        simplepoint: PointProxyModel,\n    }\n};\n\nconst modelTypes = Object.keys(registeredModels.model);\nconst proxyTypes = Object.keys(registeredModels.proxy);\n\n\nexport function deserializeModel(data: IModel, tile: Tile, callback: CallableFunction = () => {}, abort: CallableFunction = () => false) {\n    if (data.tags && data.tags.proxy === true) {\n        if (proxyTypes.includes(data.type)) \n            return new (registeredModels.proxy[data.type])(data, tile, callback, abort);\n        throw new Error(`Proxy type ${data.type} is not registered`);\n    } else {\n        if (modelTypes.includes(data.type))\n            return new registeredModels.model[data.type](data, tile, callback, abort);\n        throw new Error(`Model type ${data.type} is not registered`);\n    }\n}\n","import { IModel } from \"../types\";\nimport * as THREE from \"three\";\nimport { Decoder } from \"../utils/decoder\";\nimport { Tile } from \"../datamodel/tile\";\nimport { Model, ModelProxy } from \"./base\";\nimport { Overlay } from \"../datamodel/layer\";\n\n\nexport class PointModel extends Model {\n    constructor(data: IModel, tile: Tile, callback: CallableFunction, abort: CallableFunction) {\n        super(tile.renderer);\n        const offset = tile.renderer.picker.offsetForLayer(tile.layer.name);\n        Decoder.base64tofloat32(data.vertices, abort, (vertices: Float32Array) => {\n            Decoder.base64toint32(data.attributes.oid.data, offset, abort, (objectid: Uint8Array) => {    \n                this.init(vertices, objectid, tile);\n                callback(this);\n            });\n        });\n    }\n\n    private init(vertices: Float32Array, objectid: Uint8Array, tile: Tile) {\n        const geometry = this.createGeometry(vertices, objectid);\n        this.createMesh(geometry);\n        this.createPickingMesh(geometry);\n        this.visible = tile.visible;\n        this.renderer.changed = true;  \n    }\n\n\n    private createPickingMesh(geometry: THREE.BufferGeometry) {\n        const pickingMesh = new THREE.Mesh(geometry, this.renderer.matlib.pickingPointMaterial);\n        pickingMesh.frustumCulled = false;\n        this.renderer.pickingScene.add(pickingMesh);\n        this.pickingMesh = pickingMesh;\n    }\n\n    private createMesh(geometry: THREE.BufferGeometry) {\n        const material = this.renderer.matlib.pointMaterial;\n        const mesh = new THREE.Mesh(geometry, material);\n        mesh.frustumCulled = false;\n        //mesh.receiveShadow = true;\n        //mesh.castShadow = true;\n        this.renderer.scene.add(mesh);\n        this.mesh = mesh;\n    }\n\n    private createGeometry(vertices: Float32Array, objectid: Uint8Array) {\n        const symbol = new THREE.OctahedronGeometry(5, 5);\n        const symbolGeometry = new Float32Array(symbol.attributes.position.array);\n        symbol.dispose();\n\n        const geometry = new THREE.InstancedBufferGeometry();\n        geometry.instanceCount = vertices.length / 3;\n        geometry.setAttribute('position', new THREE.BufferAttribute(symbolGeometry, 3));\n        geometry.setAttribute('location', new THREE.InstancedBufferAttribute(vertices, 3, false, 1));\n        geometry.setAttribute('objectID', new THREE.InstancedBufferAttribute(objectid, 4, true, 1));\n        geometry.setAttribute('color', new THREE.InstancedBufferAttribute(this.baseColors(vertices.length), 3, true, 1));\n        geometry.computeVertexNormals();\n        return geometry;\n    }\n}\n\n\nexport class PointProxyModel extends ModelProxy {\n    constructor(data: IModel, tile: Tile, callback: CallableFunction, abort: CallableFunction) {\n        super(tile.renderer);\n        const offset_source = tile.renderer.picker.offsetForLayer((tile.layer as Overlay).source);\n        const offset_target = tile.renderer.picker.offsetForLayer((tile.layer as Overlay).target);\n        \n        Decoder.base64tofloat32(data.vertices, abort, (vertices: Float32Array) => {\n            Decoder.base64toint32(data.attributes.source_oid.data, offset_source, abort, (objectid: Uint8Array) => {    \n                this.init(vertices, objectid, tile);\n                callback(this);\n            });\n        });\n    }\n\n    private init(vertices: Float32Array, objectid: Uint8Array, tile: Tile) {\n        const geometry = this.createGeometry(vertices, objectid);\n        this.createMesh(geometry);\n        this.createPickingMesh(geometry);\n        this.visible = tile.visible;\n        this.renderer.changed = true;  \n    }\n\n\n    private createPickingMesh(geometry: THREE.BufferGeometry) {\n        const pickingMesh = new THREE.Mesh(geometry, this.renderer.matlib.pickingPointMaterial);\n        pickingMesh.frustumCulled = false;\n        this.renderer.pickingScene.add(pickingMesh);\n        this.pickingMesh = pickingMesh;\n    }\n\n    private createMesh(geometry: THREE.BufferGeometry) {\n        const material = this.renderer.matlib.pointMaterial;\n        const mesh = new THREE.Mesh(geometry, material);\n        mesh.frustumCulled = false;\n        //mesh.receiveShadow = true;\n        //mesh.castShadow = true;\n        this.renderer.scene.add(mesh);\n        this.mesh = mesh;\n    }\n\n    private createGeometry(vertices: Float32Array, objectid: Uint8Array) {\n        const symbol = new THREE.OctahedronGeometry(5, 5);\n        const symbolGeometry = new Float32Array(symbol.attributes.position.array);\n        symbol.dispose();\n\n        const geometry = new THREE.InstancedBufferGeometry();\n        geometry.instanceCount = vertices.length / 3;\n        geometry.setAttribute('position', new THREE.BufferAttribute(symbolGeometry, 3));\n        geometry.setAttribute('location', new THREE.InstancedBufferAttribute(vertices, 3, false, 1));\n        geometry.setAttribute('objectID', new THREE.InstancedBufferAttribute(objectid, 4, true, 1));\n        geometry.setAttribute('color', new THREE.InstancedBufferAttribute(this.baseColors(vertices.length), 3, true, 1));\n        geometry.computeVertexNormals();\n        return geometry;\n    }\n}\n","import { ITile } from \"../types\";\nimport { Layer, Overlay } from \"./layer\";\nimport { Renderer } from \"../renderer/renderer\"\nimport { Vector2, Vector3 } from \"three\";\nimport iaxios from \"../../axios\";\nimport axios from \"axios\";\nimport { Model } from \"../geometry/base\"\nimport { deserializeModel } from \"../geometry/deserialize\"\nimport { LayerStyle } from \"../renderer/style\";\n\nclass TileLoader {\n    //axios stop request\n    stopFlag: any;\n    loaded: boolean;\n\n    constructor() {\n        this.loaded = false;\n    }\n\n    get(tile: Tile, callback: CallableFunction) {\n        this.stopFlag = axios.CancelToken.source();\n        tile.renderer.status.actions.loadingGeometry.start();\n\n        iaxios.get(`/api/data/${tile.layer.project}/${tile.layer.name}/grid/tiles/${tile.sourceFile}`, {\n            cancelToken: this.stopFlag.token\n        }).then(\n            (response) => {\n                tile.renderer.status.actions.loadingGeometry.stop();\n\n                if (this.loaded) //to avoid race conditions\n                    return;\n\n                this.loaded = true;\n                this.stopFlag = null;\n                callback(response.data);\n            }\n        ).catch((reject) => {\n            tile.renderer.status.actions.loadingGeometry.stop();\n            this.stopFlag = null;\n        });\n    }\n\n    abort() {\n        if (this.stopFlag)\n            this.stopFlag.cancel();\n        this.stopFlag = null;\n    }\n}\n\n\nexport class Tile {\n    bbox: [Vector3, Vector3];\n    brect: [Vector2, Vector2];\n    x: number;\n    y: number;\n    renderer: Renderer;\n    layer: Layer | Overlay;\n    sourceFile: string;\n    models: Model[];\n    private isVisible: boolean;\n    private loader: TileLoader;\n    private caching: boolean; \n\n\n    constructor(data: ITile, renderer: Renderer, layer: Layer | Overlay) {\n        this.bbox = [new Vector3(...data.box[0]), new Vector3(...data.box[1])];\n        this.brect = [new Vector2(this.bbox[0].x, this.bbox[0].y), new Vector2(this.bbox[1].x, this.bbox[1].y)];\n        this.x = data.x;\n        this.y = data.y;\n        this.sourceFile = data.file;\n        this.layer = layer;\n        this.renderer = renderer;\n        this.isVisible = false;\n        this.models = [];\n        this.loader = new TileLoader();\n        this.caching = false;\n    }\n\n    set visible(isVisible: boolean) {\n        if (this.isVisible === isVisible)\n            return;\n\n        this.isVisible = isVisible;\n\n        if (isVisible)\n            this.show();\n        else\n            this.hide();\n    }\n\n    get visible() {\n        return this.isVisible;\n    }\n\n    show() {\n        if (!this.loader.loaded) {\n            this.loader.get(this, (models: Array<any>) => {\n\n                if (!this.isVisible && !this.caching)\n                    return;\n\n                for (let modeldata of models) {\n\n                    this.renderer.status.actions.parsingGeometry.start();\n                    deserializeModel(modeldata, this, (model: Model) => {\n                        this.models.push(model);\n                        this.renderer.status.actions.parsingGeometry.stop();\n\n                        if (!this.isVisible && !this.caching)\n                            return this.hide();\n\n                        this.layer.applyStyleToModels(this.models);\n\n                        if (!this.isVisible && !this.caching)\n                            return this.hide();\n\n                    }, () => !this.isVisible );\n                }\n            });\n        }\n\n        if (this.caching) {\n            for (const m of this.models)\n                m.visible = true;\n        }\n    }\n\n    hide() {\n        if (!this.loader.loaded) {\n            this.loader.abort();\n        }\n        \n        if (!this.caching) {\n            this.disposeCache();\n        } else {\n            for (const m of this.models)\n                m.visible = false;\n        }\n    }\n\n    remove() {\n        if (this.models.length > 0) {\n            for (const m of this.models)\n                m.remove();\n            this.models = [];\n        }\n    }\n\n    enableCache() {\n        this.caching = true;\n    }\n\n    disableCache() {\n        this.caching = false;\n\n        if (!this.isVisible) {\n            this.disposeCache();\n        }\n    }\n    \n    disposeCache() {\n        console.log(\"dispose cache\");\n        for (const m of this.models)\n            m.remove();\n\n        this.models = [];\n        this.loader.loaded = false;\n    }\n}","import { Vector2, Vector3 } from \"three\";\nimport { Renderer } from \"../renderer/renderer\";\nimport { Tile } from \"./tile\";\nimport { IVecBBox, ILayout } from \"../types\";\nimport { Layer, Overlay } from \"./layer\";\nimport { LayerStyle } from \"../renderer/style\";\n\n\nfunction getNthTriangularNumber(n: number) {\n    return (n * (n + 1)) / 2;\n}\n\n\nfunction toSpiral(x: number, y: number) {\n    let level = Math.max(Math.abs(x), Math.abs(y))\n\n    if (x === 0 && y === 0) {\n        return 0\n    }\n\n    let base = getNthTriangularNumber(level - 1) * 8;\n\n    if ((x > Math.abs(y)) || (x === y && x > 0)) {\n        return base + level + y;\n    } else if (((y > Math.abs(x)) || (y === -x)) && (y > 0)) {\n        return base + (level * 4) - (level) - x;\n    } else if ((x < y) || ((x === y) && (x < 0))) {\n        return base + (level * 5) - y;\n    } else if ((y < x) || ((-y === x) && (y < 0))) {\n        return base + (level * 7) + x;\n    }\n    throw new Error(\"Cannot covert to 1D\");\n}\n\nfunction extend(a: IVecBBox, b: IVecBBox) {\n    a[0].min(b[0]);\n    a[1].max(b[1]);\n}\n\nfunction center(b: IVecBBox) {\n    return new Vector2((b[0].x + b[1].x) * 0.5, (b[0].y + b[1].y) * 0.5);\n}\n\n\nexport class Grid {\n    bbox: IVecBBox;\n    brect: [Vector2, Vector2];\n    focusPoint: Vector2;\n    renderer: Renderer;\n    tileSize: number;\n\n    tiles: Map<number, Tile>;\n    visible_radius: number;\n    visible: Set<Tile>;\n    visibleSwap: Set<Tile>;\n    readonly zero2: Vector2;\n    layer: Layer | Overlay;\n    \n    constructor(data: ILayout, renderer: Renderer, layer: Layer | Overlay) {\n        this.tileSize = data.tile_size;\n        this.renderer = renderer;\n        this.layer = layer;\n\n        this.bbox = [new Vector3(Infinity, Infinity, Infinity), new Vector3(-Infinity, -Infinity, -Infinity)];\n        this.tiles = new Map<number, Tile>();\n        \n        this.createTiles(data, renderer, layer);\n        \n        this.brect = [new Vector2(this.bbox[0].x, this.bbox[0].y), new Vector2(this.bbox[1].x, this.bbox[1].y)];\n        this.focusPoint = new Vector2(Infinity, Infinity);\n        \n        this.visible_radius = 2000;\n        this.visibleSwap = new Set<Tile>();\n        this.visible = new Set<Tile>();\n        \n        this.zero2 = new Vector2();\n    }\n\n    get center() {\n        return center(this.bbox);\n    }\n\n    hide() {\n        for (const tile of this.visible.values()) {\n            tile.visible = false;\n        }\n    }\n\n    show() {\n        for (const tile of this.visible.values()) {\n            tile.visible = true;\n        }\n    }\n    \n    private createTiles(data: ILayout, renderer: Renderer, layer: Layer | Overlay) {\n        for (const tiledata of data.tiles) {\n            let idx = toSpiral(tiledata.x, tiledata.y);\n            const tile = new Tile(tiledata, renderer, layer);\n            extend(this.bbox, tile.bbox);\n            this.tiles.set(idx, tile);\n        }\n    }\n\n    updateVisibleTiles(fp: Vector3) {\n        const visibleTile = this.focusPoint.clone().divideScalar(this.tileSize).floor()\n        const nvisibleTile = new Vector2(fp.x, fp.y).divideScalar(this.tileSize).floor();\n\n        if (!visibleTile.equals(nvisibleTile)) {\n            this.focusPoint.set(fp.x, fp.y);\n            this.updateVisibility(nvisibleTile)\n        } \n    }\n\n    reloadVisibility() {\n        this.updateVisibility(this.focusPoint.clone().divideScalar(this.tileSize).floor());\n    }\n\n    updateVisibility(visibleTile: Vector2) {\n        const tmpVisible = this.visible;\n        this.visible = this.visibleSwap;\n        this.visibleSwap = tmpVisible;\n\n        const trad = Math.ceil(this.visible_radius / this.tileSize);\n        const sid = visibleTile.clone().subScalar(trad);\n        const eid = visibleTile.clone().addScalar(trad + 1);\n\n        this.visible.clear();\n\n        for (let x = sid.x; x < eid.x; ++x) {\n            for (let y = sid.y; y < eid.y; ++y) {\n                let idx = toSpiral(x, y);\n                const tile = this.tiles.get(idx);\n                if (tile)\n                {\n                    tile.visible = true;\n                    this.visible.add(tile);\n                }\n            }\n        }\n\n        this.visibleSwap.forEach((tile: Tile) => {\n            if (!this.visible.has(tile)) {\n                tile.visible = false;\n            }\n        });\n    }\n}","import { Renderer } from \"../renderer/renderer\";\nimport { Grid } from \"./grid\";\nimport { ILayerData, IOverlayData, ILayerBaseData } from \"../types\";\nimport * as THREE from \"three\";\nimport { LayerStyle } from \"../renderer/style\";\nimport iaxios from \"../../axios\";\nimport { Model } from \"../geometry/base\";\n\n\n\nabstract class LayerBase {\n    name: string;\n    project: string;\n    renderer: Renderer;\n    grid!: Grid; //undefined if the layer is not visible\n    style?: LayerStyle;\n    visibility: boolean;\n\n\n    constructor(renderer: Renderer, project: string, data: ILayerBaseData, style_names: string[]) {\n        this.name = data.name;\n        this.project = project;\n        this.renderer = renderer;\n        this.visibility = true;\n    }\n\n    set visible(v: boolean) {\n        if (v === this.visibility)\n            return;\n\n        this.visibility = v;\n        if (this.visibility)\n            this.show();\n        else\n            this.hide();\n    }\n\n    get visible() {\n        return this.visibility;\n    }\n    \n    init(data: ILayerBaseData) {\n        this.grid = new Grid(data.layout, this.renderer, this as any);\n        this.renderer.controls.focus(this.grid.center);\n        this.grid.updateVisibleTiles(this.renderer.controls.target);\n        this.renderer.changed = true;\n    }\n\n    updateVisibleRadius(point: THREE.Vector3) {\n        if (!this.visibility)\n            return;\n\n        if (this.grid)\n            this.grid.updateVisibleTiles(point);\n    }\n\n    hide() {\n        this.grid.hide();\n        this.renderer.changed = true;\n    }\n    \n    show() {\n        this.grid.reloadVisibility();\n        this.renderer.changed = true;\n    }\n\n    setVisibleRadius(radius: number) {\n        this.grid.visible_radius = radius;\n        if (this.visible) {\n            this.grid.reloadVisibility();\n            this.renderer.changed = true;\n        }\n    }\n\n    applyStyle(style: string) {\n        iaxios.get(`/api/data/${this.project}/styles/${style}/${this.name}.json`, {\n            headers: {\n                'Cache-Control': 'no-cache',\n                'Pragma': 'no-cache',\n                'Expires': '0'\n            }\n        }).then((response) => {\n            const style = new LayerStyle(response.data, (lstyle: LayerStyle) => {\n                this.style = lstyle;\n                for (let [_, tile] of this.grid.tiles) {\n                    this.applyStyleToModels(tile.models);\n                }\n            });\n        }).catch((_) => {\n            for (let [_, tile] of this.grid.tiles) {\n                this.applyStyleToModels(tile.models);\n            }\n        });\n    }\n\n    abstract applyStyleToModels(models: Model[]): void;\n\n    clearStyle() {\n        this.style = undefined;\n        for (let [_, tile] of this.grid.tiles) {\n            this.applyStyleToModels(tile.models);\n        }\n    }\n\n    enableCache() {\n        for (let [_, tile] of this.grid.tiles) {\n            tile.enableCache();\n        }\n    }\n\n    disableCache() {\n        for (let [_, tile] of this.grid.tiles) {\n            tile.disableCache();\n        }\n    }\n}\n\n\nexport class Layer extends LayerBase {\n    size: number;\n\n    constructor(renderer: Renderer, project: string, data: ILayerData, style_names: string[]) {\n        super(renderer, project, data, style_names);\n        this.size = data.size;\n        this.renderer.picker.offsetForLayer(this.name, this.size);\n        this.init(data);\n    }\n\n    applyStyleToModels(models: Model[]) {\n        const offset = this.renderer.picker.offsetForLayer(this.name);\n        \n        for (let model of models) {\n            model.applyStyle(offset, this.style);\n        }\n    }\n}\n\nexport class Overlay extends LayerBase {\n    source: string;\n    target: string;\n    size: [number, number];\n\n    constructor(renderer: Renderer, project: string, data: IOverlayData, style_names: string[]) {\n        super(renderer, project, data, style_names);\n        this.source = data.source;\n        this.target = data.target;\n        this.size = data.size;\n        this.renderer.picker.offsetForLayer(this.source, this.size[0]);\n        this.renderer.picker.offsetForLayer(this.target, this.size[1]);\n        this.init(data);\n    }\n\n    applyStyleToModels(models: Model[]) {\n        const offset = this.renderer.picker.offsetForLayer(this.source);\n        \n        for (let model of models) {\n            model.applyStyle(offset, this.style);\n        }\n    }\n}\n\n","\nimport { Renderer } from '../renderer/renderer'\nimport iaxios from '../../axios'\nimport { Layer, Overlay } from './layer'\n\n\nexport class Project {\n    name: string;\n    renderer: Renderer;\n    layers: (Layer | Overlay)[];\n    styles: string[];\n    usedStyle?: string;\n\n    constructor(name: string, renderer: Renderer) {\n        this.name = name;\n        this.renderer = renderer;\n        this.layers = [];\n        this.styles = [];\n\n        iaxios.get(`/api/data/${this.name}/layout.json`, {\n            headers: {\n                'Cache-Control': 'no-cache',\n                'Pragma': 'no-cache',\n                'Expires': '0'\n            }\n        }).then((response) => {\n            const styles = response.data.styles;\n            this.styles = styles;\n            for (const layer of response.data.layers)\n            {\n                if(!layer.init || layer.disabled)\n                    continue;\n                \n                if (layer.type === \"layer\")\n                    this.layers.push(new Layer(this.renderer, this.name, layer, styles));   \n            }\n\n            for (const overlay of response.data.layers)\n            {\n                if(!overlay.init || overlay.disabled)\n                    continue;\n                \n                if (overlay.type === \"overlay\")\n                    this.layers.push(new Overlay(this.renderer, this.name, overlay, styles));   \n            }\n        });\n    }\n\n    updateVisibleRadius(target: THREE.Vector3) {\n        for (const layer of this.layers){\n            layer.updateVisibleRadius(target);\n        }\n    }\n\n    setVisibleRadius(radius: number) {\n        for(let layer of this.layers)\n            layer.setVisibleRadius(radius);\n    }\n\n    setPointSize(size: number){\n        this.renderer.setPointSize(size);\n    }\n\n    useCache(enable: boolean){\n        for(let layer of this.layers)\n            enable? layer.enableCache() : layer.disableCache();\n    }\n\n    applyStyle(style: string){\n        if(this.styles.indexOf(style) === -1){\n            return;\n        }\n\n        this.usedStyle = style;\n        for(const layer of this.layers){\n            layer.applyStyle(style);\n        }\n    }\n\n    clearStyle(){\n        this.usedStyle = undefined;\n        for(const layer of this.layers){\n            layer.clearStyle();\n        }\n    }\n}","import { Renderer } from \"./renderer/renderer\";\nimport { Selector } from \"./renderer/selector\";\nimport { Project } from \"./datamodel/project\";\nimport iaxios from \"../axios\";\nimport { apiurl } from \"../url\";\n\n\nexport class MetacityEngine {\n    project_name: string;\n    canvas: HTMLCanvasElement;\n    \n    renderer: Renderer;\n    selector: Selector;\n    project!: Project;\n\n    keymap: {[key: string]: boolean};\n    showMetaCallback?: (meta: {[name: string]: any}) => void;\n\n    constructor(project_name: string, canvas: HTMLCanvasElement) {\n        this.project_name = project_name;\n        this.canvas = canvas;\n        this.renderer = new Renderer(this.canvas,  () => this.actions());\n        this.selector = new Selector(this.renderer);\n        this.keymap = {}\n    }\n\n    init() {\n        this.project = new Project(this.project_name, this.renderer);\n        this.renderer.controls.controls.addEventListener('change', () => this.moved())\n    }\n\n    moved() {\n        this.project.updateVisibleRadius(this.renderer.controls.target);        \n        this.renderer.changed = true;\n    }\n\n    select(oid: number) {\n        this.renderer.select(oid);\n    }\n\n    doubleclick(x: number, y: number) {\n        const selected = this.renderer.click(x, y);\n\n        console.log('doubleclick', selected);\n        if (!selected)\n            return;\n\n        iaxios.post(apiurl.GETMETA, {\n            project: this.project_name,\n            layer: selected.layer,\n            oid: selected.oid\n        }).then(res => {\n            console.log(res.data);\n            const data = res.data;\n            data['oid'] = selected.oid;\n            data['layer'] = selected.layer;\n\n            if (this.showMetaCallback)\n                this.showMetaCallback(res.data);\n\n        });\n    }\n\n    keyDown(key: string) {\n        console.log('key down', key);\n        this.keymap[key] = true;\n    }\n\n    keyUp(key: string) {\n        console.log('key up', key);\n        this.keymap[key] = false;\n    }\n\n    actions() {\n        if (this.keymap['KeyA'])\n        {\n            this.renderer.controls.swap();\n            this.keymap['KeyA'] = false;\n        }\n\n        if (this.keymap['KeyU'])\n        {\n            this.renderer.updateHelper();\n            this.keymap['KeyU'] = false;\n        }\n    }\n\n    resize(x: number, y: number) {\n        this.renderer.resize(x, y);\n    }\n\n    exit() {\n        \n    }\n}","import { EyeOffIcon, EyeOpenIcon, Heading, Icon, IconButton, Pane, PropertiesIcon, SideSheet, Switch, Text } from \"evergreen-ui\";\nimport { useEffect, useState } from \"react\"\nimport { MetacityEngine } from \"../../engine/engine\"\n\n\n\n\nfunction StyleMenu(props: { engine: MetacityEngine | undefined }) {\n    const { engine } = props;\n    const [selected, setSelected] = useState<string | undefined>(undefined);\n\n    const applyStyle = (style?: string) => {\n        if (engine == null)\n            return;\n        \n        setSelected(style);\n\n        if (style)\n            engine.project.applyStyle(style);\n        else\n            engine.project.clearStyle();\n    };\n\n    useEffect(() => {\n        if (!engine)\n            return;\n\n        setSelected(engine.project.usedStyle);\n\n    }, [engine]);\n\n    return (\n        <Pane className=\"styles\">\n            <Heading size={300} marginBottom={10}>Styles</Heading>\n            {engine?.project.styles.map(style => (\n                <Pane key={style} onClick={() => applyStyle(style)} className={`style ${selected === style ? \"selected\" : \"\"}`}>\n                    {style}\n                </Pane>\n            ))}\n            <Pane onClick={() => applyStyle()} className={`style ${selected === undefined ? \"selected\" : \"\"}`}>\n                No Style\n            </Pane>\n        </Pane>\n    )\n\n\n}\n\n\nfunction LayerMenu(props: { engine: MetacityEngine | undefined }) {\n    const { engine } = props;\n    const [visibility, setVisibility] = useState<boolean[]>([]);\n\n\n    useEffect(() => {\n        if (!engine)\n            return;\n        setVisibility(engine.project.layers.map((layer) => layer.visible));\n    }, [engine]);\n\n    const toggleVisibility = (index: number) => {\n        if (!engine)\n            return;\n        engine.project.layers[index].visible = !visibility[index];\n        setVisibility(visibility.map((v, i) => i === index ? !v : v));\n    };\n\n\n    return (\n        <Pane className=\"layers\">\n            <Heading size={300} marginBottom={10}>Layers</Heading>\n            {engine?.project.layers.map((layer, i) => (\n                <Pane key={layer.name} className=\"layer\" onClick={() => toggleVisibility(i)}>\n                    { visibility[i] ? <Icon icon={EyeOpenIcon}/> : <Icon icon={EyeOffIcon}/>}\n                    <Pane className=\"layerName\">{layer.name}</Pane>\n                </Pane>\n            ))}\n        </Pane>\n    )\n}\n\n\nexport function ViewMenu(props: { engine: MetacityEngine | undefined }) {\n    const { engine } = props;\n    const [menuIsShown, setMenuIsShown] = useState(false);\n    const [radius, setRadius] = useState<number>(2000);\n    const [pointSize, setPointSize] = useState<number>(1);\n    const [shadows, setShadows] = useState<boolean>(false);\n    const [cache, setCache] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (!engine)\n            return;\n            Promise.resolve(1).then(() => engine.project.setVisibleRadius(radius));\n    }, [engine, radius]);\n\n\n    useEffect(() => {\n        if (!engine)\n            return;\n        Promise.resolve(1).then(() => {\n            if (shadows)\n                engine.project.renderer.enableShadows();\n            else\n                engine.project.renderer.disableShadows();\n        });\n    }, [engine, shadows]);\n\n    useEffect(() => {\n        if (!engine)\n            return;\n        Promise.resolve(1).then(() => {\n            engine.project.useCache(cache);\n        });\n    }, [engine, cache]);\n\n    useEffect(() => {\n        if (!engine)\n            return;\n        Promise.resolve(1).then(() => engine.project.setPointSize(pointSize));\n    }, [engine, pointSize]);\n\n    const updateRadius = (value: string) => {\n        const v = parseInt(value);\n        if (v !== radius) {\n            setRadius(v);\n        }\n    }\n\n    const updatePointSize = (value: string) => {\n        const v = parseFloat(value);\n        if (v !== pointSize) {\n            setPointSize(v);\n        }\n    }\n\n    const toggleShadows = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (!engine)\n            return;\n\n        setShadows(e.target.checked);\n    }\n\n    const toggleCache = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (!engine)\n            return;\n\n        setCache(e.target.checked);\n    }\n    \n    return (\n        <>\n            <SideSheet\n                isShown={menuIsShown}\n                onCloseComplete={() => setMenuIsShown(false)}\n                preventBodyScrolling\n                width=\"auto\"\n                >\n                <Pane className=\"viewSettings\">\n                    <Heading size={500} className=\"title\">{engine?.project.name}</Heading>\n                    <LayerMenu engine={engine} />\n                    <StyleMenu engine={engine} />\n                    <Pane className=\"settings\">\n                        <Pane className=\"setting\">\n                            <Heading size={100}>Visible Radius: {radius}</Heading>\n                            <Pane className=\"controls\">\n                                <input type=\"range\" className=\"visibleRange\" min={0} max={20000} step={1000} defaultValue={radius} onChange={(e) => updateRadius(e.target.value)}/>\n                            </Pane>\n                        </Pane>\n                        <Pane className=\"setting\">\n                            <Heading size={100}>Point Size: {pointSize}</Heading>\n                            <Pane className=\"controls\">\n                                <input type=\"range\" className=\"visibleRange\" min={0} max={5} step={0.1} defaultValue={pointSize} onChange={(e) => updatePointSize(e.target.value)}/>\n                            </Pane>\n                        </Pane>\n                        <Pane className=\"setting\">\n                            <Pane className=\"inlineControls\">\n                            <Heading size={100}>Shadows: {shadows ? \"on\" : \"off\"}</Heading>\n                                <Switch checked={shadows} onChange={(e) => toggleShadows(e)}/>\n                            </Pane>\n                        </Pane>\n                        <Pane className=\"setting\">\n                            <Pane className=\"inlineControls\">\n                            <Heading size={100}>Caching Data: {cache ? \"on\" : \"off\"}</Heading>\n                                <Switch checked={cache} onChange={(e) => toggleCache(e)}/>\n                            </Pane>\n                        </Pane>\n                    </Pane>\n                </Pane>\n            </SideSheet>\n            <Pane className=\"viewControls\">\n                <IconButton icon={PropertiesIcon} appearance=\"minimal\" onClick={() => setMenuIsShown(true)} />\n            </Pane>\n        </>\n    )\n}","import { CornerDialog, Pane, Text } from \"evergreen-ui\";\nimport { useEffect, useState } from \"react\"\nimport { MetacityEngine } from \"../../engine/engine\"\n\n\n\n\nexport function MetaDialog(props: {engine: MetacityEngine | undefined}) {\n    const {engine} = props;\n\n    const [meta, setMeta] = useState<{[name: string]: any}>({});\n    const [metaIsShown, setMetaIsShown] = useState(false);\n\n\n    const showMeta = (data: {[name: string]: any}) => {\n        setMeta(data);\n        setMetaIsShown(true);\n    }\n\n\n    useEffect(() => {\n        if (engine)\n            engine.showMetaCallback = showMeta;\n    }, [engine]);\n\n\n    return (\n        <CornerDialog\n            title=\"Metadata\"\n            hasCancel={false}\n            hasFooter={false}\n            width=\"auto\"\n            isShown={metaIsShown}\n            onCloseComplete={() => { engine?.select(-1); setMetaIsShown(false) }}\n            onCancel={() => { engine?.select(-1); setMetaIsShown(false) }}\n        >\n            <Pane className=\"meta\">\n                {\n                    Object.keys(meta).map(key => (\n                        <Pane key={key} className=\"attribute\">\n                            <Text className=\"key\">{key}:</Text> <Text className=\"value\">{meta[key]}</Text>\n                        </Pane>\n                    ))\n                }\n            </Pane>\n        </CornerDialog>\n    )\n}","import { Pane } from \"evergreen-ui\";\nimport { useEffect, createRef, useState, useLayoutEffect } from \"react\"\nimport { useParams } from \"react-router\"\nimport { MetacityEngine } from \"../engine/engine\"\nimport { ViewMenu } from \"./elements/viewmenu\"\nimport { MetaDialog } from \"./elements/metadialog\"\n\n\nfunction useWindowSize() {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n        function updateSize() {\n            setSize([window.innerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    }, []);\n    return size;\n}\n\n\nexport function View() {\n    const { project_name } = useParams<{ project_name: string }>();\n    const [width, height] = useWindowSize();\n    const [engine, setEngine] = useState<MetacityEngine | undefined>(undefined);\n    const canvas = createRef<HTMLCanvasElement>();\n\n    useEffect(() => {\n        if (canvas.current == null)\n            return;\n\n        const engine = new MetacityEngine(project_name, canvas.current);\n        engine.init();\n        setEngine(engine);\n\n        engine.renderer.frame();\n\n        return () => {\n            engine.exit();\n            window.location.reload();\n        };\n\n    }, [project_name]);\n\n\n    useEffect(() => {\n        if (engine == null)\n            return;\n\n        engine.resize(width, height);\n    }, [width, height]);\n\n    return (\n        <Pane className=\"canvasAnchor\">\n            <MetaDialog engine={engine} />\n            <ViewMenu engine={engine} />\n            <canvas\n                ref={canvas}\n                onDoubleClick={(event) => { if (!engine) return; engine.doubleclick(event.clientX, event.clientY) }}\n                onKeyDown={(event) => { if (event.repeat || !engine) return; engine.keyDown(event.code); }}\n                onKeyUp={(event) => { if (event.repeat || !engine) return; engine.keyUp(event.code); }}\n                tabIndex={0}\n            >\n                Your browser does not support HTML5 canvas\n            </canvas>\n            <Pane id=\"viewStatusBar\">\n                Status\n            </Pane>\n        </Pane>\n    )\n}","import { Button, CubeIcon, Heading, Pane, UpdatedIcon, ProjectsIcon, CodeIcon, CornerDialog, Pre } from 'evergreen-ui'\nimport { useHistory, useParams } from 'react-router';\nimport { Header } from './elements/header';\n\nimport Editor, { Monaco } from \"@monaco-editor/react\";\nimport * as monaco from \"monaco-editor/esm/vs/editor/editor.api\";\nimport { TextDialog } from './elements/dialog';\nimport { apiurl, url } from '../url';\nimport { toast } from 'react-toastify';\nimport { useEffect, useState } from 'react';\nimport iaxios from '../axios';\n\n\n\n/* eslint-disable quotes */\n\n// This config defines the editor's view.\nexport const options = {\n    lineNumbers: false,\n    scrollBeyondLastLine: false,\n    readOnly: false,\n    fontSize: 12,\n}\n\n// This config defines how the language is displayed in the editor.\nexport const languageDef = {\n    defaultToken: \"\",\n    number: /\\d+(\\.\\d+)?/,\n\n    //here is the list of all the tokens \n    //it as adressed as @keywords in the tokenizer\n    keywords: [\n        \"@layer\",\n        \"@target\",\n        \"@source\",\n        \"@meta\"\n    ],\n    \n    typeKeywords: [\n        \"@default\",\n        \"@color\",\n        \"@visible\",\n    ],\n\n    // we include these common regular expressions\n\tsymbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n\tescapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n\tdigits: /\\d+(_+\\d+)*/,\n\toctaldigits: /[0-7]+(_+[0-7]+)*/,\n\tbinarydigits: /[0-1]+(_+[0-1]+)*/,\n\thexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n\n\tregexpctl: /[(){}\\[\\]\\$\\^|\\-*+?\\.]/,\n\tregexpesc: /\\\\(?:[bBdDfnrstvwWn0\\\\\\/]|@regexpctl|c[A-Z]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})/,\n\n\n    tokenizer: {\n        root: [\n\t\t\t[/[{}]/, 'delimiter.bracket'],\n\t\t\t{ include: 'common' }\n\t\t],\n\n\t\tcommon: [\n\t\t\t// identifiers and keywords\n\t\t\t[/@[a-z_$][\\w$]*/, {\n\t\t\t\tcases: {\n\t\t\t\t\t'@typeKeywords': 'keyword',\n\t\t\t\t\t'@keywords': 'type.identifier',\n\t\t\t\t\t'@default': 'identifier'\n\t\t\t\t}\n\t\t\t}],\n\t\t\t//[/[A-Z][\\w\\$]*/, 'type.identifier'],  // to show class names nicely\n\t\t\t// [/[A-Z][\\w\\$]*/, 'identifier'],\n\n\t\t\t// whitespace\n\t\t\t{ include: '@whitespace' },\n\n\t\t\t// regular expression: ensure it is terminated before beginning (otherwise it is an opeator)\n\t\t\t[/\\/(?=([^\\\\\\/]|\\\\.)+\\/([gimsuy]*)(\\s*)(\\.|;|\\/|,|\\)|\\]|\\}|$))/, { token: 'regexp', bracket: '@open', next: '@regexp' }],\n\n\t\t\t// delimiters and operators\n\t\t\t[/[()\\[\\]]/, '@brackets'],\n\t\t\t[/[<>](?!@symbols)/, '@brackets'],\n\t\t\t[/@symbols/, {\n\t\t\t\tcases: {\n\t\t\t\t\t'@default': ''\n\t\t\t\t}\n\t\t\t}],\n\n\t\t\t// numbers\n\t\t\t[/(@digits)[eE]([\\-+]?(@digits))?/, 'number.float'],\n\t\t\t[/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?/, 'number.float'],\n\t\t\t[/0[xX](@hexdigits)/, 'number.hex'],\n\t\t\t[/#(@hexdigits)/, 'number.hex'],\n\t\t\t[/0[oO]?(@octaldigits)/, 'number.octal'],\n\t\t\t[/0[bB](@binarydigits)/, 'number.binary'],\n\t\t\t[/(@digits)/, 'number'],\n\n\t\t\t// delimiter: after number because of .\\d floats\n\t\t\t[/[;,.]/, 'delimiter'],\n\n\t\t\t// strings\n\t\t\t[/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],  // non-teminated string\n\t\t\t[/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],  // non-teminated string\n\t\t\t[/\"/, 'string', '@string_double'],\n\t\t\t[/'/, 'string', '@string_single'],\n\t\t\t[/`/, 'string', '@string_backtick'],\n\t\t],\n\n\t\twhitespace: [\n\t\t\t[/[ \\t\\r\\n]+/, ''],\n\t\t],\n\n\n\t\t// We match regular expression quite precisely\n\t\tregexp: [\n\t\t\t[/(\\{)(\\d+(?:,\\d*)?)(\\})/, ['regexp.escape.control', 'regexp.escape.control', 'regexp.escape.control']],\n\t\t\t[/(\\[)(\\^?)(?=(?:[^\\]\\\\\\/]|\\\\.)+)/, ['regexp.escape.control', { token: 'regexp.escape.control', next: '@regexrange' }]],\n\t\t\t[/(\\()(\\?:|\\?=|\\?!)/, ['regexp.escape.control', 'regexp.escape.control']],\n\t\t\t[/[()]/, 'regexp.escape.control'],\n\t\t\t[/@regexpctl/, 'regexp.escape.control'],\n\t\t\t[/[^\\\\\\/]/, 'regexp'],\n\t\t\t[/@regexpesc/, 'regexp.escape'],\n\t\t\t[/\\\\\\./, 'regexp.invalid'],\n\t\t\t[/(\\/)([gimsuy]*)/, [{ token: 'regexp', bracket: '@close', next: '@pop' }, 'keyword.other']],\n\t\t],\n\n\t\tregexrange: [\n\t\t\t[/-/, 'regexp.escape.control'],\n\t\t\t[/\\^/, 'regexp.invalid'],\n\t\t\t[/@regexpesc/, 'regexp.escape'],\n\t\t\t[/[^\\]]/, 'regexp'],\n\t\t\t[/\\]/, { token: 'regexp.escape.control', next: '@pop', bracket: '@close' }],\n\t\t],\n\n\t\tstring_double: [\n\t\t\t[/[^\\\\\"]+/, 'string'],\n\t\t\t[/@escapes/, 'string.escape'],\n\t\t\t[/\\\\./, 'string.escape.invalid'],\n\t\t\t[/\"/, 'string', '@pop']\n\t\t],\n\n\t\tstring_single: [\n\t\t\t[/[^\\\\']+/, 'string'],\n\t\t\t[/@escapes/, 'string.escape'],\n\t\t\t[/\\\\./, 'string.escape.invalid'],\n\t\t\t[/'/, 'string', '@pop']\n\t\t],\n\n\t\tstring_backtick: [\n\t\t\t[/\\$\\{/, { token: 'delimiter.bracket', next: '@bracketCounting' }],\n\t\t\t[/[^\\\\`$]+/, 'string'],\n\t\t\t[/@escapes/, 'string.escape'],\n\t\t\t[/\\\\./, 'string.escape.invalid'],\n\t\t\t[/`/, 'string', '@pop']\n\t\t],\n\n\t\tbracketCounting: [\n\t\t\t[/\\{/, 'delimiter.bracket', '@bracketCounting'],\n\t\t\t[/\\}/, 'delimiter.bracket', '@pop'],\n\t\t\t{ include: 'common' }\n\t\t],\n    },\n}\n\n// This config defines the editor's behavior.\nexport const configuration = {\n    brackets: [\n        [\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"],\n    ],\n}\n\ninterface IStyle {\n    name: string;\n    style: string;\n}\n\nfunction createDependencyProposals(range: any) {\n    // returning a static list of proposals, not even looking at the prefix (filtering is done by the Monaco editor),\n    // here you could do a server side lookup\n    return [\n        {\n            label: 'Layer class',\n            kind: monaco.languages.CompletionItemKind.Class,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            documentation: \"Layer style class\",\n            insertText: 'layer (${1:layer-key}) {\\n    ${2:@properties}\\n}',\n            range: range\n        },\n        {\n            label: 'Target styles',\n            kind: monaco.languages.CompletionItemKind.Class,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            documentation: \"Styles based on metadata of the overlay source layer\",\n            insertText: 'target {\\n    ${1:value}\\n}',\n            range: range\n        },\n        {\n            label: 'Source styles',\n            kind: monaco.languages.CompletionItemKind.Class,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            documentation: \"Styles based on metadata of the overlay target layer\",\n            insertText: 'source {\\n    ${1:value}\\n}',\n            range: range\n        },\n        {\n            label: 'Meta class',\n            kind: monaco.languages.CompletionItemKind.Class,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            documentation: \"Styles based on metadata of the layer\",\n            insertText: 'meta (${1:identifier}) {\\n    ${2:value}\\n}',\n            range: range\n        },\n        {\n            label: 'Color value',\n            kind: monaco.languages.CompletionItemKind.Value,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            documentation: \"Color style class\",\n            insertText: 'color: #${1:color};',\n            range: range\n        },\n        {\n            label: 'Visibility value',\n            kind: monaco.languages.CompletionItemKind.Value,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            documentation: \"Visibility style class\",\n            insertText: 'visible: ${1:boolean};',\n            range: range\n        },\n        {\n            label: 'Default value',\n            kind: monaco.languages.CompletionItemKind.Value,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            documentation: \"Default style class\",\n            insertText: 'default: ${1:value};',\n            range: range\n        },\n    ];\n}\n\nconst headingSpace = /^(\\s*)/;\nconst trailingSpace = /(\\s*)$/;\nconst nothing = /(\\s*|$)/;\nconst key = /\\(([^)]+)\\)/;\nconst proptag = /@[a-zA-Z]+/;\n\n\nconst matchTag = new RegExp(headingSpace.source + proptag.source + trailingSpace.source, 'mg');\n\n\nexport function StyleEditor() {\n    const { project_name, style_name } = useParams<{ project_name: string, style_name: string }>();\n    const history = useHistory();\n\n    const beforMountEditor = (monaco: Monaco) => {\n        if (!monaco.languages.getLanguages().some(({ id }) => id === 'estimatemd')) {\n            // Register a new language\n            monaco.languages.register({ id: 'estimatemd' })\n            // Register a tokens provider for the language\n            monaco.languages.setMonarchTokensProvider('estimatemd', languageDef as any)\n            // Set the editing configuration for the language\n            monaco.languages.setLanguageConfiguration('estimatemd', configuration as any)\n\n            monaco.languages.registerCompletionItemProvider('estimatemd', {\n                provideCompletionItems: function (model, position) {\n\n                    var textUntilPosition = model.getValueInRange({ startLineNumber: 0, startColumn: 0, endLineNumber: position.lineNumber, endColumn: position.column });\n                    var match = textUntilPosition.match(matchTag);\n\n                    if (!match) {\n                        return { suggestions: [] };\n                    }\n\n                    var word = model.getWordUntilPosition(position);\n\n                    var range = {\n                        startLineNumber: position.lineNumber,\n                        endLineNumber: position.lineNumber,\n                        startColumn: word.startColumn,\n                        endColumn: word.endColumn\n                    };\n\n                    return {\n                        suggestions: createDependencyProposals(range)\n                    };\n                }\n            });\n        }\n    }\n\n    \n    const [editor, setEditor] = useState<monaco.editor.IStandaloneCodeEditor|undefined>(undefined)\n    \n    useEffect(() => {\n        if(!editor)\n            return;\n        \n        iaxios.post(apiurl.GETSTYLE, { project: project_name, name: style_name }).then((response) => {\n            const data: IStyle = response.data;\n            editor.setValue(data.style);\n        }).catch((reject) => {\n            console.error(reject);\n        });\n\n    }, [editor]);\n\n    const [isParsedShown, setParsedIsShown] = useState(false);\n    const [parsed, setParsed] = useState(\"\");\n\n    const parse = () => {\n        if(!editor)\n            return;\n\n        const style = editor.getValue();\n        iaxios.post(apiurl.PARSESTYLE, { project: project_name, name: style_name, styles: style }).then((response) => {\n            if (response.data.status === \"error\")\n            {\n                setParsed(response.data.error);\n                setParsedIsShown(true);\n            } else {\n                setParsed(\"Style parsed successfuly\");\n                setParsedIsShown(true);\n            }\n        }).catch((reject) => {\n            console.error(reject);\n        });        \n    }\n\n\n    return (\n        <Pane>\n            <Header projects />\n            <Pane className=\"stylesHeader\">\n                <Heading className=\"wide\">Style {style_name}</Heading>\n                <Button marginRight={12} appearance=\"minimal\" iconBefore={ProjectsIcon} onClick={() => { history.push(url.PROJECTS + project_name) }}>\n                    Back to Project {project_name}\n                </Button>\n                <CornerDialog\n                    title=\"Style Parsed\"\n                    hasCancel={false}\n                    hasFooter={false}\n                    width=\"auto\"\n                    isShown={isParsedShown}\n                    onCloseComplete={() => setParsedIsShown(false)}\n                >\n                <Pre className=\"parsedMessage\">{parsed}</Pre>\n                </CornerDialog>\n                <Button marginRight={12} appearance=\"minimal\" iconBefore={CodeIcon} onClick={parse}>\n                    Parse\n                </Button>\n                <TextDialog\n                    submitUrl={apiurl.UPDATESTYLE}\n                    title={`Save style ${style_name}`}\n                    label={`Are you sure you want to save style ${style_name}? Your previously compiled styles will be overwriten.`}\n                    confirmLabel=\"Overwrite\"\n                    method=\"post\"\n                    submitBody={() => { \n                        if (!editor)\n                            throw new Error('Error occured while saving the style.'); \n\n                        return { project: project_name, name: style_name, styles: editor.getValue()} \n                    }}\n                    onSubmit={() => {\n                        console.log(`Style ${style_name} saved`);\n                    }}\n\n                    onError={(reject) => {return \"Style could not be saved\"}} \n                    tooltip=\"Saves the new configuration and overwrites previously saved styles.\"\n                >\n                    <Button marginRight={12} appearance=\"minimal\" iconBefore={UpdatedIcon}>\n                        Save\n                    </Button>\n                </TextDialog>\n                <TextDialog\n                    submitUrl={apiurl.UPDATESTYLE}\n                    title={`Apply style ${style_name}`}\n                    label={`Are you sure you want to recompile style ${style_name}?  Your previously compiled styles will be overwriten.`}\n                    confirmLabel=\"Compile\"\n                    method=\"post\"\n                    submitBody={() => { \n                        if (!editor)\n                            throw new Error('Error occured while saving the style.'); \n\n                        return { project: project_name, name: style_name, styles: editor.getValue()} \n                    }}\n                    onSubmit={() => {\n                        iaxios.post(apiurl.APPLYSTYLE, { project: project_name, name: style_name }).then((response) => {\n                            toast('Compilation job submitted');\n                        }).catch((reject) => {\n                            toast('Job could not be submitted');\n                        })\n                    }}\n                    onError={(reject) => {return \"Style could not be recompiled\"}} \n                    tooltip=\"Recompile styles after updating to view the changes in the visualization\"\n                >\n                    <Button appearance=\"minimal\" iconBefore={CubeIcon}>\n                        Save and Compile\n                    </Button>\n                </TextDialog>\n            </Pane>\n\n            <Pane className=\"styleView\">\n                <Editor\n                    beforeMount={beforMountEditor}\n                    onMount={(editor, monaco) => {\n                        setEditor(editor);\n                    }}\n                    className=\"editor\"\n                    height=\"100%\"\n                    defaultLanguage=\"estimatemd\"\n                />\n            </Pane>\n        </Pane>\n    )\n}\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\"\nimport './style.css'\nimport 'react-toastify/dist/ReactToastify.css';\nimport { url } from './url'\nimport { Home } from './screens/home'\nimport { Projects } from './screens/projects'\nimport { Login } from './screens/login'\nimport { UploadLayer } from './screens/upload'\nimport { Jobs } from './screens/jobs'\nimport { Mapping } from './screens/mapping'\nimport { View } from './screens/view'\nimport { ToastContainer, toast } from 'react-toastify';\nimport { StyleEditor } from './screens/style';\n\nexport function App() {\n  return (\n    <Router>\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        //draggable\n        //pauseOnHover\n      />\n      <Switch>\n        <Route exact path={[\"/\"]}>\n          <Redirect to=\"/app\" />\n        </Route>\n        <Route path={url.LOGIN}>\n          <Login />\n        </Route>\n        <Route path={url.MAPPINGTEMPLATE}>\n          <Mapping />\n        </Route>\n        <Route path={url.UPLOADLAYERTEMPLATE}>\n          <UploadLayer />\n        </Route>\n        <Route path={url.PROJECTSTEMPLATE}>\n          <Projects />\n        </Route>\n        <Route path={url.STYLETEMPLATE}>\n          <StyleEditor />\n        </Route>\n        <Route path={url.JOBS}>\n          <Jobs />\n        </Route>\n        <Route path={url.VIEWTEMPLATE}>\n          <View />\n        </Route>\n        <Route path={url.HOME}>\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { IconContext } from 'react-icons/lib'\nimport { App } from './app'\n\nReactDOM.render(\n  <React.StrictMode>\n    <IconContext.Provider value={{ className: 'react-icons' }}>\n      <App /> \n      </IconContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}