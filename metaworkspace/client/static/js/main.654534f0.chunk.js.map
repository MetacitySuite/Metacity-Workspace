{"version":3,"sources":["url.tsx","axios.tsx","screens/elements/header.tsx","screens/home.tsx","screens/elements/dialog.tsx","screens/elements/project/projectactions.tsx","screens/login.tsx","screens/elements/layers.tsx","screens/elements/styles.tsx","screens/elements/project.tsx","screens/elements/project/projectlist.tsx","screens/projects.tsx","screens/upload.tsx","screens/elements/jobs.tsx","screens/elements/log.tsx","screens/elements/logs.tsx","screens/jobs.tsx","screens/mapping.tsx","engine/renderer/csm/Frustum.js","engine/renderer/csm/CSMShader.js","engine/renderer/csm/CSM.js","engine/renderer/csm/CSMHelper.js","engine/renderer/picker.tsx","engine/renderer/shaders.tsx","engine/renderer/selector.tsx","engine/renderer/controls.tsx","engine/renderer/camera.tsx","engine/utils/status.tsx","engine/renderer/compas.tsx","engine/datamodel/maintimeline.tsx","engine/geometry/base.tsx","engine/renderer/renderer.tsx","engine/utils/decoder.ts","engine/renderer/style.tsx","engine/utils/workers.tsx","engine/geometry/polygons.tsx","engine/geometry/geometry.tsx","engine/geometry/lines.tsx","engine/geometry/points.tsx","engine/geometry/movement.tsx","engine/geometry/deserialize.tsx","engine/datamodel/tile.tsx","engine/datamodel/grid.tsx","engine/datamodel/timeline.tsx","engine/datamodel/interval.tsx","engine/datamodel/layer.tsx","engine/datamodel/project.tsx","engine/engine.tsx","screens/elements/viewmenu.tsx","screens/elements/metadialog.tsx","screens/view.tsx","screens/style.tsx","app.tsx","index.tsx"],"names":["url","apiurl","iaxios","axios","create","authToken","localStorage","getItem","defaults","headers","common","Authorization","EvergreenReactRouterLink","props","Link","is","ReactRouterLink","Header","Pane","className","to","home","projects","jobs","Home","useState","setProjects","history","useHistory","useEffect","get","then","response","data","Heading","map","project","index","Button","height","appearance","onClick","push","InputDialog","nameref","createRef","isShown","setShown","invalid","setInvalid","error","setError","submit","e","preventDefault","value","current","body","submitBody","method","submitUrl","onSubmit","catch","reject","onError","Dialog","title","onConfirm","onCloseComplete","confirmLabel","TextInputField","name","label","description","placeholder","ref","isInvalid","validationMessage","cloneElement","children","TextDialog","intent","Paragraph","InlineAlert","marginTop","tooltip","Tooltip","content","ProjectActions","marginRight","marginBottom","iconBefore","AddToArtifactIcon","style","StyleIcon","CubeIcon","MergeColumnsIcon","PresentationIcon","new","old","showProject","EditIcon","TrashIcon","authUser","callback","Login","status","setStatus","pass","length","event","formData","FormData","append","post","setItem","access_token","console","TextInput","width","type","Layers","layers","setLayers","loadLayers","changeDisabled","layer","disabled","Table","Head","TextHeaderCell","Body","Row","paddingY","TextCell","size","IconButton","icon","CrossIcon","TickIcon","EmptyState","background","orientation","LayersIcon","color","iconBgColor","anchorCta","LinkButton","Styles","styles","setStyles","getStyles","useCallback","Project","ProjectList","onSelect","AddIcon","Tablist","Tab","id","isSelected","currentProject","Projects","project_name","useParams","setCurrentProject","getProjects","lurl","justifyContent","alignItems","indexOf","ProjectsIcon","Dropzone","useDropzone","acceptedFiles","getRootProps","getInputProps","files","file","form","UploadLayer","progress","setProgress","uploading","setUploading","Spinner","padding","borderRadius","Text","toFixed","layer_name","undefined","forEach","dataset","onUploadProgress","progressEvent","loaded","total","toast","JobList","setJobs","selectedJob","setSelectedJob","detailIsShown","setDetailIsShown","update","loadJobs","setTimeout","clearTimeout","SideSheet","preventBodyScrolling","job_id","src","enableClipboard","theme","base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F","job","ApplicationIcon","CodeIcon","ConsoleIcon","Log","contents","setContents","loadLog","Pre","split","line","LogList","logs","setLogs","selectedLog","setSelectedLog","loadLogs","flexBasis","log","Jobs","Mapping","selectedSource","setSelectedSource","selectedTarget","setSelectedTarget","filter","x","overlay_name","source","target","overlay","success","Code","SelectMenu","options","selected","item","ArrowRightIcon","inverseProjectionMatrix","Matrix4","Frustum","this","vertices","near","Vector3","far","projectionMatrix","setFromProjectionMatrix","maxFar","isOrthographic","elements","copy","invert","set","v","applyMatrix4","absZ","Math","abs","z","min","multiplyScalar","breaks","i","cascade","j","lerpVectors","cameraMatrix","CSMShader","lights_fragment_begin","lights_pars_begin","ShaderChunk","_cameraToLightMatrix","_lightSpaceFrustum","_center","_bbox","Box3","_uniformArray","_logArray","CSM","camera","parent","cascades","mode","shadowMapSize","shadowBias","lightDirection","normalize","lightIntensity","lightNear","lightFar","lightMargin","customSplitsCallback","fade","mainFrustum","frustums","lights","shaders","Map","createLights","updateFrustums","injectInclude","light","DirectionalLight","castShadow","shadow","mapSize","bias","add","updateProjectionMatrix","shadowCam","frustum","nearVerts","farVerts","point1","point2","distanceTo","squaredBBWidth","max","linearDepth","pow","left","right","top","bottom","uniformSplit","logarithmicSplit","amount","lambda","MathUtils","lerp","practicalSplit","texelWidth","texelHeight","updateMatrixWorld","multiplyMatrices","matrixWorldInverse","matrixWorld","toSpace","makeEmpty","expandByPoint","getCenter","floor","y","position","material","defines","USE_CSM","CSM_CASCADES","CSM_FADE","breaksVec2","scope","onBeforeCompile","shader","getExtendedBreaks","uniforms","CSM_cascades","cameraNear","shadowFar","needsUpdate","Vector2","prev","getBreaks","initCascades","updateShadowBounds","updateUniforms","remove","clear","CSMHelper","csm","displayFrustum","displayPlanes","displayShadowBounds","indices","Uint16Array","positions","Float32Array","frustumGeometry","BufferGeometry","setIndex","BufferAttribute","setAttribute","frustumLines","LineSegments","LineBasicMaterial","cascadeLines","cascadePlanes","shadowLines","l","cascadeLine","cascadePlane","shadowLineGroup","visible","frustumLinePositions","geometry","getAttribute","quaternion","scale","pop","Box3Helper","planeMat","MeshBasicMaterial","transparent","opacity","depthWrite","side","DoubleSide","Mesh","PlaneGeometry","Group","shadowLine","box","addVectors","subVectors","attach","setXYZ","GPUPickHelper","renderer","pickingTexture","pixelBuffer","offsets","maxOffest","THREE","Uint8Array","has","Error","range","entries","oid","oid_array","Uint32Array","oid_view","DataView","buffer","getUint8","scene","pixelRatio","getPixelRatio","setViewOffset","getContext","drawingBufferWidth","drawingBufferHeight","setRenderTarget","render","clearViewOffset","readRenderTargetPixels","getUint32","Stage","MaterialLibrary","polygonMaterial","pointMaterial","lineMaterial","agentMaterial","pickingPolygonMaterial","pickingLineMaterial","pickingPointMaterial","pickingAgentMaterial","customUniforms","merge","phong","selectedID","vertexShader","fragmentShader","polygonSelectMaterial","setupMaterial","zoffset","thickness","pointSize","pointSelectMaterial","time","agentSelectMaterial","pickingMaterial","uniformsNeedUpdate","MapControls","domElement","up","screenSpacePanning","mouseButtons","LEFT","PAN","MIDDLE","ROTATE","RIGHT","DOLLY","touches","ONE","TWO","DOLLY_ROTATE","zoomSpeed","minDistance","minPolarAngle","maxPolarAngle","PI","OrbitControls","PerspectiveControls","canvas","window","innerWidth","innerHeight","controls","distance","enableRotate","maxDistance","aspect","OrthographicControls","object","CameraControls","perspective","orthographic","enable","resize","step","pos","clone","dir","sub","isOrthographicCamera","topView","swap","focusPoint","usingOrtho","vector","unproject","Action","manager","counter","StatusManager","actions","loadingGeometry","parsingGeometry","loadingStyles","applyingStyles","bar","document","getElementById","action","isRunning","toString","innerHTML","Compas","camDirection3","camDirection2","north","angle","acos","dot","MainTimeline","timelines","start","end","play","speed","Infinity","timeline","ready","delta","matlib","setTime","changed","OIDType","Selector","NOSELECT","cube","ends","region","depth","wirebox","dashSize","gapSize","screenToWorldOrthographic","initCube","transformCube","tmp","Renderer","actionCall","pickingScene","picker","helper","compas","stats1","stats2","updateShadows","selector","antialias","setupRenderer","setupLightsAndShadows","initOrthographic","useOrtho","hemisphere","margin","autoUpdateHelper","setPixelRatio","devicePixelRatio","shadowMap","enabled","autoUpdate","setClearColor","setSize","setAnimationLoop","frame","getRenderTarget","tick","pick","select","layerAndOidForId","setSelectedID","setPointSize","setLineWidth","Decoder","abort","iter","s","atob","substr","d","from","c","charCodeAt","k","byteLength","getFloat32","offset","Int32Array","getInt32","LayerStyle","base64touint8","buffer_source","buffer_target","pickable","oid_offset","oids","outputbuffer","ci","it","total_stop","BYTES_PER_ELEMENT","view","iteration","step_stop","stop","color_default","oid_length","DecoderQueryType","Model","mesh","pickingMesh","visibility","removeFrom","dispose","threeVertLength","colors","attributes","objectID","array","out","color_buffer","afterApplyStyle","bind","ModelProxy","color_buffer_source","color_buffer_target","self","onmessage","message","jobID","resID","datatype","base64tofloat32","base64toint32","postMessage","Decoders","workers","worker_busy","queue","jobIDs","resultMap","worker","code","blob","Blob","Worker","URL","createObjectURL","buildWorker","res","recieved","expected","delete","Array","apply","shift","_instance","PolygonalModel","tile","offsetForLayer","Instance","process","float32","int32","objectid","init","createGeometry","createMesh","createPickingMesh","receiveShadow","baseColors","computeVertexNormals","PolygonalProxyModel","offset_source","source_oid","capLeft","resolution","cos","sin","capRight","segment","concat","LineModel","frustumCulled","instanceCount","LineProxyModel","PointModel","symbol","symbolGeometry","PointProxyModel","Move","interval","getOffset","from_speed","to_speed","registeredModels","model","simplepolygon","simpleline","simplepoint","proxy","modelTypes","Object","keys","proxyTypes","deserializeModel","tags","includes","TileLoader","stopFlag","CancelToken","prefix","sourceFile","cancelToken","token","baseURL","host","cancel","Tile","bbox","brect","models","isVisible","loader","caching","show","hide","disposeCache","modeldata","applyStyleToModels","toSpiral","level","n","base","LoadStatus","Grid","tileSize","tiles","visible_radius","visibleSwap","zero2","tile_size","createTiles","Set","b","values","a","tiledata","idx","fp","visibleTile","divideScalar","nvisibleTile","equals","updateVisibility","tmpVisible","trad","ceil","sid","subScalar","eid","addScalar","Interval","moves","loading","acitve","delayedCall","start_time","deserializeMovement","move","finalizeInit","sort","Timeline","intervals","intervalLength","active","fillingBuffer","interval_length","idata","addTimeline","count","cl","countLoaded","updateLoaded","contains","swapActive","loadInterval","discard","le","load","wontload","nowIndex","unloadInterval","LayerBase","style_names","grid","focus","center","updateVisibleTiles","point","reloadVisibility","radius","lstyle","clearStyle","enableCache","disableCache","Layer","applyStyle","Overlay","usedStyle","updateVisibleRadius","setVisibleRadius","location","Menu","CameraType","EngineControls","keymap","showMetaCallback","closeMetaCallback","updateCompasCallback","updateTimeCallback","clickTime","selectingRegion","selectingRegionDown","click","button","selectCoord","key","updateHelper","zoomIn","zoomOut","useCache","enableShadows","disableShadows","MetacityEngine","addEventListener","moved","SideMenu","display","StyleMenu","engine","setSelected","LayerMenu","setVisibility","EyeOpenIcon","EyeOffIcon","SelectorMenu","TimelineMenu","setStart","setPlay","setEnd","setSpeed","timeRef","useRef","timing","getPlay","getSpeed","pad","padStart","flexDirection","flexGrow","PauseIcon","PlayIcon","hasFilter","onChange","t","parseFloat","isNaN","setupTime","SettingsMenu","setRadius","lineWidth","shadows","setShadows","cache","setCache","Promise","resolve","useShadows","defaultValue","parseInt","updateRadius","updatePointSize","updateLineWidth","Switch","checked","toggleShadows","toggleCache","setAngle","rotate","angleInRadians","angleInDegrees","CompassIcon","transform","ViewMenu","menuShown","setMenuShown","D2","setCamera","None","menu","setMenu","toggleMenu","kind","useOrthogonalProjection","disableCamera","startSelectingRegion","enableCamera","endSelectingRegion","SettingsIcon","Settings","TimeIcon","SelectIcon","swapCamera","D3","PlusIcon","MinusIcon","onClose","MetaDialog","meta","setMeta","metaIsShown","setMetaIsShown","showMeta","closeMeta","CornerDialog","hasCancel","hasFooter","onCancel","View","useLayoutEffect","updateSize","removeEventListener","useWindowSize","setEngine","reload","onMouseDown","mouseDown","clientX","clientY","timeStamp","onMouseUp","mouseUp","onMouseMove","mouseOver","onKeyDown","repeat","keyDown","onKeyUp","keyUp","tabIndex","languageDef","defaultToken","number","keywords","typeKeywords","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","regexpctl","regexpesc","tokenizer","root","include","cases","bracket","next","whitespace","regexp","regexrange","string_double","string_single","string_backtick","bracketCounting","configuration","brackets","createDependencyProposals","monaco","CompletionItemKind","Class","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","documentation","insertText","Value","matchTag","RegExp","StyleEditor","style_name","editor","setEditor","setValue","isParsedShown","setParsedIsShown","parsed","setParsed","getValue","UpdatedIcon","beforeMount","languages","getLanguages","some","register","setMonarchTokensProvider","setLanguageConfiguration","registerCompletionItemProvider","provideCompletionItems","getValueInRange","startLineNumber","startColumn","endLineNumber","lineNumber","endColumn","column","match","suggestions","word","getWordUntilPosition","onMount","defaultLanguage","App","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","exact","path","ReactDOM","StrictMode","Provider"],"mappings":"6NAGaA,G,cACH,QADGA,EAEF,aAFEA,EAGK,0BAHLA,EAIH,aAJGA,EAKS,+BALTA,EAMC,iBANDA,EAOH,YAPGA,EAQY,4BARZA,EASI,eATJA,EAUM,uCAVNA,EAWF,cAXEA,EAYQ,6BAZRA,EAaA,gBAGAC,EACI,gBADJA,EAEG,eAFHA,EAIM,sBAJNA,EAKM,eALNA,EAMK,qBANLA,EAOA,oBAPAA,EASE,cATFA,EAUC,aAVDA,EAWI,oBAXJA,EAYI,aAZJA,EAaI,oBAbJA,EAcK,qBAdLA,EAeE,iBAfFA,EAiBC,YAjBDA,EAkBC,YAlBDA,EAmBJ,WAnBIA,EAqBC,aArBDA,EAsBF,cAtBEA,EAwBG,cAxBHA,EAyBC,aAzBDA,EA0BI,oBA1BJA,EA2BI,oBA3BJA,EA4BI,aA5BJA,EA6BI,oBA7BJA,EA8BG,mBA9BHA,EA+BG,mBA/BHA,EAiCI,a,qDC1CjB,IAAMC,GAASC,KAAMC,OARR,KAUb,WACE,IAAIC,EAAYC,aAAaC,QAAQ,OAGjCL,GAAOM,SAASC,QAAQC,OAAOC,cAFjB,OAAdN,EAE+C,KAG/C,iBAAyDA,GAP/D,GAceH,U,2BCrBFU,GAA2B,SAACC,GAAD,OACpC,eAACC,GAAA,EAAD,cAAMC,GAAIC,KAAqBH,KAS5B,SAASI,GAAOJ,GAEnB,OACI,gBAACK,EAAA,EAAD,CAAMC,UAAU,SAAhB,UACQ,eAAC,GAAD,CAA0BC,GAAIpB,EAAUmB,UAAS,qBAAgBN,EAAMQ,KAAO,WAAa,IAA3F,kBACA,eAAC,GAAD,CAA0BD,GAAIpB,EAAcmB,UAAS,qBAAgBN,EAAMS,SAAW,WAAa,IAAnG,sBACA,eAAC,GAAD,CAA0BF,GAAIpB,EAAUmB,UAAS,qBAAgBN,EAAMU,KAAO,WAAa,IAA3F,4BCbT,SAASC,KACd,MAAgCC,mBAAmB,IAAnD,mBAAOH,EAAP,KAAiBI,EAAjB,KACMC,EAAUC,cAehB,OAPAC,qBAAU,WAER,OAPA3B,GAAO4B,IAAI7B,GAAoB8B,MAAK,SAACC,GACnCN,EAAYM,EAASC,SAMhB,WACLP,EAAY,OAEb,IAGD,qCACA,gBAACR,EAAA,EAAD,CAAMC,UAAU,OAAhB,UACE,eAACe,EAAA,EAAD,CAASf,UAAU,cAAnB,sBACA,eAACD,EAAA,EAAD,CAAMC,UAAU,kBAAhB,SACGG,EAASa,KAAI,SAACC,EAASC,GAAV,OACZ,eAACC,EAAA,EAAD,CAAQC,OAAQ,GAAgBC,WAAW,UAAUC,QAAS,kBAAMd,EAAQe,KAAK1C,EAAWoC,IAA5F,SACGA,GADsBC,QAK7B,eAAC,GAAD,CAA0BjB,GAAIpB,EAAcmB,UAAU,UAAtD,iC,gJCdC,SAASwB,GAAY9B,GACxB,IAAM+B,EAAUC,sBAChB,EAA4BpB,oBAAS,GAArC,mBAAOqB,EAAP,KAAgBC,EAAhB,KACA,EAA8BtB,oBAAS,GAAvC,mBAAOuB,EAAP,KAAgBC,EAAhB,KACA,EAA0BxB,mBAAS,IAAnC,mBAAOyB,EAAP,KAAcC,EAAd,KAEMC,EAAS,SAACC,GAAmB,IAAD,EAC1BA,GACAA,EAAEC,iBAEN,IAAMC,EAAK,UAAGX,EAAQY,eAAX,aAAG,EAAiBD,MAC/B,GAAKA,EAAL,CAEA,IAAME,EAAO5C,EAAM6C,WAAWH,GAE9BrD,GAAOW,EAAM8C,QAAQ9C,EAAM+C,UAAWH,GAAM1B,MAAK,WACzCa,EAAQY,UACRZ,EAAQY,QAAQD,MAAQ,IAC5BR,GAAS,GACTlC,EAAMgD,SAASN,MAChBO,OAAM,SAACC,GACN,IAAMb,EAAQrC,EAAMmD,QAAQD,EAAQR,GACpCN,GAAW,GACXE,EAASD,QASjB,OALArB,qBAAU,WACNsB,EAAS,IACTF,GAAW,KACZ,CAACH,IAGA,uCACA,eAACmB,GAAA,EAAD,CACInB,QAASA,EACToB,MAAOrD,EAAMqD,MACbC,UAAW,kBAAMf,KACjBgB,gBAAiB,kBAAMrB,GAAS,IAChCsB,aAAcxD,EAAMwD,aALxB,SAMI,uBAAMlD,UAAU,aAAa0C,SAAUT,EAAvC,SACMJ,EACE,eAACsB,GAAA,EAAD,CAAgBC,KAAK,OACjBC,MAAO3D,EAAM2D,MACbC,YAAa5D,EAAM4D,YACnBC,YAAa7D,EAAM6D,YACnBC,IAAK/B,EACLgC,UAAW5B,EACX6B,kBAAmB3B,IAGvB,eAACoB,GAAA,EAAD,CAAgBC,KAAK,OACjBC,MAAO3D,EAAM2D,MACbC,YAAa5D,EAAM4D,YACnBC,YAAa7D,EAAM6D,YACnBC,IAAK/B,QAKnBkC,uBAAajE,EAAMkE,SAAU,CAAEtC,QAAS,kBAAMM,GAAS,SAuB1D,SAASiC,GAAWnE,GACvB,MAA4BY,oBAAS,GAArC,mBAAOqB,EAAP,KAAgBC,EAAhB,KACA,EAA8BtB,oBAAS,GAAvC,mBAAOuB,EAAP,KAAgBC,EAAhB,KACA,EAA0BxB,mBAAS,IAAnC,mBAAOyB,EAAP,KAAcC,EAAd,KAyBA,OALAtB,qBAAU,WACNsB,EAAS,IACTF,GAAW,KACZ,CAACH,IAGA,uCACA,gBAACmB,GAAA,EAAD,CACInB,QAASA,EACTmC,OAAQpE,EAAMoE,OAASpE,EAAMoE,OAAU,OACvCf,MAAOrD,EAAMqD,MACbC,UA7BO,WACX,IACI,IAAMV,EAAO5C,EAAM6C,aACnBxD,GAAOW,EAAM8C,QAAQ9C,EAAM+C,UAAWH,GAAM1B,MAAK,WAC7CgB,GAAS,GACTlC,EAAMgD,cACPC,OAAM,SAACC,GACN,IAAMb,EAAQrC,EAAMmD,QAAQD,GAC5Bd,GAAW,GACXE,EAASD,MAEf,MAAMA,GACJD,GAAW,GACXE,EAASD,KAiBTkB,gBAAiB,kBAAMrB,GAAS,IAChCsB,aAAcxD,EAAMwD,aANxB,UAOI,eAACa,GAAA,EAAD,UAAYrE,EAAM2D,QAChBxB,EAAU,eAACmC,GAAA,EAAD,CAAaF,OAAO,SAASG,UAAW,GAAxC,SAA6ClC,IAAuB,MAEnFrC,EAAMwE,QACH,eAACC,GAAA,EAAD,CAASC,QAAS1E,EAAMwE,QAAxB,SACMP,uBAAajE,EAAMkE,SAAU,CAAEtC,QAAS,WAAQM,GAAS,QAE/D+B,uBAAajE,EAAMkE,SAAU,CAAEtC,QAAS,WAAQM,GAAS,SCzI9D,SAASyC,GAAe3E,GAC3B,IAAMc,EAAUC,cAMhB,OACI,gBAACV,EAAA,EAAD,CAAMC,UAAU,UAAhB,UAEI,eAACmB,EAAA,EAAD,CAAQmD,YAAa,GAAIC,aAAc,GAAIlD,WAAW,UAAUmD,WAAYC,KAAmBnD,QAAS,kBAAMd,EAAQe,KAAK1C,EAAkBa,EAAM0D,OAAnJ,uBAIA,eAAC5B,GAAD,CACIiB,UAAW3D,EACXiE,MAAM,YACNM,MAAK,mCACLH,aAAa,SACbV,OAAO,OACPD,WAAY,SAACa,GAAW,MAAO,CAAEnC,QAASvB,EAAM0D,KAAMA,KAAMA,IAC5DV,SAAU,SAACgC,GAAYlE,EAAQe,KAAK1C,EAAYa,EAAM0D,KAAO,IAAMsB,IACnE7B,QAAS,SAACD,EAAQ8B,GAAW,MAAO,wBARxC,SAUI,eAACvD,EAAA,EAAD,CAAQmD,YAAa,GAAIC,aAAc,GAAIlD,WAAW,UAAUmD,WAAYG,KAA5E,yBAKJ,eAACd,GAAD,CACIpB,UAAW3D,EACXiE,MAAK,4BAAuBrD,EAAM0D,MAClCC,MAAK,qDAAgD3D,EAAM0D,KAAtD,KACLF,aAAa,YACbV,OAAO,OACPD,WAAY,WAAQ,MAAO,CAAEa,KAAM1D,EAAM0D,OACzCV,SAjCM,WACdlC,EAAQe,KAAK1C,IAiCLgE,QAAS,SAACD,GAAY,MAAO,mCAC7BsB,QAAQ,6DATZ,SAWI,eAAC/C,EAAA,EAAD,CAAQmD,YAAa,GAAIC,aAAc,GAAIlD,WAAW,UAAUmD,WAAYI,KAA5E,0BAKJ,eAACzD,EAAA,EAAD,CAASoD,aAAc,GAAIlD,WAAW,UAAUmD,WAAYK,KAAkBvD,QAAS,WAAQd,EAAQe,KAAK1C,EAAca,EAAM0D,OAAhI,wBAGA,eAACjC,EAAA,EAAD,CAAQmD,YAAa,GAAIC,aAAc,GAAIlD,WAAW,UAAUmD,WAAYM,KAAkBxD,QAAS,WAAQd,EAAQe,KAAK1C,EAAWa,EAAM0D,OAA7I,kBAGA,eAAC5B,GAAD,CACIiB,UAAW3D,EACXiE,MAAK,yBAAoBrD,EAAM0D,MAC/BC,MAAK,wCAAmC3D,EAAM0D,MAC9CF,aAAa,SACbV,OAAO,OACPD,WAAY,SAACa,GAAW,MAAO,CAAC2B,IAAK3B,EAAM4B,IAAKtF,EAAM0D,OACtDV,SAAUhD,EAAMuF,YAChBpC,QAAS,SAACD,EAAQQ,GAAU,MAAO,0BARvC,SAUI,eAACjC,EAAA,EAAD,CAAQmD,YAAa,GAAIC,aAAc,GAAIlD,WAAW,UAAUmD,WAAYU,KAA5E,sBAIJ,eAACrB,GAAD,CACIpB,UAAW3D,EACXiE,MAAK,yBAAoBrD,EAAM0D,MAC/BC,MAAK,+CAA0C3D,EAAM0D,KAAhD,KACLF,aAAa,SACbV,OAAO,SACPsB,OAAO,SACPvB,WAAY,WAAQ,MAAO,CAAEzB,KAAM,CAAEsC,KAAM1D,EAAM0D,QACjDV,SAAU,WAAQhD,EAAMuF,eACxBpC,QAAS,SAACD,GAAY,MAAO,gCATjC,SAWI,eAACzB,EAAA,EAAD,CAASoD,aAAc,GAAIlD,WAAW,UAAUmD,WAAYW,KAAWrB,OAAO,SAA9E,iC,gECjFT,SAASsB,GAAS5E,EAAc6E,GACnCtG,GAAO4B,IAAI7B,GAAiB8B,MAAK,SAACC,GAC9BwE,OACD1C,OAAM,WACLnC,EAAQe,KAAK1C,MAKd,SAASyG,KACd,MAA4BhF,mBAAiB,IAA7C,mBAAOiF,EAAP,KAAeC,EAAf,KACIhF,EAAUC,cAER2C,EAAO1B,sBACP+D,EAAO/D,sBAgCb,OATAhB,qBAAU,WACR3B,GAAO4B,IAAI7B,GAAmB8B,MAAK,WACjCJ,EAAQe,KAAK1C,MACZ8D,OAAM,SAACC,SAGT,CAACpC,IAIF,eAACT,EAAA,EAAD,CAAMC,UAAU,aAAhB,SACI,gBAACD,EAAA,EAAD,WACE,eAACgB,EAAA,EAAD,CAASnB,GAAG,KAAZ,mBACE2F,EAAOG,OAAS,EAAG,6BAAIH,IAAc,GACvC,wBAAM7C,SAnCA,SAACiD,GAAsB,IAAD,IAClCA,EAAMxD,iBAEN,IAAIyD,EAAW,IAAIC,SACnBD,EAASE,OAAO,YAAY,UAAA1C,EAAKf,eAAL,eAAcD,QAAS,IACnDwD,EAASE,OAAO,YAAY,UAAAL,EAAKpD,eAAL,eAAcD,QAAS,IAEnDrD,GAAOgH,KAAKjH,EAAc8G,EAAU,CAClCtG,QAAS,CACP,eAAgB,yBAEjBsB,MAAK,SAACC,GACP1B,aAAa6G,QAAQ,MAAOnF,EAASC,KAAKmF,cAC1ClH,GAAOM,SAASC,QAAQC,OAAxB,+BAA4DsB,EAASC,KAAKmF,cAC1EzF,EAAQe,KAAK1C,MACZ8D,OAAM,SAACC,GACRsD,QAAQnE,MAAMa,GACd4C,EAAU,8EAkBN,UACE,eAACW,GAAA,EAAD,CAAWC,MAAM,OAAO7C,YAAY,WAAWC,IAAKJ,EAAMiD,KAAK,SAC/D,eAACF,GAAA,EAAD,CAAWC,MAAM,OAAO7C,YAAY,WAAWC,IAAKiC,EAAMY,KAAK,aAC/D,eAACF,GAAA,EAAD,CAAWE,KAAK,mBCxCrB,SAASC,GAAO5G,GACnB,MAA4BY,mBAAmB,IAA/C,mBAAOiG,EAAP,KAAeC,EAAf,KACMhG,EAAUC,cAEVgG,EAAa,WACf1H,GAAOgH,KAAKjH,EAAkB,CAAEsE,KAAM1D,EAAM0D,OAAQxC,MAAK,SAACC,GACtD2F,EAAU3F,EAASC,UAI3BJ,qBAAU,WAQN,OANA0E,GAAS5E,GAAS,WACdzB,GAAOgH,KAAKjH,EAAkB,CAAEsE,KAAM1D,EAAM0D,OAAQxC,MAAK,SAACC,GACtD2F,EAAU3F,EAASC,YAIpB,WACH0F,EAAU,OAEf,CAAC9G,EAAM0D,KAAM5C,IAGhB,IAAMkG,EAAiB,SAACC,GAChBA,EAAMC,SACN7H,GAAOgH,KAAKjH,EAAoB,CAAEmC,QAASvB,EAAM0D,KAAMA,KAAMuD,EAAMvD,OAAQxC,MAAK,WAC5E6F,OAGJ1H,GAAOgH,KAAKjH,EAAqB,CAAEmC,QAASvB,EAAM0D,KAAMA,KAAMuD,EAAMvD,OAAQxC,MAAK,WAC7E6F,QAMZ,OACI,gBAAC1G,EAAA,EAAD,CAAMC,UAAU,UAAhB,UACI,eAACD,EAAA,EAAD,CAAMC,UAAU,gBAAhB,SACI,eAACe,EAAA,EAAD,CAASf,UAAU,OAAOJ,GAAG,KAA7B,uBAGJ,gBAACiH,GAAA,EAAD,WACI,gBAACA,GAAA,EAAMC,KAAP,CAAY9G,UAAU,MAAtB,UACI,eAAC6G,GAAA,EAAME,eAAP,CAAsB/G,UAAU,OAAhC,mBACA,eAAC6G,GAAA,EAAME,eAAP,CAAsB/G,UAAU,OAAhC,+BACA,eAAC6G,GAAA,EAAME,eAAP,CAAsB/G,UAAU,OAAhC,kBACA,eAAC6G,GAAA,EAAME,eAAP,CAAsB/G,UAAU,SAAhC,oBACA,eAAC6G,GAAA,EAAME,eAAP,CAAsB/G,UAAU,SAAhC,oBACA,eAAC6G,GAAA,EAAME,eAAP,CAAsB/G,UAAU,SAAhC,uBAEJ,eAAC6G,GAAA,EAAMG,KAAP,UACKT,EAAOb,OAAS,EAAIa,EAAOvF,KAAI,SAAC2F,GAAD,OAC5B,gBAACE,GAAA,EAAMI,IAAP,CAA4BC,SAAU,GAAI9F,OAAO,OAAOpB,UAAU,MAAlE,UACI,eAAC6G,GAAA,EAAMM,SAAP,CAAgBnH,UAAU,OAA1B,SAAkC2G,EAAMvD,OACxC,eAACyD,GAAA,EAAMM,SAAP,CAAgBnH,UAAU,OAA1B,SAAwD,kBAAf2G,EAAMS,KAAmBT,EAAMS,KAAtC,UAAgDT,EAAMS,KAAK,GAA3D,cAAmET,EAAMS,KAAK,MAChH,eAACP,GAAA,EAAMM,SAAP,CAAgBnH,UAAU,OAA1B,SAAkC2G,EAAMN,OACxC,eAACQ,GAAA,EAAMM,SAAP,CAAgBnH,UAAU,SAA1B,SACQ2G,EAAMC,SACF,eAACS,GAAA,EAAD,CAAYC,KAAMC,KAAWlG,WAAW,UAAUC,QAAS,kBAAMoF,EAAeC,MAEhF,eAACU,GAAA,EAAD,CAAYC,KAAME,KAAU1D,OAAO,UAAUzC,WAAW,UAAUC,QAAS,kBAAMoF,EAAeC,QAG5G,eAACE,GAAA,EAAMM,SAAP,CAAgBnH,UAAU,SAA1B,SACI,eAACwB,GAAD,CACIiB,UAAW3D,EACXiE,MAAK,uBAAkB4D,EAAMvD,MAC7BC,MAAK,sCAAiCsD,EAAMvD,MAC5CF,aAAa,SACbV,OAAO,OACPD,WAAY,SAACa,GAAW,MAAO,CAAEnC,QAASvB,EAAM0D,KAAM2B,IAAK3B,EAAM4B,IAAK2B,EAAMvD,OAC5EV,SAAU+D,EACV5D,QAAS,SAACD,EAAQQ,GAAW,MAAO,0BARxC,SAUI,eAACiE,GAAA,EAAD,CAAYC,KAAMpC,KAAU7D,WAAW,gBAG/C,eAACwF,GAAA,EAAMM,SAAP,CAAgBnH,UAAU,SAA1B,SACI,eAAC6D,GAAD,CACIpB,UAAW3D,EACXiE,MAAK,uBAAkB4D,EAAMvD,MAC7BC,MAAK,6CAAwCsD,EAAMvD,KAA9C,KACLF,aAAa,SACbV,OAAO,SACPD,WAAY,WAAQ,MAAO,CAAEzB,KAAM,CAAEG,QAASvB,EAAM0D,KAAMA,KAAMuD,EAAMvD,QACtEV,SAAU+D,EACV5D,QAAS,SAACD,GAAa,MAAO,8BARlC,SAUI,eAACyE,GAAA,EAAD,CAAYC,KAAMnC,KAAWrB,OAAO,SAASzC,WAAW,kBApCpDsF,EAAMvD,SAyCtB,eAACqE,GAAA,EAAD,CACIC,WAAW,QACX3E,MAAM,4BACN4E,YAAY,aACZL,KAAM,eAACM,GAAA,EAAD,CAAYC,MAAM,YACxBC,YAAY,UACZxE,YAAY,gEACZyE,UACI,eAACN,GAAA,EAAWO,WAAZ,CAAuBpI,GAAIH,GAA0BQ,GAAIpB,EAAkBa,EAAM0D,KAAjF,uCChHzB,SAAS6E,GAAOvI,GACnB,MAA4BY,mBAAgB,IAA5C,mBAAO4H,EAAP,KAAeC,EAAf,KACM3H,EAAUC,cAEV2H,EAAYC,uBAAY,WAC1BtJ,GAAOgH,KAAKjH,EAAmB,CAAEsE,KAAM1D,EAAMuB,UAAWL,MAAK,SAACC,GAC1DsH,EAAUtH,EAASC,WAExB,CAACpB,EAAMuB,UAQV,OANAP,qBAAU,WACN0E,GAAS5E,GAAS,WACd4H,SAEL,CAAC1I,EAAMuB,QAAST,EAAS4H,IAGxB,gBAACrI,EAAA,EAAD,CAAMC,UAAU,SAAhB,UACI,eAACD,EAAA,EAAD,CAAMC,UAAU,gBAAhB,SACI,eAACe,EAAA,EAAD,CAASf,UAAU,OAAOJ,GAAG,KAA7B,sBAEJ,eAACG,EAAA,EAAD,CAAMC,UAAU,YAAhB,SACKkI,EAAOxC,OAAS,EAAIwC,EAAOlH,KAAI,SAAC0D,GAAD,OAC5B,gBAAC3E,EAAA,EAAD,CAAkBC,UAAU,YAA5B,UACI,eAACD,EAAA,EAAD,CAAMC,UAAU,aAAasB,QAAS,WAAQd,EAAQe,KAAK1C,EAAYa,EAAMuB,QAAU,IAAMyD,IAA7F,SACKA,IAEL,gBAAC3E,EAAA,EAAD,WAEA,eAACyB,GAAD,CACIiB,UAAW3D,EACXiE,MAAK,uBAAkB2B,GACvBrB,MAAK,sCAAiCqB,GACtCxB,aAAa,SACbV,OAAO,OACPD,WAAY,SAACa,GAAW,MAAO,CAACnC,QAASvB,EAAMuB,QAAS8D,IAAK3B,EAAM4B,IAAKN,IACxEhC,SAAU,WAAQ0F,KAClBvF,QAAS,SAACD,EAAQQ,GAAU,MAAO,0BARvC,SAWI,eAACjC,EAAA,EAAD,CAAQmD,YAAa,GAAIjD,WAAW,UAAUmD,WAAYU,KAA1D,sBAOJ,eAACrB,GAAD,CACIpB,UAAW3D,EACXiE,MAAK,uBAAkB2B,GACvBrB,MAAK,6CAAwCqB,EAAxC,KACLxB,aAAa,SACbV,OAAO,SACPsB,OAAO,SACPvB,WAAY,WAAQ,MAAO,CAAEzB,KAAM,CAAEG,QAASvB,EAAMuB,QAASmC,KAAMsB,KACnEhC,SAAU,WAAQ0F,KAClBvF,QAAS,SAACD,GAAY,MAAO,8BATjC,SAWI,eAACzB,EAAA,EAAD,CAAQE,WAAW,UAAUyC,OAAO,SAASU,WAAYW,KAAzD,2BAnCGT,MA2Cf,eAAC+C,GAAA,EAAD,CACIC,WAAW,QACX3E,MAAM,4BACN4E,YAAY,WACZL,KAAM,eAAC3C,GAAA,EAAD,CAAWkD,MAAM,YACvBC,YAAY,UACZxE,YAAY,mHCzEzB,SAASgF,GAAQ5I,GAEpB,OACI,gBAACK,EAAA,EAAD,CAAMC,UAAU,UAAhB,UACI,eAACD,EAAA,EAAD,UACI,eAACA,EAAA,EAAD,CAAMC,UAAU,qBAAhB,SACI,gBAACe,EAAA,EAAD,CAASf,UAAU,OAAnB,qBAAmCN,EAAM0D,YAGjD,eAACiB,GAAD,CAAgBjB,KAAM1D,EAAM0D,KAAM6B,YAAavF,EAAMuF,cACrD,eAACqB,GAAD,CAAQlD,KAAM1D,EAAM0D,OACpB,eAAC6E,GAAD,CAAQhH,QAASvB,EAAM0D,U,kCCZ5B,SAASmF,GAAY7I,GAE1B,OACE,gBAACK,EAAA,EAAD,CAAMC,UAAU,OAAhB,UACI,eAACe,EAAA,EAAD,CAASf,UAAU,oBAAnB,sBAEA,eAACwB,GAAD,CACQiB,UAAW3D,EACXiE,MAAM,cACNM,MAAK,qCACLH,aAAa,SACbV,OAAO,OACPD,WAAY,SAACa,GAAW,MAAO,CAAEA,KAAMA,IACvCV,SAAU,SAACzB,GAAcvB,EAAM8I,SAASvH,IACxC4B,QAAS,SAACD,EAAQ8B,GAAW,MAAO,0BAR5C,SAUM,gBAAC3E,EAAA,EAAD,CAAMC,UAAU,qBAAhB,UAAqC,eAACyI,GAAA,EAAD,IAArC,mBAGN,eAACC,GAAA,EAAD,CAAS1I,UAAU,mBAAnB,SACCN,EAAMS,SAASa,KAAI,SAACC,GAAD,OAChB,eAAC0H,GAAA,EAAD,CAEAC,GAAE,cAAS3H,GACXuH,SAAU,kBAAM9I,EAAM8I,SAASvH,IAC/B4H,WAAY5H,IAAYvB,EAAMoJ,eAJ9B,SAKC7H,GAJIA,WCrBV,SAAS8H,KACZ,IAAQC,EAAiBC,cAAjBD,aACR,EAA4C1I,mBAA2B0I,GAAvE,mBAAOF,EAAP,KAAuBI,EAAvB,KACA,EAAgC5I,mBAAmB,IAAnD,mBAAOH,EAAP,KAAiBI,EAAjB,KACMC,EAAUC,cAEV0I,EAAc,WAChBpK,GAAO4B,IAAI7B,GAAoB8B,MAAK,SAACC,GACjCN,EAAYM,EAASC,UAI7BJ,qBAAU,WAIN,OAHA0E,GAAS5E,GAAS,WACd2I,OAEG,WACH5I,EAAY,OAEjB,CAACC,IAEJ,IAAMyE,EAAc,SAAC7B,GACjB+F,IACAD,EAAkB9F,GAElB,IAAIgG,EAAOvK,EACPuE,IACAgG,GAAQhG,GACZ5C,EAAQe,KAAK6H,IAGjB,OACI,gBAACrJ,EAAA,EAAD,WACI,eAACD,GAAD,CAAQK,UAAQ,IAChB,gBAACJ,EAAA,EAAD,CAAMC,UAAU,WAAhB,UACI,eAACuI,GAAD,CACIO,eAAgBA,EAChBN,SAAUvD,EACV9E,SAAUA,IAEd,eAACJ,EAAA,EAAD,CAAMC,UAAS,kBAAa8I,EAAiB,GAAK,SAAWO,eAAe,SAASC,WAAW,SAAhG,SACKR,EACI3I,EAASoJ,QAAQT,IAAmB,EACjC,eAAC,GAAD,CACA1F,KAAM0F,EACN7D,YAAaA,IAEb,eAACwC,GAAA,EAAD,CACAC,WAAW,QACX3E,MAAK,kBAAa+F,EAAb,cACLnB,YAAY,WACZL,KAAM,eAACkC,GAAA,EAAD,CAAc3B,MAAM,YAC1BC,YAAY,YAGhB,eAACL,GAAA,EAAD,CACIC,WAAW,QACX3E,MAAM,sBACN4E,YAAY,WACZL,KAAM,eAACkC,GAAA,EAAD,CAAc3B,MAAM,YAC1BC,YAAY,oB,mDCxDxC,SAAS2B,GAAS/J,GACd,MAAuDgK,eAA/CC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,aAAcC,EAArC,EAAqCA,cAC/BzG,EAAO1B,sBAEPoI,EAAQH,EAAc3I,KAAI,SAAA+I,GAAI,OAChC,gCACI,uBAAM/J,UAAU,WAAhB,SAA4B+J,EAAK3G,OAAY,wBAAMpD,UAAU,WAAhB,UAA4B+J,EAAK3C,KAAjC,cADxC2C,EAAK3G,SAUlB,OACI,gBAACrD,EAAA,EAAD,CAAMC,UAAU,oBAAhB,UACI,wBAAM0C,SAPC,SAACiD,GACZA,EAAMxD,iBACNzC,EAAMuC,OAAOmB,EAAKf,QAASD,MAAOuH,IAKNf,GAAG,kBAA3B,UACI,eAACzC,GAAA,EAAD,CAAW5C,YAAY,aAAaC,IAAKJ,EAAMpD,UAAU,cACzD,mDAAS4J,EAAa,CAAE5J,UAAW,cAAnC,cACI,uCAAW6J,MACX,yEACA,qBAAI7J,UAAU,WAAd,SAA0B8J,WAGlC,eAAC3I,EAAA,EAAD,CAAQE,WAAW,UAAUgF,KAAK,SAAS2D,KAAK,kBAAhD,uBASL,SAASC,KACZ,IAAQjB,EAAiBC,cAAjBD,aACFxI,EAAUC,cAEhB,EAAgCH,mBAAiB,GAAjD,mBAAO4J,EAAP,KAAiBC,EAAjB,KACA,EAAkC7J,oBAAkB,GAApD,mBAAO8J,EAAP,KAAkBC,EAAlB,KAEA3J,qBAAU,WACN0E,GAAS5E,GAAS,kBAuCtB,OACI,gBAACT,EAAA,EAAD,WACI,eAACD,GAAD,CAAQK,UAAQ,IAChB,gBAACJ,EAAA,EAAD,CAAMC,UAAU,SAAhB,UACMoK,EACE,eAACE,GAAA,EAAD,IAEA,eAAC,KAAD,CAAMhD,KAAMM,KAAYR,KAAM,GAAIS,MAAM,UAAUH,WAAW,UAAU1H,UAAU,aAAauK,QAAS,GAAIC,aAAc,KAE7H,gBAACzJ,EAAA,EAAD,CAASf,UAAU,cAAnB,wCAA6DgJ,KAC3DoB,EACE,eAACrK,EAAA,EAAD,CAAMC,UAAU,WAAhB,SACI,gBAACyK,GAAA,EAAD,CAAMzK,UAAU,QAAhB,UAAyBkK,EAASQ,QAAQ,GAA1C,SAGJ,eAACjB,GAAD,CAAUxH,OAnDX,SAAC0I,EAAoBb,GAChC,IAAIM,EAGJ,QAAmBQ,IAAfD,GAAkD,IAAtBA,EAAWjF,OAM3C,QAAckF,IAAVd,GAAwC,IAAjBA,EAAMpE,OAAjC,CAMA2E,GAAa,GAEb,IAAIzE,EAAW,IAAIC,SACnBD,EAASE,OAAO,UAAWkD,GAC3BpD,EAASE,OAAO,QAAS6E,GACzBb,EAAMe,SAAQ,SAAAC,GACVlF,EAASE,OAAO,QAASgF,MAG7B/L,GAAOgH,KAAKjH,EAAiB8G,EAAU,CACnCtG,QAAS,CACL,eAAgB,uBAEpByL,iBAAkB,SAAAC,GAAa,OAAIb,EAAYa,EAAcC,OAASD,EAAcE,MAAQ,QAC7FtK,MAAK,SAACC,GACLL,EAAQe,KAAK1C,WAnBbsM,aAAM,0BANNA,aAAM,8B,iECpDX,SAASC,KACZ,MAAwB9K,mBAAiB,IAAzC,mBAAOF,EAAP,KAAaiL,EAAb,KACA,EAAsC/K,wBAA2BsK,GAAjE,mBAAOU,EAAP,KAAoBC,EAApB,KACA,EAA0CjL,oBAAS,GAAnD,mBAAOkL,EAAP,KAAsBC,EAAtB,KAqBA,OAlBA/K,qBAAU,WACN,IAAIgL,EAWJ,OATiB,SAAXC,IACF5M,GAAO4B,IAAI7B,GAAiB8B,MAAK,SAACC,GAC9BwK,EAAQxK,EAASC,MACjB4K,EAASE,WAAWD,EAAU,QAItCA,GAEO,WACHE,aAAaH,GACbL,EAAQ,OAEb,IAGC,gBAACtL,EAAA,EAAD,WACI,eAAC+L,GAAA,EAAD,CACInK,QAAS6J,EACTvI,gBAAiB,kBAAMwI,GAAiB,IACxCM,sBAAoB,EAHxB,SAII,gBAAChM,EAAA,EAAD,CAAMC,UAAU,UAAhB,UACI,gBAACe,EAAA,EAAD,CAASf,UAAU,cAAnB,wBAAsCsL,QAAtC,IAAsCA,OAAtC,EAAsCA,EAAaU,UAEnD,eAACjM,EAAA,EAAD,CAAMC,UAAU,OAAhB,SACI,eAAC,KAAD,CACIiM,IAAKX,EACLY,iBAAiB,EACjBC,MAAO,CACHC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,oBAM5B,gBAACtG,GAAA,EAAD,WACI,gBAACA,GAAA,EAAMC,KAAP,CAAY9G,UAAU,MAAtB,UACI,eAAC6G,GAAA,EAAME,eAAP,CAAsB/G,UAAU,OAAhC,sBACA,eAAC6G,GAAA,EAAME,eAAP,CAAsB/G,UAAU,OAAhC,oBACA,eAAC6G,GAAA,EAAME,eAAP,CAAsB/G,UAAU,OAAhC,qBACA,eAAC6G,GAAA,EAAME,eAAP,CAAsB/G,UAAU,SAAhC,iBACA,eAAC6G,GAAA,EAAME,eAAP,CAAsB/G,UAAU,SAAhC,oBAEJ,eAAC6G,GAAA,EAAMG,KAAP,UACK5G,EAAKsF,OAAS,EAAItF,EAAKY,KAAI,SAACoM,GAAD,OACxB,gBAACvG,GAAA,EAAMI,IAAP,CAA4BC,SAAU,GAAI9F,OAAO,OAAOpB,UAAU,MAAlE,UACI,eAAC6G,GAAA,EAAMM,SAAP,CAAgBnH,UAAU,OAA1B,SAAkCoN,EAAI/G,OACtC,eAACQ,GAAA,EAAMM,SAAP,CAAgBnH,UAAU,OAA1B,SAAkCoN,EAAI7H,SACtC,eAACsB,GAAA,EAAMM,SAAP,CAAgBnH,UAAU,OAA1B,SAAkCoN,EAAInM,QAAUmM,EAAInM,QAAU,OAC9D,eAAC4F,GAAA,EAAMM,SAAP,CAAgBnH,UAAU,SAA1B,SACI,eAACqH,GAAA,EAAD,CAAYC,KAAM+F,KAAiB/L,QAAS,aAAUsF,UAAQ,MAElE,eAACC,GAAA,EAAMM,SAAP,CAAgBnH,UAAU,SAA1B,SACI,eAACqH,GAAA,EAAD,CAAYC,KAAMgG,KAAUhM,QAAS,WAAQiK,EAAe6B,GAAM3B,GAAiB,UAR3E2B,EAAIpB,WAYpB,eAACvE,GAAA,EAAD,CACIC,WAAW,QACX3E,MAAM,kBACN4E,YAAY,aACZL,KAAM,eAACiG,GAAA,EAAD,CAAa1F,MAAM,YACzBC,YAAY,UACZxE,YAAY,yF,cC3FjC,SAASkK,GAAI9N,GAChB,MAAgCY,mBAAS,IAAzC,mBAAOmN,EAAP,KAAiBC,EAAjB,KAqBA,OAnBAhN,qBAAU,WACN,IAAIgL,EAYJ,OAVgB,SAAViC,IACF5O,GAAOgH,KAAKjH,EAAY,CACpBsE,KAAM1D,EAAM0D,OACbxC,MAAK,SAACC,GACL6M,EAAY7M,EAASC,MACrB4K,EAASE,WAAW+B,EAAS,QAIrCA,GACO,WACHD,EAAY,IACZ7B,aAAaH,MAElB,CAAChM,EAAM0D,OAGN,eAACrD,EAAA,EAAD,CAAMC,UAAU,cAAhB,SACMyN,GAAYA,EAAS/H,OAAS,EAC5B,eAACkI,GAAA,EAAD,CAAK5N,UAAU,WAAf,SAA2ByN,EAASI,MAAM,WAAW7M,KAAI,SAAC8M,EAAM5M,GAAP,OAAiB,gCAAmB4M,GAAR5M,QAErF,eAAC0M,GAAA,EAAD,4BC9BT,SAASG,KACZ,MAAwBzN,mBAAmB,IAA3C,mBAAO0N,EAAP,KAAaC,EAAb,KACA,EAAsC3N,wBAA6BsK,GAAnE,mBAAOsD,EAAP,KAAoBC,EAApB,KAqBA,OAjBAzN,qBAAU,WACN,IAAIgL,EAUJ,OARiB,SAAX0C,IACFrP,GAAO4B,IAAI7B,GAAiB8B,MAAK,SAACC,GAC9BoN,EAAQpN,EAASC,MACjB4K,EAASE,WAAWwC,EAAU,QAItCA,GACO,WACHH,EAAQ,IACRpC,aAAaH,MAElB,IAGC,gBAAC3L,EAAA,EAAD,WACI,eAAC2I,GAAA,EAAD,CAAS1I,UAAU,UAAUuE,aAAc,GAAI8J,UAAW,IAAK/J,YAAa,GAA5E,SACK0J,EAAKhN,KAAI,SAACsN,EAAKpN,GAAN,OACN,eAACyH,GAAA,EAAD,CAEIC,GAAI0F,EACJ9F,SAAU,kBAAM2F,EAAeG,IAC/BzF,WAAYyF,IAAQJ,EACpB,gCAAwBI,GACxBtO,UAAU,SANd,SAQKsO,GAPIA,QAWjB,eAACvO,EAAA,EAAD,UACMmO,EACE,eAACV,GAAD,CAAKpK,KAAM8K,IAEf,eAACzG,GAAA,EAAD,CACIC,WAAW,QACX3E,MAAM,kBACN4E,YAAY,aACZL,KAAM,eAAC+F,GAAA,EAAD,CAAiBxF,MAAM,YAC7BC,YAAY,UACZxE,YAAY,8DC/CzB,SAASiL,KACZ,IAAM/N,EAAUC,cAMhB,OAJAC,qBAAU,WACN0E,GAAS5E,GAAS,iBACnB,CAACA,IAGA,gBAACT,EAAA,EAAD,WACI,eAACD,GAAD,CAAQM,MAAI,IACZ,gBAACL,EAAA,EAAD,CAAMC,UAAU,OAAhB,UACI,eAACe,EAAA,EAAD,CAASf,UAAU,cAAnB,kBACA,eAACoL,GAAD,OAEJ,gBAACrL,EAAA,EAAD,CAAMC,UAAU,OAAhB,UACI,eAACe,EAAA,EAAD,CAASf,UAAU,cAAnB,kBACA,eAAC+N,GAAD,U,kCCbT,SAASS,KACZ,IAAQxF,EAAiBC,cAAjBD,aACR,EAA4B1I,mBAAmB,IAA/C,mBAAOiG,EAAP,KAAeC,EAAf,KACA,EAA4ClG,wBAA6BsK,GAAzE,mBAAO6D,EAAP,KAAuBC,EAAvB,KACA,EAA4CpO,wBAA6BsK,GAAzE,mBAAO+D,EAAP,KAAuBC,EAAvB,KACMxL,EAAO1B,sBACPlB,EAAUC,cAGhBC,qBAAU,WAON,OANA0E,GAAS5E,GAAS,WACdzB,GAAOgH,KAAKjH,EAAkB,CAAEsE,KAAM4F,IAAgBpI,MAAK,SAACC,GACxD2F,EAAU3F,EAASC,KAAK+N,QAAO,SAACC,GAAD,MAA0B,UAAXA,EAAEzI,eAIjD,WACHG,EAAU,OAEf,CAACwC,EAAcxI,IAoClB,OACI,gBAACT,EAAA,EAAD,WACI,eAACD,GAAD,CAAQK,UAAQ,IAChB,gBAACJ,EAAA,EAAD,CAAMC,UAAU,UAAhB,UACI,eAAC,KAAD,CAAMsH,KAAMzC,KAAkBuC,KAAM,GAAIS,MAAM,UAAUH,WAAW,UAAU1H,UAAU,aAAauK,QAAS,GAAIC,aAAc,KAC/H,gBAACzJ,EAAA,EAAD,CAASf,UAAU,eAAnB,sCAA4DgJ,KAE5D,gBAACjJ,EAAA,EAAD,CAAMC,UAAU,gBAAhB,UACI,wBAAM0C,SAzCP,SAACiD,GACZA,EAAMxD,iBAEN,IAAM4M,EAAe3L,EAAKf,QAASD,WACdwI,IAAjBmE,GAAsD,IAAxBA,EAAarJ,YAMxBkF,IAAnB6D,QAAmD7D,IAAnB+D,EAKhCF,IAAmBE,EAKvB5P,GAAOgH,KAAKjH,EAAkB,CACtBmC,QAAS+H,EACTgG,OAAQP,EACRQ,OAAQN,EACRO,QAASH,IACVnO,MAAK,WACJuK,KAAMgE,QAAQ,mCACfxM,OAAM,WACLwI,KAAMpJ,MAAM,6BAZhBoJ,KAAMpJ,MAAM,2CALZoJ,KAAMpJ,MAAM,0CALZoJ,KAAMpJ,MAAM,uBAmCoB6G,GAAG,mBAA3B,UACI,eAACzC,GAAA,EAAD,CAAW5C,YAAY,eAAeC,IAAKJ,EAAMpD,UAAU,cAC3D,gBAAC+D,GAAA,EAAD,CAAW/D,UAAU,qBAArB,qIAC4H,eAACoP,GAAA,EAAD,CAAMhI,KAAM,IAAZ,qBAD5H,SACiK,eAACgI,GAAA,EAAD,CAAMhI,KAAM,IAAZ,oBADjK,wCACoO,eAACgI,GAAA,EAAD,CAAMhI,KAAM,IAAZ,oBADpO,2BAC0R,eAACgI,GAAA,EAAD,CAAMhI,KAAM,IAAZ,sBAD1R,OAGA,gBAACrH,EAAA,EAAD,CAAMC,UAAU,qBAAhB,UACI,eAACqP,GAAA,EAAD,CACItM,MAAM,sBACNuM,QAAS/I,EAAOvF,KAAI,SAAC2F,GAAD,MAAY,CAAEtD,MAAOsD,EAAMvD,KAAMhB,MAAOuE,EAAMvD,SAClEmM,SAAUd,EACVjG,SAAU,SAACgH,GAAD,OAAUd,EAAkBc,EAAKpN,QAJ/C,SAMI,eAAC+B,GAAA,EAAD,CAASC,QAAQ,iDAAjB,SACI,eAACjD,EAAA,EAAD,CAAQkF,KAAK,SAAb,SAAuBoI,GAAkB,4BAGrD,eAAC1O,EAAA,EAAD,CAAMC,UAAU,aAAhB,SACI,eAAC,KAAD,CAAMsH,KAAMmI,KAAgB5H,MAAM,cAEtC,eAACwH,GAAA,EAAD,CACItM,MAAM,sBACNuM,QAAS/I,EAAOvF,KAAI,SAAC2F,GAAD,MAAY,CAAEtD,MAAOsD,EAAMvD,KAAMhB,MAAOuE,EAAMvD,SAClEmM,SAAUZ,EACVnG,SAAU,SAACgH,GAAD,OAAUZ,EAAkBY,EAAKpN,QAJ/C,SAMI,eAAC+B,GAAA,EAAD,CAASC,QAAQ,iCAAjB,SACA,eAACjD,EAAA,EAAD,CAAQkF,KAAK,SAAb,SAAuBsI,GAAkB,kCAKjD,eAACxN,EAAA,EAAD,CAAQE,WAAW,UAAUgF,KAAK,SAAS2D,KAAK,mBAAhD,oC,qCCxGd0F,GAA0B,IAAIC,KAE9BC,G,WAEL,WAAa9O,GAAQ,qBAEpBA,EAAOA,GAAQ,GAEf+O,KAAKC,SAAW,CACfC,KAAM,CACL,IAAIC,KACJ,IAAIA,KACJ,IAAIA,KACJ,IAAIA,MAELC,IAAK,CACJ,IAAID,KACJ,IAAIA,KACJ,IAAIA,KACJ,IAAIA,YAIyBpF,IAA1B9J,EAAKoP,kBAETL,KAAKM,wBAAyBrP,EAAKoP,iBAAkBpP,EAAKsP,QAAU,K,4DAMtE,SAAyBF,EAAkBE,GAE1C,IAAMC,EAA4D,IAA3CH,EAAiBI,SAAU,IAwClD,OAtCAZ,GAAwBa,KAAML,GAAmBM,SAOjDX,KAAKC,SAASC,KAAM,GAAIU,IAAK,EAAG,GAAK,GACrCZ,KAAKC,SAASC,KAAM,GAAIU,IAAK,GAAK,GAAK,GACvCZ,KAAKC,SAASC,KAAM,GAAIU,KAAO,GAAK,GAAK,GACzCZ,KAAKC,SAASC,KAAM,GAAIU,KAAO,EAAG,GAAK,GACvCZ,KAAKC,SAASC,KAAKlF,SAAS,SAAW6F,GAEtCA,EAAEC,aAAcjB,OAIjBG,KAAKC,SAASG,IAAK,GAAIQ,IAAK,EAAG,EAAG,GAClCZ,KAAKC,SAASG,IAAK,GAAIQ,IAAK,GAAK,EAAG,GACpCZ,KAAKC,SAASG,IAAK,GAAIQ,KAAO,GAAK,EAAG,GACtCZ,KAAKC,SAASG,IAAK,GAAIQ,KAAO,EAAG,EAAG,GACpCZ,KAAKC,SAASG,IAAIpF,SAAS,SAAW6F,GAErCA,EAAEC,aAAcjB,IAEhB,IAAMkB,EAAOC,KAAKC,IAAKJ,EAAEK,GACpBV,EAEJK,EAAEK,GAAKF,KAAKG,IAAKZ,EAASQ,EAAM,GAIhCF,EAAEO,eAAgBJ,KAAKG,IAAKZ,EAASQ,EAAM,OAMtCf,KAAKC,W,mBAIb,SAAOoB,EAAQjC,GAEd,KAAQiC,EAAOxL,OAASuJ,EAAOvJ,QAE9BuJ,EAAO1N,KAAM,IAAIqO,GAIlBX,EAAOvJ,OAASwL,EAAOxL,OAEvB,IAAM,IAAIyL,EAAI,EAAGA,EAAID,EAAOxL,OAAQyL,IAAO,CAE1C,IAAMC,EAAUnC,EAAQkC,GAExB,GAAW,IAANA,EAEJ,IAAM,IAAIE,EAAI,EAAGA,EAAI,EAAGA,IAEvBD,EAAQtB,SAASC,KAAMsB,GAAId,KAAMV,KAAKC,SAASC,KAAMsB,SAMtD,IAAM,IAAIA,EAAI,EAAGA,EAAI,EAAGA,IAEvBD,EAAQtB,SAASC,KAAMsB,GAAIC,YAAazB,KAAKC,SAASC,KAAMsB,GAAKxB,KAAKC,SAASG,IAAKoB,GAAKH,EAAQC,EAAI,IAMvG,GAAKA,IAAMD,EAAOxL,OAAS,EAE1B,IAAM,IAAI2L,EAAI,EAAGA,EAAI,EAAGA,IAEvBD,EAAQtB,SAASG,IAAKoB,GAAId,KAAMV,KAAKC,SAASG,IAAKoB,SAMpD,IAAM,IAAIA,EAAI,EAAGA,EAAI,EAAGA,IAEvBD,EAAQtB,SAASG,IAAKoB,GAAIC,YAAazB,KAAKC,SAASC,KAAMsB,GAAKxB,KAAKC,SAASG,IAAKoB,GAAKH,EAAQC,O,qBAUpG,SAASI,EAActC,GAEtB,IAAM,IAAIkC,EAAI,EAAGA,EAAI,EAAGA,IAEvBlC,EAAOa,SAASC,KAAMoB,GACpBZ,KAAMV,KAAKC,SAASC,KAAMoB,IAC1BR,aAAcY,GAEhBtC,EAAOa,SAASG,IAAKkB,GACnBZ,KAAMV,KAAKC,SAASG,IAAKkB,IACzBR,aAAcY,O,KC7IbC,GAAY,CACjBC,sBAAqB,8xPA8NrBC,kBAA6B,iKAMzBC,KAAYD,mBC3NXE,GAAuB,IAAIjC,KAC3BkC,GAAqB,IAAIjC,GACzBkC,GAAU,IAAI9B,KACd+B,GAAQ,IAAIC,KACZC,GAAgB,GAChBC,GAAY,GAELC,GAAb,WAEC,WAAarR,GAAQ,qBAEpBA,EAAOA,GAAQ,GAEf+O,KAAKuC,OAAStR,EAAKsR,OACnBvC,KAAKwC,OAASvR,EAAKuR,OACnBxC,KAAKyC,SAAWxR,EAAKwR,UAAY,EACjCzC,KAAKO,OAAStP,EAAKsP,QAAU,IAC7BP,KAAK0C,KAAOzR,EAAKyR,MAAQ,YACzB1C,KAAK2C,cAAgB1R,EAAK0R,eAAiB,KAC3C3C,KAAK4C,WAAa,GAElB,IAAI,IAAItB,EAAI,EAAGA,EAAItB,KAAKyC,WAAYnB,EACnCtB,KAAK4C,WAAWlR,KAAKT,EAAK2R,WAAa3R,EAAK2R,WAAWtB,GAAK,MAE7DtB,KAAK6C,eAAiB5R,EAAK4R,gBAAkB,IAAI1C,KAAS,GAAK,EAAG,GAAI2C,YACtE9C,KAAK+C,eAAiB9R,EAAK8R,gBAAkB,EAC7C/C,KAAKgD,UAAY/R,EAAK+R,WAAa,EACnChD,KAAKiD,SAAWhS,EAAKgS,UAAY,IAEjCjD,KAAKkD,YAAcjS,EAAKiS,aAAe,IACvClD,KAAKmD,qBAAuBlS,EAAKkS,qBACjCnD,KAAKoD,MAAO,EACZpD,KAAKqD,YAAc,IAAItD,GACvBC,KAAKsD,SAAW,GAChBtD,KAAKqB,OAAS,GAEdrB,KAAKuD,OAAS,GACdvD,KAAKwD,QAAU,IAAIC,IAEnBzD,KAAK0D,eACL1D,KAAK2D,iBACL3D,KAAK4D,gBAlCP,iDAsCC,WAEC,IAAM,IAAItC,EAAI,EAAGA,EAAItB,KAAKyC,SAAUnB,IAAO,CAE1C,IAAMuC,EAAQ,IAAIC,KAAkB,SAAU9D,KAAK+C,gBACnDc,EAAME,YAAa,EACnBF,EAAMG,OAAOC,QAAQ1N,MAAQyJ,KAAK2C,cAClCkB,EAAMG,OAAOC,QAAQ1S,OAASyO,KAAK2C,cAEnCkB,EAAMG,OAAOzB,OAAOrC,KAAOF,KAAKgD,UAChCa,EAAMG,OAAOzB,OAAOnC,IAAMJ,KAAKiD,SAC/BY,EAAMG,OAAOE,KAAOlE,KAAK4C,WAAWtB,GAEpCtB,KAAKwC,OAAO2B,IAAKN,GACjB7D,KAAKwC,OAAO2B,IAAKN,EAAMzE,QACvBY,KAAKuD,OAAO7R,KAAMmS,MArDrB,0BA2DC,WAEC,IAAMtB,EAASvC,KAAKuC,OACpBA,EAAO6B,yBACPpE,KAAKqD,YAAY/C,wBAAyBiC,EAAOlC,iBAAkBL,KAAKO,QACxEP,KAAKqD,YAAYrF,MAAOgC,KAAKqB,OAAQrB,KAAKsD,YAhE5C,gCAoEC,WAGC,IADA,IAAMA,EAAWtD,KAAKsD,SACZhC,EAAI,EAAGA,EAAIgC,EAASzN,OAAQyL,IAAO,CAE5C,IACM+C,EADQrE,KAAKuD,OAAQjC,GACH0C,OAAOzB,OACzB+B,EAAUtE,KAAKsD,SAAUhC,GAKzBiD,EAAYD,EAAQrE,SAASC,KAC7BsE,EAAWF,EAAQrE,SAASG,IAC5BqE,EAASD,EAAU,GACrBE,OAAM,EAGTA,EAFID,EAAOE,WAAYH,EAAU,IAAQC,EAAOE,WAAYJ,EAAW,IAE9DC,EAAU,GAIVD,EAAW,GAIrB,IAAIK,EAAiBH,EAAOE,WAAYD,GACxC,GAAK1E,KAAKoD,KAAO,CAGhB,IAAMb,EAASvC,KAAKuC,OACdnC,EAAMY,KAAK6D,IAAKtC,EAAOnC,IAAKJ,KAAKO,QACjCuE,EAAcR,EAAQrE,SAASG,IAAK,GAAIc,GAAMd,EAAMmC,EAAOrC,MAEjE0E,GADe,IAAO5D,KAAK+D,IAAKD,EAAa,IAAU1E,EAAMmC,EAAOrC,MAKrEmE,EAAUW,MAASJ,EAAiB,EACpCP,EAAUY,MAAQL,EAAiB,EACnCP,EAAUa,IAAMN,EAAiB,EACjCP,EAAUc,QAAWP,EAAiB,EACtCP,EAAUD,4BA9Gb,uBAoHC,WAEC,IAAM7B,EAASvC,KAAKuC,OACdnC,EAAMY,KAAKG,IAAKoB,EAAOnC,IAAKJ,KAAKO,QAGvC,OAFAP,KAAKqB,OAAOxL,OAAS,EAEZmK,KAAK0C,MAEb,IAAK,UACJ0C,EAAcpF,KAAKyC,SAAUF,EAAOrC,KAAME,EAAKJ,KAAKqB,QACpD,MACD,IAAK,cACJgE,EAAkBrF,KAAKyC,SAAUF,EAAOrC,KAAME,EAAKJ,KAAKqB,QACxD,MACD,IAAK,aAmCN,SAAyBiE,EAAQpF,EAAME,EAAKmF,EAAQnG,GAEnDgD,GAAcvM,OAAS,EACvBwM,GAAUxM,OAAS,EACnBwP,EAAkBC,EAAQpF,EAAME,EAAKiC,IACrC+C,EAAcE,EAAQpF,EAAME,EAAKgC,IAEjC,IAAM,IAAId,EAAI,EAAGA,EAAIgE,EAAQhE,IAE5BlC,EAAO1N,KAAM8T,KAAUC,KAAMrD,GAAed,EAAI,GAAKe,GAAWf,EAAI,GAAKiE,IAI1EnG,EAAO1N,KAAM,GA/CZgU,CAAgB1F,KAAKyC,SAAUF,EAAOrC,KAAME,EAAK,GAAKJ,KAAKqB,QAC3D,MACD,IAAK,cAC+BtG,IAA9BiF,KAAKmD,sBAAqC9M,QAAQnE,MAAO,kDAC9D8N,KAAKmD,qBAAsBnD,KAAKyC,SAAUF,EAAOrC,KAAME,EAAKJ,KAAKqB,QAMnE,SAAS+D,EAAcE,EAAQpF,EAAME,EAAKhB,GAEzC,IAAM,IAAIkC,EAAI,EAAGA,EAAIgE,EAAQhE,IAE5BlC,EAAO1N,MAAQwO,GAASE,EAAMF,GAASoB,EAAIgE,GAAWlF,GAIvDhB,EAAO1N,KAAM,GAId,SAAS2T,EAAkBC,EAAQpF,EAAME,EAAKhB,GAE7C,IAAM,IAAIkC,EAAI,EAAGA,EAAIgE,EAAQhE,IAE5BlC,EAAO1N,KAAQwO,EAAI,SAAKE,EAAMF,EAAYoB,EAAIgE,GAAalF,GAI5DhB,EAAO1N,KAAM,MAjKhB,oBAwLC,WAIC,IAFA,IAAM6Q,EAASvC,KAAKuC,OACde,EAAWtD,KAAKsD,SACZhC,EAAI,EAAGA,EAAIgC,EAASzN,OAAQyL,IAAO,CAE5C,IAAMuC,EAAQ7D,KAAKuD,OAAQjC,GACrB+C,EAAYR,EAAMG,OAAOzB,OACzBoD,GAAetB,EAAUY,MAAQZ,EAAUW,MAAShF,KAAK2C,cACzDiD,GAAgBvB,EAAUa,IAAMb,EAAUc,QAAWnF,KAAK2C,cAChEkB,EAAMG,OAAOzB,OAAOsD,mBAAmB,GACvC9D,GAAqB+D,iBAAkBjC,EAAMG,OAAOzB,OAAOwD,mBAAoBxD,EAAOyD,aACtF1C,EAAUhC,GAAI2E,QAASlE,GAAsBC,IAE7C,IAAMuC,EAAYvC,GAAmB/B,SAASC,KACxCsE,EAAWxC,GAAmB/B,SAASG,IAC7C8B,GAAMgE,YACN,IAAM,IAAI1E,EAAI,EAAGA,EAAI,EAAGA,IAEvBU,GAAMiE,cAAe5B,EAAW/C,IAChCU,GAAMiE,cAAe3B,EAAUhD,IAIhCU,GAAMkE,UAAWnE,IACjBA,GAAQf,EAAIgB,GAAM2C,IAAI3D,EAAIlB,KAAKkD,YAC/BjB,GAAQhD,EAAI+B,KAAKqF,MAAOpE,GAAQhD,EAAI0G,GAAeA,EACnD1D,GAAQqE,EAAItF,KAAKqF,MAAOpE,GAAQqE,EAAIV,GAAgBA,EACpD3D,GAAQnB,aAAc+C,EAAMG,OAAOzB,OAAOyD,aAE1CnC,EAAM0C,SAAS7F,KAAMuB,IACrB4B,EAAMzE,OAAOmH,SAAS7F,KAAMuB,IAE5B4B,EAAMzE,OAAOmH,SAAStH,GAAKe,KAAK6C,eAAe5D,EAC/C4E,EAAMzE,OAAOmH,SAASD,GAAKtG,KAAK6C,eAAeyD,EAC/CzC,EAAMzE,OAAOmH,SAASrF,GAAKlB,KAAK6C,eAAe3B,KA3NlD,2BAiOC,WAECY,KAAYF,sBAAwBD,GAAUC,sBAC9CE,KAAYD,kBAAoBF,GAAUE,oBApO5C,2BAwOC,SAAe2E,GAEdA,EAASC,QAAUD,EAASC,SAAW,GACvCD,EAASC,QAAQC,QAAU,EAC3BF,EAASC,QAAQE,aAAe3G,KAAKyC,SAEhCzC,KAAKoD,OAEToD,EAASC,QAAQG,SAAW,IAI7B,IAAMC,EAAa,GACbC,EAAQ9G,KACRwD,EAAUxD,KAAKwD,QAErBgD,EAASO,gBAAkB,SAAWC,GAErC,IAAM5G,EAAMY,KAAKG,IAAK2F,EAAMvE,OAAOnC,IAAK0G,EAAMvG,QAC9CuG,EAAMG,kBAAmBJ,GAEzBG,EAAOE,SAASC,aAAe,CAAE5U,MAAOsU,GACxCG,EAAOE,SAASE,WAAa,CAAE7U,MAAOuU,EAAMvE,OAAOrC,MACnD8G,EAAOE,SAASG,UAAY,CAAE9U,MAAO6N,GAErCoD,EAAQ5C,IAAK4F,EAAUQ,IAIxBxD,EAAQ5C,IAAK4F,EAAU,QArQzB,4BAyQC,WAEC,IAAMpG,EAAMY,KAAKG,IAAKnB,KAAKuC,OAAOnC,IAAKJ,KAAKO,QAC5BP,KAAKwD,QAEbxI,SAAS,SAAWgM,EAAQR,GAEnC,GAAgB,OAAXQ,EAAkB,CAEtB,IAAME,EAAWF,EAAOE,SACxBlH,KAAKiH,kBAAmBC,EAASC,aAAa5U,OAC9C2U,EAASE,WAAW7U,MAAQyN,KAAKuC,OAAOrC,KACxCgH,EAASG,UAAU9U,MAAQ6N,GAIrBJ,KAAKoD,MAAQ,aAAcoD,EAASC,gBAEnCD,EAASC,QAAQG,SACxBJ,EAASc,aAAc,GAEZtH,KAAKoD,QAAY,aAAcoD,EAASC,WAEnDD,EAASC,QAAQG,SAAW,GAC5BJ,EAASc,aAAc,KAItBtH,QArSL,+BAySC,SAAmBZ,GAElB,KAAQA,EAAOvJ,OAASmK,KAAKqB,OAAOxL,QAEnCuJ,EAAO1N,KAAM,IAAI6V,MAIlBnI,EAAOvJ,OAASmK,KAAKqB,OAAOxL,OAE5B,IAAM,IAAIyL,EAAI,EAAGA,EAAItB,KAAKyC,SAAUnB,IAAO,CAE1C,IAAMgE,EAAStF,KAAKqB,OAAQC,GACtBkG,EAAOxH,KAAKqB,OAAQC,EAAI,IAAO,EACrClC,EAAQkC,GAAIrC,EAAIuI,EAChBpI,EAAQkC,GAAIgF,EAAIhB,KAxTnB,4BA8TC,WAECtF,KAAKyH,YACLzH,KAAK0H,eACL1H,KAAK2H,qBACL3H,KAAK4H,mBAnUP,oBAuUC,WAEC,IAAM,IAAItG,EAAI,EAAGA,EAAItB,KAAKuD,OAAO1N,OAAQyL,IAExCtB,KAAKwC,OAAOqF,OAAQ7H,KAAKuD,OAAQjC,MA3UpC,qBAiVC,WAEC,IAAMkC,EAAUxD,KAAKwD,QACrBA,EAAQxI,SAAS,SAAWgM,EAAQR,UAE5BA,EAASO,uBACTP,EAASC,QAAQC,eACjBF,EAASC,QAAQE,oBACjBH,EAASC,QAAQG,SAER,OAAXI,WAEGA,EAAOE,SAASC,oBAChBH,EAAOE,SAASE,kBAChBJ,EAAOE,SAASG,WAIxBb,EAASc,aAAc,KAGxB9D,EAAQsE,YAtWV,K,gBCLMC,G,oDAEL,WAAaC,GAAO,IAAD,wBAElB,gBACKA,IAAMA,EACX,EAAKC,gBAAiB,EACtB,EAAKC,eAAgB,EACrB,EAAKC,qBAAsB,EAE3B,IAAMC,EAAU,IAAIC,YAAa,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAClGC,EAAY,IAAIC,aAAc,IAC9BC,EAAkB,IAAIC,KAC5BD,EAAgBE,SAAU,IAAIC,KAAiBP,EAAS,IACxDI,EAAgBI,aAAc,WAAY,IAAID,KAAiBL,EAAW,GAAG,IAC7E,IAAMO,EAAe,IAAIC,KAAcN,EAAiB,IAAIO,MAb1C,OAclB,EAAK5E,IAAK0E,GAEV,EAAKA,aAAeA,EACpB,EAAKG,aAAe,GACpB,EAAKC,cAAgB,GACrB,EAAKC,YAAc,GAnBD,E,qDAuBnB,WAUC,IARA,IAAMjB,EAAiBjI,KAAKiI,eACtBC,EAAgBlI,KAAKkI,cACrBC,EAAsBnI,KAAKmI,oBAE3BU,EAAe7I,KAAK6I,aACpBG,EAAehJ,KAAKgJ,aACpBC,EAAgBjJ,KAAKiJ,cACrBC,EAAclJ,KAAKkJ,YACf5H,EAAI,EAAG6H,EAAIH,EAAanT,OAAQyL,EAAI6H,EAAG7H,IAAO,CAEvD,IAAM8H,EAAcJ,EAAc1H,GAC5B+H,EAAeJ,EAAe3H,GAC9BgI,EAAkBJ,EAAa5H,GAErC8H,EAAYG,QAAUtB,EACtBoB,EAAaE,QAAUtB,GAAkBC,EACzCoB,EAAgBC,QAAUpB,EAI3BU,EAAaU,QAAUtB,I,oBAIxB,WAEC,IAAMD,EAAMhI,KAAKgI,IACXzF,EAASyF,EAAIzF,OACbE,EAAWuF,EAAIvF,SACfY,EAAc2E,EAAI3E,YAClBC,EAAW0E,EAAI1E,SACfC,EAASyE,EAAIzE,OAGbiG,EADexJ,KAAK6I,aACgBY,SAASC,aAAc,YAC3DV,EAAehJ,KAAKgJ,aACpBC,EAAgBjJ,KAAKiJ,cACrBC,EAAclJ,KAAKkJ,YAOzB,IALAlJ,KAAKuG,SAAS7F,KAAM6B,EAAOgE,UAC3BvG,KAAK2J,WAAWjJ,KAAM6B,EAAOoH,YAC7B3J,KAAK4J,MAAMlJ,KAAM6B,EAAOqH,OACxB5J,KAAK6F,mBAAmB,GAEhBmD,EAAanT,OAAS4M,GAE7BzC,KAAK6H,OAAQmB,EAAaa,OAC1B7J,KAAK6H,OAAQoB,EAAcY,OAC3B7J,KAAK6H,OAAQqB,EAAYW,OAI1B,KAAQb,EAAanT,OAAS4M,GAAW,CAExC,IAAM2G,EAAc,IAAIU,KAAY,IAAI3H,KAAQ,GAC1C4H,EAAW,IAAIC,KAAmB,CAAEhS,MAAO,EAAUiS,aAAa,EAAMC,QAAS,GAAKC,YAAY,EAAOC,KAAMC,OAC/GhB,EAAe,IAAIiB,KAAM,IAAIC,KAAiBR,GAC9CT,EAAkB,IAAIkB,KACtBC,EAAa,IAAIX,KAAY,IAAI3H,KAAQ,UAC/CmH,EAAgBnF,IAAKsG,GAErBzK,KAAKmE,IAAKiF,GACVpJ,KAAKmE,IAAKkF,GACVrJ,KAAKmE,IAAKmF,GAEVN,EAAatX,KAAM0X,GACnBH,EAAcvX,KAAM2X,GACpBH,EAAYxX,KAAM4X,GAInB,IAAM,IAAIhI,EAAI,EAAGA,EAAImB,EAAUnB,IAAO,CAErC,IAAMgD,EAAUhB,EAAUhC,GAEpB+C,EADQd,EAAQjC,GACE0C,OAAOzB,OACzBiC,EAAWF,EAAQrE,SAASG,IAE5BgJ,EAAcJ,EAAc1H,GAC5B+H,EAAeJ,EAAe3H,GAC9BgI,EAAkBJ,EAAa5H,GAC/BmJ,EAAanB,EAAgBvV,SAAU,GAE7CqV,EAAYsB,IAAIvJ,IAAIT,KAAM8D,EAAU,IACpC4E,EAAYsB,IAAI7F,IAAInE,KAAM8D,EAAU,IACpC4E,EAAYsB,IAAI7F,IAAI3D,GAAK,KAEzBmI,EAAa9C,SAASoE,WAAYnG,EAAU,GAAKA,EAAU,IAC3D6E,EAAa9C,SAASnF,eAAgB,IACtCiI,EAAaO,MAAMgB,WAAYpG,EAAU,GAAKA,EAAU,IACxD6E,EAAaO,MAAM1I,EAAI,KAEvBlB,KAAK6H,OAAQyB,GACbA,EAAgB/C,SAAS7F,KAAM2D,EAAUkC,UACzC+C,EAAgBK,WAAWjJ,KAAM2D,EAAUsF,YAC3CL,EAAgBM,MAAMlJ,KAAM2D,EAAUuF,OACtCN,EAAgBzD,mBAAmB,GACnC7F,KAAK6K,OAAQvB,GAEbmB,EAAWC,IAAIvJ,IAAIP,IAAKyD,EAAUc,OAAQd,EAAUW,MAAQX,EAAUjE,KACtEqK,EAAWC,IAAI7F,IAAIjE,IAAKyD,EAAUa,IAAKb,EAAUY,OAASZ,EAAUnE,MAIrE,IAAMqE,EAAYlB,EAAYpD,SAASC,KACjCsE,EAAWnB,EAAYpD,SAASG,IACtCoJ,EAAqBsB,OAAQ,EAAGtG,EAAU,GAAIvF,EAAGuF,EAAU,GAAI8B,EAAG9B,EAAU,GAAItD,GAChFsI,EAAqBsB,OAAQ,EAAGtG,EAAU,GAAIvF,EAAGuF,EAAU,GAAI8B,EAAG9B,EAAU,GAAItD,GAChFsI,EAAqBsB,OAAQ,EAAGtG,EAAU,GAAIvF,EAAGuF,EAAU,GAAI8B,EAAG9B,EAAU,GAAItD,GAChFsI,EAAqBsB,OAAQ,EAAGtG,EAAU,GAAIvF,EAAGuF,EAAU,GAAI8B,EAAG9B,EAAU,GAAItD,GAEhFsI,EAAqBsB,OAAQ,EAAGvG,EAAW,GAAItF,EAAGsF,EAAW,GAAI+B,EAAG/B,EAAW,GAAIrD,GACnFsI,EAAqBsB,OAAQ,EAAGvG,EAAW,GAAItF,EAAGsF,EAAW,GAAI+B,EAAG/B,EAAW,GAAIrD,GACnFsI,EAAqBsB,OAAQ,EAAGvG,EAAW,GAAItF,EAAGsF,EAAW,GAAI+B,EAAG/B,EAAW,GAAIrD,GACnFsI,EAAqBsB,OAAQ,EAAGvG,EAAW,GAAItF,EAAGsF,EAAW,GAAI+B,EAAG/B,EAAW,GAAIrD,GACnFsI,EAAqBlC,aAAc,M,GA9IbkD,MCXXO,I,OAAb,WAYI,WAAYC,GAAgC,0BAX5CC,oBAW2C,OAV3CC,iBAU2C,OAT3CF,cAS2C,OAP3CtL,cAO2C,OAN3C3G,QAM2C,OAJ3CoS,aAI2C,OAH3CC,eAG2C,EAEvCpL,KAAKiL,eAAiB,IAAII,KAAwB,EAAG,GACrDrL,KAAKkL,YAAc,IAAII,WAAW,GAClCtL,KAAKgL,SAAWA,EAChBhL,KAAKN,SAAW,EAAE,GAAI,GAAI,GAAI,GAC9BM,KAAKjH,IAAM,EACXiH,KAAKmL,QAAU,IAAI1H,IACnBzD,KAAKoL,UAAY,EApBzB,mDAuBI,SAAe7X,GAAkC,IAApBgE,EAAmB,wDAAH,EACzC,IAAKyI,KAAKmL,QAAQI,IAAIhY,GACtB,CACI,IAAc,IAAVgE,EAEA,MAAM,IAAIiU,MAAJ,gBAAmBjY,EAAnB,qBAIVyM,KAAKmL,QAAQvK,IAAIrN,EAAM,CAACyM,KAAKoL,UAAWpL,KAAKoL,UAAY7T,IACzDyI,KAAKoL,WAAa7T,EAGtB,IAAIkU,EAAQzL,KAAKmL,QAAQra,IAAIyC,GAC7B,OAAQkY,EAA2B,KArC3C,8BAwCI,SAAiB1S,GAAa,IAAD,iBACIiH,KAAKmL,QAAQO,WADjB,IACzB,2BAAqD,CAAC,IAAD,yBAAzC5U,EAAyC,KAAlC2U,EAAkC,KACjD,GAAI1S,GAAM0S,EAAM,IAAM1S,EAAK0S,EAAM,GAC7B,MAAO,CACH3U,MAAOA,EACP6U,IAAK5S,EAAK0S,EAAM,KALH,iCAxCjC,oBAkDI,SAAOE,GACH3L,KAAKjH,GAAK4S,EACV,IAAMC,EAAY,IAAIC,YAAY,CAACF,IAC7BG,EAAW,IAAIC,SAASH,EAAUI,QACxChM,KAAKN,SAAW,CAACoM,EAASG,SAAS,GAAK,IAAKH,EAASG,SAAS,GAAK,IAAKH,EAASG,SAAS,GAAK,IAAKH,EAASG,SAAS,GAAK,OAtDpI,kBAyDI,SAAKhN,EAAWqH,EAAW4F,EAAoB3J,GAC3C,IAAQ0I,EAAgCjL,KAAhCiL,eAAgBC,EAAgBlL,KAAhBkL,YAGlBiB,EAAanM,KAAKgL,SAASoB,gBA4BjC,OA3BA7J,EAAO8J,cACHrM,KAAKgL,SAASsB,aAAaC,mBAC3BvM,KAAKgL,SAASsB,aAAaE,oBAC3BvN,EAAIkN,EAAa,EACjB7F,EAAI6F,EAAa,EACjB,EACA,GAGJnM,KAAKgL,SAASyB,gBAAgBxB,GAC9BjL,KAAKgL,SAAS0B,OAAOR,EAAO3J,GAC5BvC,KAAKgL,SAASyB,gBAAgB,MAG9BlK,EAAOoK,kBAGP3M,KAAKgL,SAAS4B,uBACV3B,EACA,EACA,EACA,EACA,EACAC,GAEJlL,KAAKN,SAAW,CAACwL,EAAY,GAAK,IAAKA,EAAY,GAAK,IAAKA,EAAY,GAAK,IAAKA,EAAY,GAAK,KACpGlL,KAAKjH,GAAK,IAAIgT,SAASb,EAAYc,QAAQa,UAAU,GAAG,GACjD7M,KAAKjH,OAzFpB,MCm1BO,ICl1BF+T,GDk1BQC,GAAb,WAWC,WAAY/E,GAAW,0BAVpBgF,qBAUmB,OATnBC,mBASmB,OARnBC,kBAQmB,OAPnBC,mBAOmB,OALnBC,4BAKmB,OAJnBC,yBAImB,OAHnBC,0BAGmB,OAFnBC,0BAEmB,EACrBvN,KAAKgN,gBA7rBA,WAEN,IAAMQ,EAAiBnC,KAAoBoC,MAAM,CAChDpC,KAAgBqC,MAAMxG,SACtB,CAAEyG,WAAY,CAAEpb,MAAO,EAAE,GAAI,GAAI,GAAI,OAGtC,OAAO,IAAI8Y,KAAqB,CAC/BnE,SAAUsG,EACVI,aA3K4B,m9CA4K5BC,eA3G4B,0pFA4G5BtK,QAAQ,EACR6G,KAAMiB,KACN9X,KAAM,4BAgrBiBua,GACjB9F,EAAI+F,cAAc/N,KAAKgN,iBACvBhN,KAAKkN,aA9eN,WACN,IAAMM,EAAiBnC,KAAoBoC,MAAM,CAEhD,CAAEO,QAAS,CAAEzb,MAAO,IACpB,CAAE0b,UAAW,CAAE1b,MAAO,IACtB,CAAEob,WAAY,CAAEpb,MAAO,EAAE,GAAI,GAAI,GAAI,OAGtC,OAAO,IAAI8Y,KAAqB,CAC/BnE,SAAUsG,EACVI,aA1M0B,43FA2M1BC,eAlG0B,q6EAmG1BzD,KAAMiB,KAEN9X,KAAM,yBAgeoB2Z,GAC1BlN,KAAKiN,cA7TA,WAEN,IAAMO,EAAiBnC,KAAoBoC,MAAM,CAChDpC,KAAgBqC,MAAMxG,SACtB,CAAEyG,WAAY,CAAEpb,MAAO,EAAE,GAAI,GAAI,GAAI,KACrC,CAAE2b,UAAW,CAAE3b,MAAO,MAGvB,OAAO,IAAI8Y,KAAqB,CAC/BnE,SAAUsG,EACVI,aAzKkC,omDA0KlCC,eAlGkC,q6EAmGlCtK,QAAQ,EACR6G,KAAMiB,KACN9X,KAAM,0BA+Se4a,GACrBnO,KAAKmN,cAjCA,WAEN,IAAMK,EAAiBnC,KAAoBoC,MAAM,CAChD,CAAES,UAAW,CAAE3b,MAAO,IACtB,CAAE6b,KAAM,CAAE7b,MAAO,IACjB,CAAE6b,KAAM,CAAE7b,MAAO,MAGlB,OAAO,IAAI8Y,KAAqB,CAC/BnE,SAAUsG,EACVI,aApFqB,6qDAqFrBC,eAzBqB,mQA0BrBzD,KAAMiB,KACN9X,KAAM,kCAoBe8a,GAEfrO,KAAKoN,uBA1RN,WAEN,IAAMI,EAAiBnC,KAAoBoC,MAAM,IAEjD,OAAO,IAAIpC,KAAqB,CAC/BnE,SAAUsG,EACVI,aA1BoB,gMA2BpBC,eAhBoB,6FAiBpBzD,KAAMiB,KACN9X,KAAM,4BAiR8B+a,GACpCtO,KAAKqN,oBA/MA,WAEN,IAAMG,EAAiBnC,KAAoBoC,MAAM,CAChD,CAAEO,QAAS,CAAEzb,MAAO,IACpB,CAAE0b,UAAW,CAAE1b,MAAO,MAGvB,OAAO,IAAI8Y,KAAqB,CAC/BnE,SAAUsG,EACVI,aAvEyB,sjDAwEzBC,eAnByB,6FAoBzBzD,KAAMiB,KACN9X,KAAM,kCAmMqB8Z,GACrBrN,KAAKsN,qBAxKN,WAEN,IAAME,EAAiBnC,KAAoBoC,MAAM,CAChD,CAAES,UAAW,CAAE3b,MAAO,MAGvB,OAAO,IAAI8Y,KAAqB,CAC/BnE,SAAUsG,EACVI,aAhC0B,ySAiC1BC,eAlB0B,6FAmB1BzD,KAAMiB,KACN9X,KAAM,kCA6J4B+Z,GAClCtN,KAAKuN,qBAjIA,WAEN,IAAMC,EAAiBnC,KAAoBoC,MAAM,CAChD,CAAES,UAAW,CAAE3b,MAAO,IACtB,CAAE6b,KAAM,CAAE7b,MAAO,MAGlB,OAAO,IAAI8Y,KAAqB,CAC/BnE,SAAUsG,EACVI,aAjC0B,uUAkC1BC,eAnB0B,6FAoB1BzD,KAAMiB,KACN9X,KAAM,kCAqHsBga,GArB9B,iDAwBC,SAAahW,GACZyI,KAAKiN,cAAc/F,SAASgH,UAAU3b,MAAQgF,EAC9CyI,KAAKiN,cAAcsB,oBAAqB,EACxCvO,KAAKsN,qBAAqBpG,SAASgH,UAAU3b,MAAQgF,EACrDyI,KAAKsN,qBAAqBiB,oBAAqB,EAC/CvO,KAAKmN,cAAcjG,SAASgH,UAAU3b,MAAQgF,EAC9CyI,KAAKmN,cAAcoB,oBAAqB,EACxCvO,KAAKuN,qBAAqBrG,SAASgH,UAAU3b,MAAQgF,EACrDyI,KAAKuN,qBAAqBgB,oBAAqB,IAhCjD,0BAmCC,SAAahX,GACZyI,KAAKkN,aAAahG,SAAS+G,UAAY,CAAE1b,MAAOgF,GAChDyI,KAAKkN,aAAaqB,oBAAqB,EACvCvO,KAAKqN,oBAAoBnG,SAAS+G,UAAY,CAAE1b,MAAOyO,KAAK6D,IAAItN,EAAM,IACtEyI,KAAKqN,oBAAoBkB,oBAAqB,IAvChD,2BA0CC,SAAcxV,GACbiH,KAAKgN,gBAAgB9F,SAASyG,WAAa,CAAEpb,MAAOwG,GACpDiH,KAAKgN,gBAAgBuB,oBAAqB,EAC1CvO,KAAKkN,aAAahG,SAASyG,WAAa,CAAEpb,MAAOwG,GACjDiH,KAAKkN,aAAaqB,oBAAqB,EACvCvO,KAAKiN,cAAc/F,SAASyG,WAAa,CAAEpb,MAAOwG,GAClDiH,KAAKiN,cAAcsB,oBAAqB,EACxCvO,KAAKiN,cAAc/F,SAASyG,WAAa,CAAEpb,MAAOwG,GAClDiH,KAAKiN,cAAcsB,oBAAqB,IAlD1C,qBAqDC,SAAQH,GACPpO,KAAKuN,qBAAqBrG,SAASkH,KAAO,CAAE7b,MAAO6b,EAAOpN,KAAKqF,MAAM+H,IACrEpO,KAAKuN,qBAAqBgB,oBAAqB,EAC/CvO,KAAKmN,cAAcjG,SAASkH,KAAO,CAAE7b,MAAO6b,EAAOpN,KAAKqF,MAAM+H,IAC9DpO,KAAKmN,cAAcoB,oBAAqB,MAzD1C,KEl1BaC,GAAb,oDAEI,WAAYjM,EAAsBkM,GAAgC,IAAD,8BAE7DlM,EAAOmM,GAAK,IAAIrD,KAAc,EAAG,EAAG,IACpC,cAAM9I,EAAQkM,IAETE,oBAAqB,EAE1B,EAAKC,aAAaC,KAAOxD,KAAYyD,IACrC,EAAKF,aAAaG,OAAS1D,KAAY2D,OACvC,EAAKJ,aAAaK,MAAQ5D,KAAY6D,MAEtC,EAAKC,QAAQC,IAAM/D,KAAYyD,IAC/B,EAAKK,QAAQE,IAAMhE,KAAYiE,aAG/B,EAAKC,UAAY,EAGjB,EAAKC,YAAc,IACnB,EAAKC,cAAgB,KACrB,EAAKC,cAA0B,GAAV1O,KAAK2O,GAC1B,EAAK9T,SArBwD,EAFrE,U,OAAiC+T,GCC3BC,G,WAGF,WAAYC,GAA4B,0BAFxCvN,YAEuC,EACnCvC,KAAKuC,OAAS,IAAI8I,KAAwB,GAAI0E,OAAOC,WAAaD,OAAOE,YAAa,EAAG,K,2CAG7F,SAAOC,GACHA,EAASrU,W,qBAGb,SAAQqU,GAAiD,IAA1BC,EAAyB,uDAAN,IAC9CnQ,KAAKuC,OAAOgE,SAAS7F,KAAKwP,EAAS9Q,QACnCY,KAAKuC,OAAOgE,SAASrF,EAAIiP,EACzBnQ,KAAKuC,OAAOsD,sB,oBAGhB,SAAOqK,GACHA,EAASE,cAAe,EACxBF,EAASG,YAAc,M,oBAG3B,SAAO9Z,EAAehF,GAClByO,KAAKuC,OAAO+N,OAAS/Z,EAAQhF,EAC7ByO,KAAKuC,OAAO6B,6B,KAKdmM,G,WAIF,WAAYT,EAA2B9H,GAAW,0BAHlDzF,YAGiD,OAFjDyF,SAEiD,EAC7ChI,KAAKuC,OAAS,IAAI8I,MACb0E,OAAOC,WAAa,EACrBD,OAAOC,WAAa,EACpBD,OAAOE,YAAc,GACpBF,OAAOE,YAAc,EACtB,EACA,KACJjQ,KAAKgI,IAAMA,E,2CAGf,SAAOkI,GACH,IAAI3Y,EAAO2Y,EAAS9Q,OAAOuF,WAAYuL,EAASM,OAAOjK,UACnD+J,EAAUJ,EAASM,OAAeF,OAEtCtQ,KAAKuC,OAAOyC,KAAOzN,EAAO+Y,GAAU,EACpCtQ,KAAKuC,OAAO0C,MAAQ1N,EAAO+Y,EAAS,EAEpCtQ,KAAKuC,OAAO2C,IAAM3N,EAAO,EACzByI,KAAKuC,OAAO4C,OAAS5N,GAAS,EAE9ByI,KAAKuC,OAAOgE,SAAS7F,KAAKwP,EAASM,OAAOjK,UAC1CvG,KAAKuC,OAAO6B,yBACZ8L,EAASrU,SACTmE,KAAKgI,IAAIrE,mB,oBAGb,SAAOuM,GACHlQ,KAAKuC,OAAOgE,SAAS7F,KAAMwP,EAASM,OAAOjK,UAC3C2J,EAAS9Q,OAAOsB,KAAMV,KAAKuC,OAAOgE,UAClC2J,EAAS9Q,OAAO8B,EAAI,EACpBgP,EAASG,YAAc,IACvBH,EAASE,cAAe,I,qBAG5B,SAAQF,GAAiD,IAA1BC,EAAyB,uDAAN,IAC9CnQ,KAAKuC,OAAOgE,SAAS7F,KAAKwP,EAAS9Q,QACnCY,KAAKuC,OAAOgE,SAASrF,EAAIiP,EACzBnQ,KAAKuC,OAAOsD,sB,oBAGhB,SAAOtP,EAAehF,GAClByO,KAAKuC,OAAOyC,MAAQzO,EAAQ,EAC5ByJ,KAAKuC,OAAO0C,MAAQ1O,EAAQ,EAE5ByJ,KAAKuC,OAAO2C,IAAM3T,EAAS,EAC3ByO,KAAKuC,OAAO4C,QAAU5T,EAAS,EAE/ByO,KAAKuC,OAAO6B,6B,KAIPqM,GAAb,WAOI,WAAYX,GAA4B,0BANxCI,cAMuC,OALvCQ,iBAKuC,OAJvCC,kBAIuC,OAHvCne,aAGuC,OAFvCwV,SAEuC,EACnChI,KAAK0Q,YAAc,IAAIb,GAAoBC,GAC3C9P,KAAKkQ,SAAW,IAAI1B,GAAYxO,KAAK0Q,YAAYnO,OAAQuN,GACzD9P,KAAKxN,QAAUwN,KAAK0Q,YACpB1Q,KAAKxN,QAAQoe,OAAO5Q,KAAKkQ,UAXjC,qDAcI,SAAiBJ,EAA2B9H,GACxChI,KAAK2Q,aAAe,IAAIJ,GAAqBT,EAAQ9H,GACrDhI,KAAKgI,IAAMA,IAhBnB,oBAmBI,SAAO/I,EAAWqH,GACdtG,KAAK0Q,YAAYG,OAAO5R,EAAGqH,GACxBtG,KAAK2Q,cACJ3Q,KAAK2Q,aAAaE,OAAO5R,EAAGqH,KAtBxC,oBA0BI,SAAOwK,GAEH,IAAMC,EAAM/Q,KAAKkQ,SAASM,OAAOjK,SAASyK,QACpCC,GAAM,IAAI5F,MAAgBT,WAAWmG,EAAK/Q,KAAKkQ,SAAS9Q,QAC9D6R,EAAInO,YACJmO,EAAI7P,eAAsB,GAAP0P,GAGnB9Q,KAAKkQ,SAASM,OAAOjK,SAAS2K,IAAID,GACjCjR,KAAKkQ,SAASM,OAAepM,yBAE9BpE,KAAKxN,QAAQqJ,OAAOmE,KAAKkQ,YArCjC,qBAwCI,SAAQY,GAEJ,IAAMC,EAAM/Q,KAAKkQ,SAASM,OAAOjK,SAASyK,QACpCC,GAAM,IAAI5F,MAAgBT,WAAWmG,EAAK/Q,KAAKkQ,SAAS9Q,QAC9D6R,EAAInO,YACJmO,EAAI7P,eAAsB,GAAP0P,GAEnB9Q,KAAKkQ,SAASM,OAAOjK,SAASpC,IAAI8M,GACjCjR,KAAKkQ,SAASM,OAAepM,yBAE9BpE,KAAKxN,QAAQqJ,OAAOmE,KAAKkQ,YAlDjC,oBAqDI,WACIlQ,KAAKxN,QAAQqJ,OAAOmE,KAAKkQ,YAtDjC,oBAyDI,WACIlQ,KAAKxN,QAAQoe,OAAO5Q,KAAKkQ,YA1DjC,qBA6DI,WAGI,GAFoBlQ,KAAKxN,QAAQ+P,OAAe4O,qBAG5CnR,KAAKxN,QAAQ4e,QAAQpR,KAAKkQ,cACzB,CACD,IAAMC,EAAWnQ,KAAKkQ,SAAS9Q,OAAOuF,WAAW3E,KAAKkQ,SAASM,OAAOjK,UACtEvG,KAAKxN,QAAQ4e,QAAQpR,KAAKkQ,SAAUC,MApEhD,kBAwEI,WACI,OAAOnQ,KAAKxN,QAAQ+P,SAzE5B,kBA4EI,WACI,OAAOvC,KAAKkQ,SAAS9Q,SA7E7B,sBAgFI,WACSY,KAAK2Q,cAGN3Q,KAAKxN,UAAYwN,KAAK2Q,cAG1B3Q,KAAKqR,SAvFb,4BA0FI,WACQrR,KAAKxN,UAAYwN,KAAK0Q,aAG1B1Q,KAAKqR,SA9Fb,kBAiGI,WACSrR,KAAK2Q,cAAiB3Q,KAAKgI,MAGhChI,KAAKxN,QAAQ4e,QAAQpR,KAAKkQ,UAC1BlQ,KAAKxN,QAAUwN,KAAKxN,UAAYwN,KAAK0Q,YAAc1Q,KAAK2Q,aAAe3Q,KAAK0Q,YAC5E1Q,KAAKxN,QAAQoe,OAAO5Q,KAAKkQ,UAEzBlQ,KAAKgI,IAAIzF,OAASvC,KAAKxN,QAAQ+P,OAC/BvC,KAAKgI,IAAIrE,oBA1GjB,mBA6GI,SAAM2N,GACF,IAAMC,EAAcvR,KAAKxN,QAAQ+P,OAAe4O,qBAE5CI,GACAvR,KAAKqR,OAETrR,KAAKkQ,SAAS9Q,OAAS,IAAIiM,KAAciG,EAAWrS,EAAGqS,EAAWhL,EAAG,GACrEtG,KAAK0Q,YAAYnO,OAAOgE,SAAStH,EAAIqS,EAAWrS,EAChDe,KAAK0Q,YAAYnO,OAAOgE,SAASD,EAAIgL,EAAWhL,EAChDtG,KAAK0Q,YAAYnO,OAAOgE,SAASrF,EAAI,IAEjCqQ,GACAvR,KAAKqR,SAzHjB,uCA4HI,SAA0BpS,EAAWqH,GACjC,GAAKtG,KAAKxN,QAAQ+P,OAAe4O,qBACjC,CACI,IAAM5O,EAASvC,KAAKxN,QAAQ+P,OACtBiP,EAAS,IAAInG,KAMnB,OALAmG,EAAO5Q,IACF3B,EAAI8Q,OAAOC,WAAc,EAAI,GAC3B1J,EAAIyJ,OAAOE,YAAe,EAAI,GAC/B1N,EAAOrC,KAAOqC,EAAOnC,MAAUmC,EAAOrC,KAAOqC,EAAOnC,MAEnDoR,EAAOC,UAAWlP,QAtIrC,KCxFMmP,G,WAKF,WAAYne,EAAcoe,GAAyB,0BAJnDpe,UAIkD,OAHlDqe,aAGkD,OAFlDD,aAEkD,EAC9C3R,KAAKzM,KAAOA,EACZyM,KAAK4R,QAAU,EACf5R,KAAK2R,QAAUA,E,0CAGnB,WACI3R,KAAK4R,UACL5R,KAAK2R,QAAQ9V,W,kBAGjB,WACImE,KAAK4R,UACL5R,KAAK2R,QAAQ9V,W,sBAGjB,WACI,MAAM,GAAN,OAAUmE,KAAKzM,KAAf,aAAwByM,KAAK4R,QAA7B,gB,qBAGJ,WACI,OAAO5R,KAAK4R,QAAU,M,KAYjBC,GAAb,WAGI,aAAe,0BAFfC,aAEc,EACV9R,KAAK8R,QAAU,CACXC,gBAAiB,IAAIL,GAAO,mBAAoB1R,MAChDgS,gBAAiB,IAAIN,GAAO,mBAAoB1R,MAChDiS,cAAe,IAAIP,GAAO,iBAAkB1R,MAC5CkS,eAAgB,IAAIR,GAAO,kBAAmB1R,OAR1D,2CAYI,WACI,IAAMmS,EAAMC,SAASC,eAAe,iBACpC,GAAKF,EAAL,CAGA,IAAK,IAAIG,KAAUtS,KAAK8R,QACpB,GAAK9R,KAAK8R,QAAQQ,GAAmBC,UAAW,CAC5C,IAAM7c,EAASsK,KAAK8R,QAAQQ,GAAQE,WAEpC,YADAL,EAAIM,UAAY/c,GAKxByc,EAAIM,UAAY,cAzBxB,KCrCaC,GAAb,WAOI,WAAY1H,GAAqB,0BANjCA,cAMgC,OALhC2H,mBAKgC,OAJhCC,mBAIgC,OAHhCC,WAGgC,OAFhCC,WAEgC,EAC5B9S,KAAKgL,SAAWA,EAChBhL,KAAK2S,cAAgB,IAAItH,KAAc,EAAG,EAAG,GAC7CrL,KAAK4S,cAAgB,IAAIvH,KAAc,EAAG,GAC1CrL,KAAK6S,MAAQ,IAAIxH,KAAc,EAAG,GAClCrL,KAAK8S,MAAQ,EAZrB,2CAgBI,SAAOtd,GACHwK,KAAK2S,cAAcjS,KAAKV,KAAKgL,SAASkF,SAAS9Q,QAC/CY,KAAK2S,cAAczB,IAAIlR,KAAKgL,SAASkF,SAAS3N,OAAOgE,UACrDvG,KAAK2S,cAAc7P,YACnB9C,KAAK4S,cAAchS,IAAIZ,KAAK2S,cAAc1T,EAAGe,KAAK2S,cAAcrM,GAErB,IAAvCtG,KAAKgL,SAASkF,SAAS3N,OAAOmM,GAAGpI,EACjCtG,KAAK8S,MAAQ,GAEb9S,KAAK4S,cAAc9P,YACnB9C,KAAK8S,MAAQ9R,KAAK+R,KAAK/S,KAAK6S,MAAMG,IAAIhT,KAAK4S,gBACvC5S,KAAK4S,cAAc3T,EAAI,IACvBe,KAAK8S,OAAS9S,KAAK8S,QAIvBtd,GACAA,EAASwK,KAAK8S,WAjC1B,KCEaG,GAAb,WASI,WAAYjI,GAAqB,0BARjCA,cAQgC,OAPhCkI,eAOgC,OANhC9E,UAMgC,OALhC+E,WAKgC,OAJhCC,SAIgC,OAHhCC,UAGgC,OAFhCC,WAEgC,EAC5BtT,KAAKgL,SAAWA,EAChBhL,KAAKkT,UAAY,GACjBlT,KAAKoO,KAAO,MACZpO,KAAKmT,MAAQI,IACbvT,KAAKoT,KAAOG,IACZvT,KAAKqT,MAAO,EACZrT,KAAKsT,MAAQ,EAhBrB,gDAmBI,SAAYE,GACRxT,KAAKkT,UAAUxhB,KAAK8hB,GACpBxT,KAAKmT,MAAQnS,KAAKG,IAAInB,KAAKmT,MAAOK,EAASL,OAC3CnT,KAAKoT,IAAMpS,KAAK6D,IAAI7E,KAAKoT,IAAKI,EAASJ,OAtB/C,iBAyBI,WAAa,IAAD,iBACcpT,KAAKkT,WADnB,IACR,IAAI,EAAJ,sBACI,IADJ,QACkBO,MACV,OAAO,GAHP,8BAIR,OAAO,IA7Bf,kBAgCI,WACI,IAAMC,EAAS,EAAI,GAAM1T,KAAKsT,MAE1BtT,KAAKqT,MAAQrT,KAAKyT,QAClBzT,KAAKoO,MAAQsF,EACb1T,KAAKgL,SAAS2I,OAAOC,QAAQ5T,KAAKoO,MAClCpO,KAAKgL,SAAS6I,SAAU,GAG5B7T,KAAK0M,WAzCb,oBA4CI,WAAU,IAAD,iBACiB1M,KAAKkT,WADtB,IACL,IAAI,EAAJ,8BACaxG,OAAO1M,KAAKoO,OAFpB,8BAGLpO,KAAKgL,SAAS6I,SAAU,MA/ChC,M,SLDK/G,O,uBAAAA,I,mBAAAA,I,kCAAAA,Q,KAyDE,IMxDKgH,GNwDCC,GAAb,WAYI,WAAY/I,GAAqB,0BAVjCA,cAUgC,OAThCtV,OAAgBoX,GAAMkH,SASU,KARhCC,UAQgC,OAPhCC,UAOgC,OANhCC,YAMgC,EAC5BnU,KAAKgL,SAAWA,EAChB,IAAMvB,EAjEd,SAAiBlT,EAAehF,EAAgB6iB,GAC5C7d,GAAgB,GAChBhF,GAAkB,GAClB6iB,GAAgB,GAEhB,IAAM3K,EAAW,IAAI4B,KACf9E,EAAW,GAyCjB,OAvCAA,EAAS7U,MACH6E,GAAShF,GAAU6iB,GACnB7d,EAAOhF,GAAU6iB,GAEjB7d,EAAOhF,GAAU6iB,EACnB7d,EAAOhF,GAAU6iB,EAEjB7d,EAAOhF,GAAU6iB,EACjB7d,GAAShF,GAAU6iB,EAEnB7d,GAAShF,GAAU6iB,GACjB7d,GAAShF,GAAU6iB,GAEnB7d,GAAShF,EAAQ6iB,GACjB7d,EAAOhF,EAAQ6iB,GAEf7d,EAAOhF,EAAQ6iB,EACjB7d,EAAOhF,EAAQ6iB,EAEf7d,EAAOhF,EAAQ6iB,EACf7d,GAAShF,EAAQ6iB,EAEjB7d,GAAShF,EAAQ6iB,GACf7d,GAAShF,EAAQ6iB,GAEjB7d,GAAShF,GAAU6iB,GACnB7d,GAAShF,EAAQ6iB,GAEjB7d,EAAOhF,GAAU6iB,GACjB7d,EAAOhF,EAAQ6iB,EAEjB7d,EAAOhF,GAAU6iB,EACjB7d,EAAOhF,EAAQ6iB,EAEf7d,GAAShF,GAAU6iB,EACnB7d,GAAShF,EAAQ6iB,GAGrB3K,EAASb,aAAc,WAAY,IAAIyC,KAA8B9E,EAAU,IACxEkD,EAkBc4K,CAAQ,EAAG,EAAG,GACzB7N,EAAW,IAAI6E,KAA0B,CAC3CrT,MAAO,EACPsc,SAAU,EAAGC,QAAS,IAG1BvU,KAAKiU,KAAO,IAAI5I,KAAoB5B,EAAUjD,GAC9CxG,KAAKgL,SAASkB,MAAM/H,IAAKnE,KAAKiU,MAC9BjU,KAAKkU,KAAO,GACZlU,KAAKiU,KAAK1K,SAAU,EAvB5B,2CA0BI,SAAOtK,EAAWqH,GACd,IAAMzF,EAAIb,KAAKgL,SAASkF,SAASsE,0BAA0BvV,EAAGqH,GAC9D,GAAKzF,EAQL,OALAb,KAAKkU,KAAKxiB,KAAK,IAAI2Z,KAAcxK,EAAE5B,EAAG4B,EAAEyF,IAExCtG,KAAKiU,KAAK1K,SAAU,EACpBvJ,KAAKgL,SAAS6I,SAAU,EAEpB7T,KAAKkU,KAAKre,OAAS,EACZmK,KAAKyU,SAAS5T,GAEdb,KAAK0U,kBAvCxB,2BA0CI,WACI,IAAMtB,EAAqBpT,KAAKkU,KAAKrK,MAC/B8K,EAAqB3U,KAAKkU,KAAK,GAAGlD,QAClCmC,EAAQ,IAAI9H,KAAc+H,EAAInU,EAAGmU,EAAI9M,GAE3C6M,EAAMhS,IAAIwT,GACVvB,EAAIvO,IAAI8P,GACRA,EAAIjU,KAAK0S,GAAKlC,IAAIiC,GAElBnT,KAAKiU,KAAKrK,MAAMhJ,IAAI+T,EAAI1V,EAAG0V,EAAIrO,EAAG,KAClCtG,KAAKiU,KAAK1N,SAAS3F,IAAIuS,EAAMlU,EAAY,GAAR0V,EAAI1V,EAASkU,EAAM7M,EAAY,GAARqO,EAAIrO,EAAS,GACrEtG,KAAKiU,KAAKpO,oBACV7F,KAAKmU,OAAS,CACVhB,MAAO,CAACA,EAAMlU,EAAGkU,EAAM7M,GACvB8M,IAAK,CAACA,EAAInU,EAAGmU,EAAI9M,GACjB/O,KAAM,CAACod,EAAI1V,EAAG0V,EAAIrO,MAzD9B,sBA6DI,SAAiBzF,GACbb,KAAKiU,KAAK1N,SAAStH,EAAI4B,EAAE5B,EACzBe,KAAKiU,KAAK1N,SAASD,EAAIzF,EAAEyF,EACzBtG,KAAKiU,KAAK1N,SAASrF,EAAI,EACvBlB,KAAKiU,KAAKrK,MAAMhJ,IAAI,EAAG,EAAG,KAC1BZ,KAAKiU,KAAKpO,sBAlElB,mBAqEI,WACI7F,KAAKkU,KAAO,GACZlU,KAAKiU,KAAK1K,SAAU,EACpBvJ,KAAKgL,SAAS6I,SAAU,EACxB7T,KAAKmU,YAASpZ,MAzEtB,KO/Ca6Z,GAAb,WAyBI,WAAY9E,EAA2B+E,GAA+B,0BAxBtE/E,YAwBqE,OAvBrE5D,WAuBqE,OAtBrE4I,kBAsBqE,OArBrE9J,cAqBqE,OAnBrEkF,cAmBqE,OAlBrE6E,YAkBqE,OAjBrEpB,YAiBqE,OAhBrE3L,SAgBqE,OAfrEgN,YAeqE,OAdrEC,YAcqE,OAZrEC,YAYqE,OAXrEC,YAWqE,OAVrEtB,aAUqE,OARrEuB,eAAgB,EAQqD,KAPrEP,gBAOqE,OANrEnf,YAMqE,OAHrE8d,cAGqE,OAFrE6B,cAEqE,EACjErV,KAAK8P,OAASA,EACd9P,KAAK6U,WAAaA,EAClB7U,KAAKtK,OAAS,IAAImc,GAGlB7R,KAAKkM,MAAQ,IAAIb,KACjBrL,KAAK8U,aAAe,IAAIzJ,KACxBrL,KAAKkQ,SAAW,IAAIO,GAAezQ,KAAK8P,QACxC9P,KAAKgL,SAAW,IAAIK,KAAoB,CAAEyE,OAAQ9P,KAAK8P,OAAQwF,WAAW,IAC1EtV,KAAKuV,gBACLvV,KAAKwV,wBACLxV,KAAKkQ,SAASuF,iBAAiBzV,KAAK8P,OAAQ9P,KAAKgI,KACjDhI,KAAKkQ,SAASwF,WAGd1V,KAAKiV,OAAS,IAAIvC,GAAO1S,MAGzBA,KAAK2T,OAAS,IAAI5G,GAAgB/M,KAAKgI,KAGvChI,KAAK+U,OAAS,IAAIhK,GAAc/K,KAAKgL,UACrChL,KAAK6T,SAAU,EAGf7T,KAAKwT,SAAW,IAAIP,GAAajT,MAGjCA,KAAKqV,SAAW,IAAItB,GAAS/T,MAtDrC,0DAsEI,WACI,IAAM2V,EAAa,IAAItK,KAAsB,SAAU,QAAU,IACjEsK,EAAWpP,SAAS3F,IAAI,EAAG,EAAG,GAC9BZ,KAAKkM,MAAM/H,IAAIwR,GACf3V,KAAKkM,MAAM/H,IAAI,IAAIkH,KAAmB,SAAU,KAEhDrL,KAAKgI,IAAM,IAAI1F,GAAI,CACfc,MAAM,EACNV,KAAM,YACND,SAAU,EACVG,WAAY,EAAE,MAAS,MAAQ,MAAQ,MACvCD,cAAe,KACfE,eAAgB,IAAIwI,MAAe,GAAI,GAAI,GAAGvI,YAC9CP,OAAQvC,KAAKkQ,SAAS3N,OACtBC,OAAQxC,KAAKkM,MACblJ,UAAW,EACXC,SAAU,IACV1C,OAAQ,IACRqV,OAAQ,EACR7S,eAAgB,GAChB8S,kBAAkB,IAGtB7V,KAAKgV,OAAS,IAAIjN,GAAU/H,KAAKgI,KACjChI,KAAKgV,OAAOzL,SAAU,EACtBvJ,KAAKkM,MAAM/H,IAAInE,KAAKgV,QACpBhV,KAAKgV,OAAOnZ,WAhGpB,2BAmGI,WAAyB,IAAD,OACpBmE,KAAKgL,SAAS8K,cAAc/F,OAAOgG,kBACnC/V,KAAKgL,SAASgL,UAAUC,SAAU,EAClCjW,KAAKgL,SAASgL,UAAUE,YAAa,EACrClW,KAAKgL,SAASgL,UAAUxf,KAAO6U,KAG/BrL,KAAKgL,SAASmL,cAAc,SAC5BnW,KAAKgL,SAASoL,QAAQrG,OAAOC,WAAYD,OAAOE,aAChDjQ,KAAKgL,SAASqL,kBAAiB,kBAAM,EAAKC,aA5GlD,2BA+GI,WACItW,KAAKoV,eAAgB,EACrBpV,KAAK6T,SAAU,EACfxd,QAAQoI,IAAI,qBAlHpB,4BAqHI,WAII,IAAIoF,EAHJ7D,KAAKoV,eAAgB,EACrBpV,KAAK6T,SAAU,EAFF,qBAKA7T,KAAKgI,IAAIzE,QALT,IAKb,IAAI,EAAJ,qBACA,CADIM,EACJ,QACI,IAAMzE,EAASY,KAAKgL,SAASuL,kBACzB1S,EAAMG,QAAUH,EAAMG,OAAO7S,MAG7B6O,KAAKgL,SAASyB,gBAAiB5I,EAAMG,OAAO7S,KAC5C6O,KAAKgL,SAASlD,SAElB9H,KAAKgL,SAASyB,gBAAgBrN,IAdrB,8BAiBb/I,QAAQoI,IAAI,sBAtIpB,mBAyII,WACIuB,KAAK6U,aACL7U,KAAKwT,SAASgD,OACdxW,KAAKkQ,SAASrU,SAEVmE,KAAK6T,UACL7T,KAAKgI,IAAInM,SACLmE,KAAKoV,gBACLpV,KAAKgL,SAASgL,UAAU1O,aAAc,GAG1CtH,KAAKgL,SAAS0B,OAAO1M,KAAKkM,MAAOlM,KAAKkQ,SAAS3N,SAQnDvC,KAAK6T,SAAU,IA5JvB,mBA+JI,SAAM5U,EAAWqH,GACb,IAAMvN,EAAKiH,KAAK+U,OAAO0B,KAAKxX,EAAGqH,EAAGtG,KAAK8U,aAAc9U,KAAKkQ,SAAS3N,QACnE,OAAOvC,KAAK0W,OAAO3d,KAjK3B,oBAoKI,SAAO4S,GACC3L,KAAK+U,OAAOhc,KAAO4S,GACnB3L,KAAK+U,OAAO2B,OAAO/K,GAEvB,IAAMjM,EAAWM,KAAK+U,OAAO4B,iBAAiBhL,GAS9C,OARAtV,QAAQoI,IAAIiB,EAAUM,KAAK+U,OAAOrV,UAE9BA,EACAM,KAAK2T,OAAOiD,cAAc5W,KAAK+U,OAAOrV,UAEtCM,KAAK2T,OAAOiD,cAAc,EAAE,GAAI,GAAI,GAAI,IAE5C5W,KAAK6T,SAAU,EACRnU,IAjLf,0BAoLI,SAAanI,GACTyI,KAAK2T,OAAOkD,aAAatf,GACzByI,KAAK6T,SAAU,IAtLvB,0BAyLI,SAAatc,GACTyI,KAAK2T,OAAOmD,aAAavf,GACzByI,KAAK6T,SAAU,IA3LvB,0BA8LI,WACI7T,KAAKgV,OAAOnZ,SACZmE,KAAKoV,eAAgB,EACrBpV,KAAK6T,SAAU,IAjMvB,oBAoMI,SAAO5U,EAAWqH,GACdtG,KAAKkQ,SAASW,OAAO5R,EAAGqH,GACxBtG,KAAKgL,SAASoL,QAAQnX,EAAGqH,GACzBtG,KAAK6T,SAAU,MAvMvB,K,2BCTakD,GAAb,sGACI,SAAuB9lB,EAAe+lB,EAAyBxhB,GAC3D,IAAI8L,EAAI,EAAGE,EAAI,EACTsP,EAAO,KACPjb,EAASmL,KAAKqF,MAAOpV,EAAK4E,OAAS,GAAM,GAC3CmW,EAAS,IAAIzD,aAAa1S,GAsB9BkG,YApBa,SAAPkb,IAIF,IAHA,IAAMC,EAAIC,KAAKlmB,EAAKmmB,OAAO9V,EAAGwP,IACxBuG,EAAI,IAAItL,SAAST,WAAWgM,KAAKJ,GAAG,SAAAK,GAAC,OAAIA,EAAEC,WAAW,MAAIxL,QAExDyL,EAAI,EAAGA,EAAIJ,EAAEK,WAAYD,GAAK,EAClCzL,EAAOxK,KAAO6V,EAAEM,WAAWF,GAAG,GAE9BT,OAGJ1V,GAAKwP,IACI7f,EAAK4E,QAEVL,EAASwW,GACTA,EAAS,MAGTjQ,WAAWkb,EAAM,OAGR,MA3BzB,2BA8BI,SAAqBhmB,GAAwF,IAA1E2mB,EAAyE,uDAAxD,EAAGZ,EAAqD,uCAA5BxhB,EAA4B,uCACpG8L,EAAI,EAAGE,EAAI,EACTsP,EAAO,KACPjb,EAASmL,KAAKqF,MAAOpV,EAAK4E,OAAS,GAAM,GAC3CmW,EAAS,IAAI6L,WAAWhiB,GAEtBohB,EAAO,SAAPA,IAIF,IAHA,IAAMC,EAAIC,KAAKlmB,EAAKmmB,OAAO9V,EAAGwP,IACxBuG,EAAI,IAAItL,SAAST,WAAWgM,KAAKJ,GAAG,SAAAK,GAAC,OAAIA,EAAEC,WAAW,MAAIxL,QAExDyL,EAAI,EAAGA,EAAIJ,EAAEK,WAAYD,GAAK,EAClCzL,EAAOxK,KAAO6V,EAAES,SAASL,GAAG,GAAQG,EAEpCZ,OAGJ1V,GAAKwP,IACI7f,EAAK4E,QAEVL,EAAS,IAAI8V,WAAWU,EAAOA,SAC/BA,EAAS,MAGTjQ,WAAWkb,EAAM,MAGzBlb,WAAWkb,EAAM,MAxDzB,2BA2DI,SAAqBhmB,EAAcuE,GAC/B,IAAI8L,EAAI,EAAGE,EAAI,EAET3L,EAASmL,KAAKqF,MAAOpV,EAAK4E,OAAS,EAAK,GAC1CmW,EAAS,IAAIV,WAAWzV,GAoB5BkG,YAlBa,SAAPkb,IAIF,IAHA,IAAMC,EAAIC,KAAKlmB,EAAKmmB,OAAO9V,EALlB,MAMH+V,EAAI/L,WAAWgM,KAAKJ,GAAG,SAAAK,GAAC,OAAIA,EAAEC,WAAW,MAEvCC,EAAI,EAAGA,EAAIJ,EAAExhB,OAAQ4hB,IACzBzL,EAAOxK,KAAO6V,EAAEI,IAGpBnW,GAZS,MAaArQ,EAAK4E,QAEVL,EAASwW,GACTA,EAAS,MAGTjQ,WAAWkb,EAAM,MAGR,QAnFzB,KCDac,GAAb,WAGI,WAAY1f,GAAyE,IAAD,OAAlD7C,EAAkD,uDAAV,aAAU,0BAFpF6C,YAEoF,EAChF2H,KAAK3H,OAASA,GAAU,GAEpB2H,KAAK3H,OAAO2T,QACZ+K,GAAQiB,cAAchY,KAAK3H,OAAO2T,QAAkB,SAACA,GACjD,EAAK3T,OAAO2T,OAASA,EACrBxW,EAAS,MAIbwK,KAAK3H,OAAO4f,eAAiBjY,KAAK3H,OAAO6f,eACzCnB,GAAQiB,cAAchY,KAAK3H,OAAO4f,eAAyB,SAACjM,GACxD,EAAK3T,OAAO4f,cAAgBjM,EAC5B+K,GAAQiB,cAAc,EAAK3f,OAAO6f,eAAyB,SAAClM,GACxD,EAAK3T,OAAO6f,cAAgBlM,EAC5BxW,EAAS,SAlB7B,2CAwBI,WACI,OAAIwK,KAAK3H,OAAO8f,UACLnY,KAAK3H,OAAO8f,WA1B/B,mBA+BI,WACI,OAAInY,KAAK3H,OAAOkR,SACLvJ,KAAK3H,OAAOkR,UAjC/B,wBAsCI,WACI,GAAIvJ,KAAK3H,OAAO2T,OACZ,OAAOhM,KAAK3H,OAAO2T,OACvB,MAAM,IAAIR,MAAM,uBAzCxB,+BA4CI,WACI,GAAIxL,KAAK3H,OAAO6f,cACZ,OAAOlY,KAAK3H,OAAO6f,cACvB,MAAM,IAAI1M,MAAM,8BA/CxB,+BAkDI,WACI,GAAIxL,KAAK3H,OAAO4f,cACZ,OAAOjY,KAAK3H,OAAO4f,cACvB,MAAM,IAAIzM,MAAM,gCArDxB,KA4DO,SAASxT,GAAMogB,EAAoBC,EAAkBrM,EAAoBsM,EAAmB9iB,GAC/F,IAAI+hB,EAAI,CACJjW,EAAG,EACHiX,GAAI,EACJC,GAAI,EACJC,WAAYJ,EAAKxiB,OAASgW,YAAY6M,kBACtCC,KAAM,IAAI5M,SAASsM,EAAKrM,SA2B5BjQ,YAvBkB,SAAZ6c,IAMF,IALA,IAIIjN,EAHEkN,EADS,IACGtB,EAAEiB,GACdM,EAAO9X,KAAKG,IAAI0X,EAAWtB,EAAEkB,YAG5BlB,EAAEjW,EAAIwX,EAAMvB,EAAEjW,IACjBqK,EAAmF,GAA5E4L,EAAEoB,KAAK9L,UAAU0K,EAAEjW,EAAIuK,YAAY6M,mBAAmB,GAAQN,GACrEE,EAAaf,EAAEgB,MAAQvM,EAAOL,GAC9B2M,EAAaf,EAAEgB,MAAQvM,EAAOL,EAAM,GACpC2M,EAAaf,EAAEgB,MAAQvM,EAAOL,EAAM,GAGpC4L,EAAEjW,EAAIiW,EAAEkB,YACRlB,EAAEiB,KACFzc,WAAW6c,EAAW,KAEtBpjB,IACA+hB,EAAI,QAKU,GAGnB,SAASwB,GAAcC,EAAoBV,EAAmB9iB,GACjE,IAAI+hB,EAAI,CACJjW,EAAG,EACHiX,GAAI,EACJC,GAAI,EACJC,WAAYO,GAuBhBjd,YApBkB,SAAZ6c,IAKF,IAJA,IACMC,EADS,IACGtB,EAAEiB,GAAclN,WAAWoN,kBACvCI,EAAO9X,KAAKG,IAAI0X,EAAWtB,EAAEkB,YAE5BlB,EAAEjW,EAAIwX,EAAMvB,EAAEjW,IACjBgX,EAAaf,EAAEgB,MAAQ,IACvBD,EAAaf,EAAEgB,MAAQ,IACvBD,EAAaf,EAAEgB,MAAQ,IAGvBhB,EAAEjW,EAAIiW,EAAEkB,YACRlB,EAAEiB,KACFzc,WAAW6c,EAAW,KAEtBpjB,IACA+hB,EAAI,QAIU,I,SH3HdzD,O,mBAAAA,I,mBAAAA,I,oBAAAA,Q,KAML,IIFKmF,GJECC,GAAb,WAMI,WAAYlO,GAAqB,0BALjCA,cAKgC,OAJhCmO,UAIgC,OAHhCC,iBAGgC,OAFxBC,gBAEwB,EAC5BrZ,KAAKgL,SAAWA,EAChBhL,KAAKqZ,YAAa,EAR1B,0CAWI,SAAYxY,GACRb,KAAKqZ,WAAaxY,EACdb,KAAKmZ,OACLnZ,KAAKmZ,KAAK5P,QAAU1I,GAEpBb,KAAKoZ,cACLpZ,KAAKoZ,YAAY7P,QAAU1I,KAjBvC,oBAqBI,WACIb,KAAKmZ,KAAOnZ,KAAKsZ,WAAWtZ,KAAKmZ,KAAMnZ,KAAKgL,SAASkB,OACrDlM,KAAKoZ,YAAcpZ,KAAKsZ,WAAWtZ,KAAKoZ,YAAapZ,KAAKgL,SAAS8J,gBAvB3E,wBA0BI,SAAWqE,EAAmDjN,GACtDiN,IACAjN,EAAMrE,OAAOsR,GACbA,EAAK1P,SAAS8P,aA7B1B,wBAkCI,SAAWC,GAEP,IADA,IAAMC,EAAS,IAAInO,WAAWkO,GACrBlY,EAAI,EAAGA,EAAIkY,EAAiBlY,IACjCmY,EAAOnY,GAAK,IAChB,OAAOmY,IAtCf,6BAyCI,WACIzZ,KAAKgL,SAAStV,OAAOoc,QAAQI,eAAe4G,OACxC9Y,KAAKmZ,OAELnZ,KAAKmZ,KAAK1P,SAASiQ,WAAW1hB,MAAMsP,aAAc,EAClDtH,KAAKgL,SAAS6I,SAAU,KA9CpC,wBAkDI,SAAW+D,EAAgB/iB,EAAoB2B,GAC3C,GAAKwJ,KAAKmZ,MAASnZ,KAAKmZ,KAAK1P,SAASiQ,WAAWC,SAAjD,CAGA3Z,KAAKgL,SAAStV,OAAOoc,QAAQI,eAAeiB,QAC5C,IAAMkF,EAAOrY,KAAKmZ,KAAK1P,SAASiQ,WAAWC,SAASC,MAC9CC,EAAM7Z,KAAKmZ,KAAK1P,SAASiQ,WAAW1hB,MAAM4hB,MAE5C/kB,EACAmD,GAAM4f,EAAQS,EAAoBxjB,EAAMilB,aAAcD,EAAK7Z,KAAK+Z,gBAAgBC,KAAKha,OAErF+Y,GAAcV,EAAKxiB,OAAQgkB,EAAK7Z,KAAK+Z,gBAAgBC,KAAKha,YA7DtE,KAmEaia,GAAb,oKACI,SAAWrC,EAAgB/iB,GAAqD,IAAjC2B,EAAgC,uDAAhBsd,GAAQ3U,OACnE,GAAKa,KAAKmZ,MAASnZ,KAAKmZ,KAAK1P,SAASiQ,WAAWC,SAAjD,CAGA3Z,KAAKgL,SAAStV,OAAOoc,QAAQI,eAAeiB,QAC5C,IAAMkF,EAAOrY,KAAKmZ,KAAK1P,SAASiQ,WAAWC,SAASC,MAC9CC,EAAM7Z,KAAKmZ,KAAK1P,SAASiQ,WAAW1hB,MAAM4hB,MAE5C/kB,EACI2B,IAASsd,GAAQ3U,OACjBnH,GAAM4f,EAAQS,EAAoBxjB,EAAMqlB,oBAAqBL,EAAK7Z,KAAK+Z,gBAAgBC,KAAKha,OAE5FhI,GAAM4f,EAAQS,EAAoBxjB,EAAMslB,oBAAqBN,EAAK7Z,KAAK+Z,gBAAgBC,KAAKha,OAEhG+Y,GAAcV,EAAKxiB,OAAQgkB,EAAK7Z,KAAK+Z,gBAAgBC,KAAKha,YAftE,GAAgCkZ,K,SIrEpBD,O,qBAAAA,I,iBAAAA,I,kBAAAA,Q,KASL,IAAMlC,GAAU,WAqBnBqD,KAAKC,UAAY,SAACC,GACd,IAAMrpB,EAAOqpB,EAAQrpB,KACfD,EAAgB,CAClBupB,MAAOtpB,EAAKspB,MACZC,MAAOvpB,EAAKupB,OAGhB,OAAQvpB,EAAKA,KAAKwpB,UACd,KAAK,EACDzpB,EAASgb,OA7BG,SAAC/a,GACrB,IAAMimB,EAAIC,KAAKlmB,GAEf,OADe,IAAIsX,aAAa+C,WAAWgM,KAAKJ,GAAG,SAAAK,GAAC,OAAIA,EAAEC,WAAW,MAAIxL,QA2B/C0O,CAAgBzpB,EAAKA,KAAK+a,QAC5C,MACJ,KAAK,EACDhb,EAASgb,OA1BC,SAAC/a,EAAc2mB,GACjC,IAAMV,EAAIC,KAAKlmB,GACT+a,EAAS,IAAI6L,WAAWvM,WAAWgM,KAAKJ,GAAG,SAAAK,GAAC,OAAIA,EAAEC,WAAW,MAAIxL,QAEvE,OADAA,EAAOhR,SAAQ,SAACzI,EAAOlB,GAAR,OAAkB2a,EAAO3a,GAASkB,EAAQqlB,KAClD,IAAItM,WAAWU,EAAOA,QAsBH2O,CAAc1pB,EAAKA,KAAK+a,OAAQ/a,EAAKA,KAAK2mB,QAC5D,MACJ,KAAK,EACD5mB,EAASgb,OAtBC,SAAC/a,GACnB,IAAMimB,EAAIC,KAAKlmB,GAEf,OADeqa,WAAWgM,KAAKJ,GAAG,SAAAK,GAAC,OAAIA,EAAEC,WAAW,MAoB1BQ,CAAc/mB,EAAKA,KAAK+a,QAIlD4O,YAAY5pB,KAmBP6pB,GAAb,WAQI,aACC,IAAD,iCAPQC,aAOR,OANQC,iBAMR,OALQC,WAKR,OAJQC,YAIR,OAHQC,eAGR,EACIlb,KAAK8a,QAAU,GACf9a,KAAK+a,YAAc,GACnB/a,KAAKib,OAAS,EACdjb,KAAKkb,UAAY,IAAIzX,IAErB,IANJ,eAMYnC,GAEJ,EAAKwZ,QAAQppB,KA5FlB,SAAqBypB,GACxB,IAAMC,EAAOD,EAAO3I,WACd6I,EAAO,IAAIC,KAAK,CAAC,IAAD,OAAKF,EAAL,SACtB,OAAO,IAAIG,OAAOC,IAAIC,gBAAgBJ,IAyFZK,CAAY3E,KAC9B,EAAKgE,YAAYrpB,MAAK,GAEtB,EAAKopB,QAAQxZ,GAAG+Y,UAAY,SAACC,GACzB,IAAOrpB,EAAQqpB,EAARrpB,KACA+a,EAAwB/a,EAAxB+a,OAAQuO,EAAgBtpB,EAAhBspB,MAAOC,EAASvpB,EAATupB,MAEhBmB,EAAM,EAAKT,UAAUpqB,IAAIypB,GAC1BoB,IAELA,EAAI1qB,KAAKupB,GAASxO,EAClB2P,EAAIC,WAEAD,EAAIC,WAAaD,EAAIE,WAErBF,EAAInmB,SAAJ,MAAAmmB,EAAG,aAAaA,EAAI1qB,OACpB,EAAKiqB,UAAUY,OAAOvB,IAG1B,EAAKQ,YAAYzZ,IAAK,EACtB,EAAKlP,YAtBLkP,EAAI,EAAGA,EA9BN,KA8BsBA,EAC9B,EADOA,GAyBRtB,KAAKgb,MAAQ,GAxCrB,yCAgDI,WACI,IAAK,IAAI1Z,EAAI,EAAGA,EAhEP,KAgEuBA,EAC5B,IAAKtB,KAAK+a,YAAYzZ,GAClB,OAAOA,IAnDvB,qBAwDI,SAAQrQ,EAAauE,GAEjB,IAAM+kB,EAAQva,KAAKib,SACnBjb,KAAKkb,UAAUta,IAAI2Z,EAAO,CACtBtpB,KAAM8qB,MAAMC,MAAM,KAAMD,MAAM9qB,EAAK4E,SAAS1E,KAAI,eAChDyqB,SAAU,EACVC,SAAU5qB,EAAK4E,OACfL,SAAUA,IAGd,IAAI,IAAI8L,EAAI,EAAGA,EAAIrQ,EAAK4E,SAAUyL,EAC9BtB,KAAKgb,MAAMtpB,KAAK,CAACT,KAAMA,EAAKqQ,GAAIiZ,MAAOA,EAAOC,MAAOlZ,IAEzDtB,KAAK5N,WArEb,oBAwEI,WACI,IAAMkP,EAAItB,KAAKmb,OACf,QAAUpgB,IAANuG,EAAJ,CAGA,IAAM/D,EAAMyC,KAAKgb,MAAMiB,QAClB1e,IAGLyC,KAAK+a,YAAYzZ,IAAK,EACtBtB,KAAK8a,QAAQxZ,GAAGsZ,YAAYrd,QAlFpC,qBA2CI,WAEI,OAAOyC,KAAKkc,YAAclc,KAAKkc,UAAY,IAAIlc,UA7CvD,KAAa6a,GACMqB,e,ECpEZ,IAAMC,GAAb,oDACI,WAAYlrB,EAAcmrB,EAAY5mB,EAA4BwhB,GAA0B,IAAD,uBACvF,cAAMoF,EAAKpR,UACX,IAAM4M,EAASwE,EAAKpR,SAAS+J,OAAOsH,eAAeD,EAAKtlB,MAAMvD,MAFyB,OAIvFsnB,GAASyB,SAASC,QACd,CAAC,CACG9B,SAAUxB,GAAiBuD,QAC3BxQ,OAAQ/a,EAAKgP,UACd,CACCwa,SAAUxB,GAAiBwD,MAC3BzQ,OAAQ/a,EAAKyoB,WAAW/N,IAAI1a,KAC5B2mB,OAAQA,KACR,SAAC3X,EAAwByc,GACzB,EAAKC,KAAK1c,EAAUyc,EAAUN,GAC9B5mB,EAAS,oBAdsE,EAD/F,yCAmBI,SAAayK,EAAwByc,EAAsBN,GACvD,IAAM3S,EAAWzJ,KAAK4c,eAAe3c,EAAUyc,GAC/C1c,KAAK6c,WAAWpT,GAChBzJ,KAAK8c,kBAAkBrT,GACvBzJ,KAAKuJ,QAAU6S,EAAK7S,QACpBvJ,KAAKgL,SAAS6I,SAAU,IAxBhC,+BA4BI,SAA0BpK,GACtB,IAAM2P,EAAc,IAAI/N,KAAW5B,EAAUzJ,KAAKgL,SAAS2I,OAAOvG,wBAClEpN,KAAKgL,SAAS8J,aAAa3Q,IAAIiV,GAC/BpZ,KAAKoZ,YAAcA,IA/B3B,wBAkCI,SAAmB3P,GACf,IAAMjD,EAAWxG,KAAKgL,SAAS2I,OAAO3G,gBAChCmM,EAAO,IAAI9N,KAAW5B,EAAUjD,GACtC2S,EAAK4D,eAAgB,EACrB5D,EAAKpV,YAAa,EAClB/D,KAAKgL,SAASkB,MAAM/H,IAAIgV,GACxBnZ,KAAKmZ,KAAOA,IAxCpB,4BA2CI,SAAuBlZ,EAAwByc,GAC3C,IAAMjT,EAAW,IAAI4B,KAKrB,OAJA5B,EAASb,aAAa,WAAY,IAAIyC,KAAsBpL,EAAU,IACtEwJ,EAASb,aAAa,WAAY,IAAIyC,KAAsBqR,EAAU,GAAG,IACzEjT,EAASb,aAAa,QAAS,IAAIyC,KAAsBrL,KAAKgd,WAAW/c,EAASpK,QAAS,GAAG,IAC9F4T,EAASwT,uBACFxT,MAjDf,GAAoCyP,IAsDvBgE,GAAb,oDACI,WAAYjsB,EAAcmrB,EAAY5mB,EAA4BwhB,GAA0B,IAAD,uBACvF,cAAMoF,EAAKpR,UACX,IAAMmS,EAAgBf,EAAKpR,SAAS+J,OAAOsH,eAAgBD,EAAKtlB,MAAkBqI,QAFK,OAKvF0b,GAASyB,SAASC,QAAQ,CAAC,CACnB9B,SAAUxB,GAAiBuD,QAC3BxQ,OAAQ/a,EAAKgP,UACd,CACCwa,SAAUxB,GAAiBwD,MAC3BzQ,OAAQ/a,EAAKyoB,WAAW0D,WAAWnsB,KACnC2mB,OAAQuF,KACR,SAACld,EAAwByc,GACzB,EAAKC,KAAK1c,EAAUyc,EAAUN,GAC9B5mB,EAAS,oBAdsE,EAD/F,yCAmBI,SAAayK,EAAwByc,EAAsBN,GACvD,IAAM3S,EAAWzJ,KAAK4c,eAAe3c,EAAUyc,GAC/C1c,KAAK6c,WAAWpT,GAChBzJ,KAAK8c,kBAAkBrT,GACvBzJ,KAAKuJ,QAAU6S,EAAK7S,QACpBvJ,KAAKgL,SAAS6I,SAAU,IAxBhC,+BA4BI,SAA0BpK,GACtB,IAAM2P,EAAc,IAAI/N,KAAW5B,EAAUzJ,KAAKgL,SAAS2I,OAAOvG,wBAClEpN,KAAKgL,SAAS8J,aAAa3Q,IAAIiV,GAC/BpZ,KAAKoZ,YAAcA,IA/B3B,wBAkCI,SAAmB3P,GACf,IAAMjD,EAAWxG,KAAKgL,SAAS2I,OAAO3G,gBAChCmM,EAAO,IAAI9N,KAAW5B,EAAUjD,GACtC2S,EAAK4D,eAAgB,EACrB5D,EAAKpV,YAAa,EAClB/D,KAAKgL,SAASkB,MAAM/H,IAAIgV,GACxBnZ,KAAKmZ,KAAOA,IAxCpB,4BA2CI,SAAuBlZ,EAAwByc,GAC3C,IAAMjT,EAAW,IAAI4B,KAKrB,OAJA5B,EAASb,aAAa,WAAY,IAAIyC,KAAsBpL,EAAU,IACtEwJ,EAASb,aAAa,WAAY,IAAIyC,KAAsBqR,EAAU,GAAG,IACzEjT,EAASb,aAAa,QAAS,IAAIyC,KAAsBrL,KAAKgd,WAAW/c,EAASpK,QAAS,GAAG,IAC9F4T,EAASwT,uBACFxT,MAjDf,GAAyCwQ,IC9DzC,SAASoD,GAAQC,GAKb,IAJA,IAAIrd,EAAW,GACTgc,EAAQjb,KAAK2O,GAAK,EAClBmB,EAAO9P,KAAK2O,GAAK2N,EAEdhc,EAAI,EAAGA,EAAIgc,IAAchc,EAC9BrB,EAASvO,KAAK,EAAG,EAAG,GACpBuO,EAASvO,KAAKsP,KAAKuc,IAAItB,EAAQnL,EAAOxP,GAAIN,KAAKwc,IAAIvB,EAAQnL,EAAOxP,GAAI,GACtErB,EAASvO,KAAKsP,KAAKuc,IAAItB,EAAQnL,GAAQxP,EAAI,IAAKN,KAAKwc,IAAIvB,EAAQnL,GAAQxP,EAAI,IAAK,GAItF,OAAOrB,EAGX,SAASwd,GAASH,GAKd,IAJA,IAAIrd,EAAW,GACTgc,EAAQjb,KAAK2O,GAAK,EAClBmB,EAAO9P,KAAK2O,GAAK2N,EAEdhc,EAAI,EAAGA,EAAIgc,IAAchc,EAC9BrB,EAASvO,KAAK,EAAG,EAAG,GACpBuO,EAASvO,KAAK,EAAIsP,KAAKuc,IAAItB,EAAQnL,EAAOxP,GAAIN,KAAKwc,IAAIvB,EAAQnL,EAAOxP,GAAI,GAC1ErB,EAASvO,KAAK,EAAIsP,KAAKuc,IAAItB,EAAQnL,GAAQxP,EAAI,IAAKN,KAAKwc,IAAIvB,EAAQnL,GAAQxP,EAAI,IAAK,GAG1F,OAAOrB,EAGJ,SAASyd,KAAiC,IAAzBJ,EAAwB,uDAAH,EACrC7T,EAAW,CACX,GAAI,EAAG,EACP,GAAI,EAAG,EACP,EAAG,EAAG,EACN,GAAI,EAAG,EACP,EAAG,EAAG,EACN,EAAG,EAAG,GAKV,OADAA,GADAA,EAAWA,EAASkU,OAAON,GAAQC,KACfK,OAAOF,GAASH,IChCjC,IAAMM,GAAb,oDACI,WAAY3sB,EAAcmrB,EAAY5mB,EAA4BwhB,GAA0B,IAAD,uBACvF,cAAMoF,EAAKpR,UACX,IAAM4M,EAASwE,EAAKpR,SAAS+J,OAAOsH,eAAeD,EAAKtlB,MAAMvD,MAFyB,OAIvFsnB,GAASyB,SAASC,QAAQ,CAAC,CACnB9B,SAAUxB,GAAiBuD,QAC3BxQ,OAAQ/a,EAAKgP,UACd,CACCwa,SAAUxB,GAAiBwD,MAC3BzQ,OAAQ/a,EAAKyoB,WAAW/N,IAAI1a,KAC5B2mB,OAAQA,KACR,SAAC3X,EAAwByc,GACzB,EAAKC,KAAK1c,EAAUyc,EAAUN,GAC9B5mB,EAAS,oBAbsE,EAD/F,yCAkBI,SAAayK,EAAwByc,EAAsBN,GACvD,IAAM3S,EAAWzJ,KAAK4c,eAAe3c,EAAUyc,GAC/C1c,KAAK6c,WAAWpT,GAChBzJ,KAAK8c,kBAAkBrT,GAEvBzJ,KAAKuJ,QAAU6S,EAAK7S,QACpBvJ,KAAKgL,SAAS6I,SAAU,IAxBhC,+BA2BI,SAA0BpK,GACtB,IAAM2P,EAAc,IAAI/N,KAAW5B,EAAUzJ,KAAKgL,SAAS2I,OAAOtG,qBAClE+L,EAAYyE,eAAgB,EAC5B7d,KAAKgL,SAAS8J,aAAa3Q,IAAIiV,GAC/BpZ,KAAKoZ,YAAcA,IA/B3B,wBAkCI,SAAmB3P,GACf,IAAM0P,EAAO,IAAI9N,KAAW5B,EAAUzJ,KAAKgL,SAAS2I,OAAOzG,cAC3DiM,EAAK0E,eAAgB,EACrB7d,KAAKgL,SAASkB,MAAM/H,IAAIgV,GACxBnZ,KAAKmZ,KAAOA,IAtCpB,4BAyCI,SAAuBlZ,EAAwB0Z,GAC3C,IAAMlQ,EAAW,IAAI4B,KAYrB,OAXA5B,EAASqU,cAAgB7d,EAASpK,OAAS,EAC3C4T,EAASb,aAAa,WAAY,IAAIyC,KAAsB,IAAI9C,aAAamV,MAAY,IACzFjU,EAASb,aAAa,YAAa,IAAIyC,KACnC,IAAIA,KAAiCpL,EAAU,EAAG,GAAI,EAAG,IAE7DwJ,EAASb,aAAa,UAAW,IAAIyC,KACjC,IAAIA,KAAiCpL,EAAU,EAAG,GAAI,EAAG,IAE7DwJ,EAASb,aAAa,WAAY,IAAIyC,KAA+BsO,EAAU,GAAG,EAAM,IACxFlQ,EAASb,aAAa,QAAS,IAAIyC,KAA+BrL,KAAKgd,WAAW/c,EAASpK,QAAS,GAAG,EAAM,IAEtG4T,MAtDf,GAA+ByP,IA0DlB6E,GAAb,oDACI,WAAY9sB,EAAcmrB,EAAY5mB,EAA4BwhB,GAA0B,IAAD,uBACvF,cAAMoF,EAAKpR,UAEX,IAAMmS,EAAgBf,EAAKpR,SAAS+J,OAAOsH,eAAgBD,EAAKtlB,MAAkBqI,QAHK,OAMvF0b,GAASyB,SAASC,QACd,CAAC,CACG9B,SAAUxB,GAAiBuD,QAC3BxQ,OAAQ/a,EAAKgP,UACd,CACCwa,SAAUxB,GAAiBwD,MAC3BzQ,OAAQ/a,EAAKyoB,WAAW0D,WAAWnsB,KACnC2mB,OAAQuF,KACR,SAACld,EAAwByc,GACzB,EAAKC,KAAK1c,EAAUyc,EAAUN,GAC9B5mB,EAAS,oBAhBsE,EAD/F,yCAqBI,SAAayK,EAAwByc,EAAsBN,GACvD,IAAM3S,EAAWzJ,KAAK4c,eAAe3c,EAAUyc,GAC/C1c,KAAK6c,WAAWpT,GAChBzJ,KAAK8c,kBAAkBrT,GAEvBzJ,KAAKuJ,QAAU6S,EAAK7S,QACpBvJ,KAAKgL,SAAS6I,SAAU,IA3BhC,+BA8BI,SAA0BpK,GACtB,IAAM2P,EAAc,IAAI/N,KAAW5B,EAAUzJ,KAAKgL,SAAS2I,OAAOtG,qBAClE+L,EAAYyE,eAAgB,EAC5B7d,KAAKgL,SAAS8J,aAAa3Q,IAAIiV,GAC/BpZ,KAAKoZ,YAAcA,IAlC3B,wBAqCI,SAAmB3P,GACf,IAAM0P,EAAO,IAAI9N,KAAW5B,EAAUzJ,KAAKgL,SAAS2I,OAAOzG,cAC3DiM,EAAK0E,eAAgB,EACrB7d,KAAKgL,SAASkB,MAAM/H,IAAIgV,GACxBnZ,KAAKmZ,KAAOA,IAzCpB,4BA4CI,SAAuBlZ,EAAwB0Z,GAC3C,IAAMlQ,EAAW,IAAI4B,KAYrB,OAXA5B,EAASqU,cAAgB7d,EAASpK,OAAS,EAC3C4T,EAASb,aAAa,WAAY,IAAIyC,KAAsB,IAAI9C,aAAamV,MAAY,IACzFjU,EAASb,aAAa,YAAa,IAAIyC,KACnC,IAAIA,KAAiCpL,EAAU,EAAG,GAAI,EAAG,IAE7DwJ,EAASb,aAAa,UAAW,IAAIyC,KACjC,IAAIA,KAAiCpL,EAAU,EAAG,GAAI,EAAG,IAE7DwJ,EAASb,aAAa,WAAY,IAAIyC,KAA+BsO,EAAU,GAAG,EAAM,IACxFlQ,EAASb,aAAa,QAAS,IAAIyC,KAA+BrL,KAAKgd,WAAW/c,EAASpK,QAAS,GAAG,EAAM,IAEtG4T,MAzDf,GAAoCwQ,IC3DvB+D,GAAb,oDACI,WAAY/sB,EAAcmrB,EAAY5mB,EAA4BwhB,GAA0B,IAAD,uBACvF,cAAMoF,EAAKpR,UACX,IAAM4M,EAASwE,EAAKpR,SAAS+J,OAAOsH,eAAeD,EAAKtlB,MAAMvD,MAFyB,OAIvFsnB,GAASyB,SAASC,QACd,CAAC,CACG9B,SAAUxB,GAAiBuD,QAC3BxQ,OAAQ/a,EAAKgP,UACd,CACCwa,SAAUxB,GAAiBwD,MAC3BzQ,OAAQ/a,EAAKyoB,WAAW/N,IAAI1a,KAC5B2mB,OAAQA,KAEZ,SAAC3X,EAAwByc,GACrB,EAAKC,KAAK1c,EAAUyc,EAAUN,GAC9B5mB,EAAS,oBAfsE,EAD/F,yCAqBI,SAAayK,EAAwByc,EAAsBN,GACvD,IAAM3S,EAAWzJ,KAAK4c,eAAe3c,EAAUyc,GAC/C1c,KAAK6c,WAAWpT,GAChBzJ,KAAK8c,kBAAkBrT,GACvBzJ,KAAKuJ,QAAU6S,EAAK7S,QACpBvJ,KAAKgL,SAAS6I,SAAU,IA1BhC,+BA8BI,SAA0BpK,GACtB,IAAM2P,EAAc,IAAI/N,KAAW5B,EAAUzJ,KAAKgL,SAAS2I,OAAOrG,sBAClE8L,EAAYyE,eAAgB,EAC5B7d,KAAKgL,SAAS8J,aAAa3Q,IAAIiV,GAC/BpZ,KAAKoZ,YAAcA,IAlC3B,wBAqCI,SAAmB3P,GACf,IAAMjD,EAAWxG,KAAKgL,SAAS2I,OAAO1G,cAChCkM,EAAO,IAAI9N,KAAW5B,EAAUjD,GACtC2S,EAAK0E,eAAgB,EAGrB7d,KAAKgL,SAASkB,MAAM/H,IAAIgV,GACxBnZ,KAAKmZ,KAAOA,IA5CpB,4BA+CI,SAAuBlZ,EAAwByc,GAC3C,IAAMuB,EAAS,IAAI5S,KAAyB,EAAG,GACzC6S,EAAiB,IAAI3V,aAAa0V,EAAOvE,WAAWnT,SAASqT,OACnEqE,EAAO1E,UAEP,IAAM9P,EAAW,IAAI4B,KAOrB,OANA5B,EAASqU,cAAgB7d,EAASpK,OAAS,EAC3C4T,EAASb,aAAa,WAAY,IAAIyC,KAAsB6S,EAAgB,IAC5EzU,EAASb,aAAa,WAAY,IAAIyC,KAA+BpL,EAAU,GAAG,EAAO,IACzFwJ,EAASb,aAAa,WAAY,IAAIyC,KAA+BqR,EAAU,GAAG,EAAM,IACxFjT,EAASb,aAAa,QAAS,IAAIyC,KAA+BrL,KAAKgd,WAAW/c,EAASpK,QAAS,GAAG,EAAM,IAC7G4T,EAASwT,uBACFxT,MA3Df,GAAgCyP,IAgEnBiF,GAAb,oDACI,WAAYltB,EAAcmrB,EAAY5mB,EAA4BwhB,GAA0B,IAAD,uBACvF,cAAMoF,EAAKpR,UACX,IAAMmS,EAAgBf,EAAKpR,SAAS+J,OAAOsH,eAAgBD,EAAKtlB,MAAkBqI,QAFK,OAKvF0b,GAASyB,SAASC,QACd,CAAC,CACG9B,SAAUxB,GAAiBuD,QAC3BxQ,OAAQ/a,EAAKgP,UACd,CACCwa,SAAUxB,GAAiBwD,MAC3BzQ,OAAQ/a,EAAKyoB,WAAW0D,WAAWnsB,KACnC2mB,OAAQuF,KAEZ,SAACld,EAAwByc,GACrB,EAAKC,KAAK1c,EAAUyc,EAAUN,GAC9B5mB,EAAS,oBAhBsE,EAD/F,yCAsBI,SAAayK,EAAwByc,EAAsBN,GACvD,IAAM3S,EAAWzJ,KAAK4c,eAAe3c,EAAUyc,GAC/C1c,KAAK6c,WAAWpT,GAChBzJ,KAAK8c,kBAAkBrT,GACvBzJ,KAAKuJ,QAAU6S,EAAK7S,QACpBvJ,KAAKgL,SAAS6I,SAAU,IA3BhC,+BA+BI,SAA0BpK,GACtB,IAAM2P,EAAc,IAAI/N,KAAW5B,EAAUzJ,KAAKgL,SAAS2I,OAAOrG,sBAClE8L,EAAYyE,eAAgB,EAC5B7d,KAAKgL,SAAS8J,aAAa3Q,IAAIiV,GAC/BpZ,KAAKoZ,YAAcA,IAnC3B,wBAsCI,SAAmB3P,GACf,IAAMjD,EAAWxG,KAAKgL,SAAS2I,OAAO1G,cAChCkM,EAAO,IAAI9N,KAAW5B,EAAUjD,GACtC2S,EAAK0E,eAAgB,EAGrB7d,KAAKgL,SAASkB,MAAM/H,IAAIgV,GACxBnZ,KAAKmZ,KAAOA,IA7CpB,4BAgDI,SAAuBlZ,EAAwByc,GAC3C,IAAMuB,EAAS,IAAI5S,KAAyB,EAAG,GACzC6S,EAAiB,IAAI3V,aAAa0V,EAAOvE,WAAWnT,SAASqT,OACnEqE,EAAO1E,UAEP,IAAM9P,EAAW,IAAI4B,KAOrB,OANA5B,EAASqU,cAAgB7d,EAASpK,OAAS,EAC3C4T,EAASb,aAAa,WAAY,IAAIyC,KAAsB6S,EAAgB,IAC5EzU,EAASb,aAAa,WAAY,IAAIyC,KAA+BpL,EAAU,GAAG,EAAO,IACzFwJ,EAASb,aAAa,WAAY,IAAIyC,KAA+BqR,EAAU,GAAG,EAAM,IACxFjT,EAASb,aAAa,QAAS,IAAIyC,KAA+BrL,KAAKgd,WAAW/c,EAASpK,QAAS,GAAG,EAAM,IAC7G4T,EAASwT,uBACFxT,MA5Df,GAAqCwQ,IClExBmE,GAAb,oDAGI,WAAYntB,EAAaotB,EAAoB7oB,EAA4BwhB,GAA0B,IAAD,wBAC9F,cAAMqH,EAASrT,WAHnBoD,UAEkG,EAE9F,EAAKA,KAAOnd,EAAKmd,KACjB,IAAMwJ,EAASyG,EAASvnB,MAAMwnB,YAHgE,OAK9FzD,GAASyB,SAASC,QAAQ,CACtB,CACI9B,SAAUxB,GAAiBuD,QAC3BxQ,OAAQ/a,EAAKqmB,MACd,CACCmD,SAAUxB,GAAiBuD,QAC3BxQ,OAAQ/a,EAAKb,IACd,CACCqqB,SAAUxB,GAAiBwD,MAC3BzQ,OAAQ/a,EAAK0a,IACbiM,OAAQA,GACT,CACC6C,SAAUxB,GAAiBuD,QAC3BxQ,OAAQ/a,EAAKstB,YACf,CACE9D,SAAUxB,GAAiBuD,QAC3BxQ,OAAQ/a,EAAKutB,YAEjB,SAAClH,EAAoBlnB,EAAkBssB,EAAsB6B,EAA0BC,GAC/E,EAAK7B,KAAKrF,EAAMlnB,EAAIssB,EAAU6B,EAAYC,GAC1ChpB,EAAS,oBAzByE,EAHtG,yCAgCI,SAAa8hB,EAAoBlnB,EAAkBssB,EAAsB6B,EAA0BC,GAC/F,IAAM/U,EAAWzJ,KAAK4c,eAAetF,EAAMlnB,EAAIssB,EAAU6B,EAAYC,GACrExe,KAAK6c,WAAWpT,GAChBzJ,KAAK8c,kBAAkBrT,GACvBzJ,KAAKuJ,SAAU,EACfvJ,KAAKgL,SAAS6I,SAAU,IArChC,wBAwCI,SAAmBpK,GACf,IAAMjD,EAAWxG,KAAKgL,SAAS2I,OAAOxG,cAChCgM,EAAO,IAAI9N,KAAW5B,EAAUjD,GACtC2S,EAAK0E,eAAgB,EAGrB7d,KAAKgL,SAASkB,MAAM/H,IAAIgV,GACxBnZ,KAAKmZ,KAAOA,IA/CpB,+BAkDI,SAA0B1P,GACtB,IAAMjD,EAAWxG,KAAKgL,SAAS2I,OAAOpG,qBAChC6L,EAAc,IAAI/N,KAAW5B,EAAUjD,GAC7C4S,EAAYyE,eAAgB,EAC5B7d,KAAKgL,SAAS8J,aAAa3Q,IAAIiV,GAE/BpZ,KAAKoZ,YAAcA,IAxD3B,4BA2DI,SAAuB9B,EAAoBlnB,EAAkBssB,EAAsB6B,EAA0BC,GACzG,IAAMP,EAAS,IAAI5S,KAAyB,GAAI,GAC1C6S,EAAiB,IAAI3V,aAAa0V,EAAOvE,WAAWnT,SAASqT,OACnEqE,EAAO1E,UAEP,IAAM9P,EAAW,IAAI4B,KAUrB,OATA5B,EAASqU,cAAgBxG,EAAKzhB,OAAS,EACvC4T,EAASb,aAAa,WAAY,IAAIyC,KAAsB6S,EAAgB,IAC5EzU,EAASb,aAAa,OAAQ,IAAIyC,KAA+BiM,EAAM,GAAG,EAAO,IACjF7N,EAASb,aAAa,aAAc,IAAIyC,KAA+BkT,EAAY,GAAG,EAAO,IAC7F9U,EAASb,aAAa,KAAM,IAAIyC,KAA+Bjb,EAAI,GAAG,EAAO,IAC7EqZ,EAASb,aAAa,WAAY,IAAIyC,KAA+BmT,EAAU,GAAG,EAAO,IACzF/U,EAASb,aAAa,WAAY,IAAIyC,KAA+BqR,EAAU,GAAG,EAAM,IACxFjT,EAASb,aAAa,QAAS,IAAIyC,KAA+BrL,KAAKgd,WAAW1F,EAAKzhB,QAAS,GAAG,EAAM,IACzG4T,EAASwT,uBACFxT,MA1Ef,GAA0ByP,ICGpBuF,GAAqJ,CACvJC,MAAO,CACHC,cAAexC,GACfyC,WAAYhB,GACZiB,YAAab,IAEjBc,MAAO,CACHF,WAAYb,GACZY,cAAezB,GACf2B,YAAaV,KAIfY,GAAaC,OAAOC,KAAKR,GAAiBC,OAC1CQ,GAAaF,OAAOC,KAAKR,GAAiBK,OAGzC,SAASK,GAAiBluB,EAAcmrB,GAA2F,IAA/E5mB,EAA8E,uDAAjD,aAAUwhB,EAAuC,uDAAb,kBAAM,GAC9H,GAAI/lB,EAAKmuB,OAA4B,IAApBnuB,EAAKmuB,KAAKN,MAAgB,CACvC,GAAII,GAAWG,SAASpuB,EAAKuF,MACzB,OAAO,IAAKioB,GAAiBK,MAAM7tB,EAAKuF,MAAOvF,EAAMmrB,EAAM5mB,EAAUwhB,GACzE,MAAM,IAAIxL,MAAJ,qBAAwBva,EAAKuF,KAA7B,uBAEN,GAAIuoB,GAAWM,SAASpuB,EAAKuF,MACzB,OAAO,IAAIioB,GAAiBC,MAAMztB,EAAKuF,MAAMvF,EAAMmrB,EAAM5mB,EAAUwhB,GACvE,MAAM,IAAIxL,MAAJ,qBAAwBva,EAAKuF,KAA7B,uB,ICxBR8oB,G,WAKF,aAAe,0BAHfC,cAGc,OAFdnkB,YAEc,EACV4E,KAAK5E,QAAS,E,wCAGlB,SAAIghB,EAAY5mB,GAA6B,IAAD,OACxCwK,KAAKuf,SAAWpwB,KAAMqwB,YAAYrgB,SAClCid,EAAKpR,SAAStV,OAAOoc,QAAQC,gBAAgBoB,QAE7C,IAAMsM,GAAUze,KAAKC,IAAImb,EAAKnd,GAAK+B,KAAKC,IAAImb,EAAK9V,IAAM,EAEvDpX,GAAO4B,IAAP,UAAc7B,GAAd,OAAmCmtB,EAAKtlB,MAAM1F,QAA9C,YAAyDgrB,EAAKtlB,MAAMvD,KAApE,wBAAwF6oB,EAAKsD,YAAc,CACvGC,YAAa3f,KAAKuf,SAASK,MAC3BC,QAAQ,gBAAD,OAAkBJ,EAAlB,YAA4BK,MACpC/uB,MACC,SAACC,GACGorB,EAAKpR,SAAStV,OAAOoc,QAAQC,gBAAgB+G,OAEzC,EAAK1d,SAGT,EAAKA,QAAS,EACd,EAAKmkB,SAAW,KAChB/pB,EAASxE,EAASC,UAExB6B,OAAM,SAACC,GACLqpB,EAAKpR,SAAStV,OAAOoc,QAAQC,gBAAgB+G,OAC7C,EAAKyG,SAAW,U,mBAIxB,WACQvf,KAAKuf,UACLvf,KAAKuf,SAASQ,SAClB/f,KAAKuf,SAAW,S,KAKXS,GAAb,WAcI,WAAY/uB,EAAa+Z,EAAoBlU,GAAyB,0BAbtEmpB,UAaqE,OAZrEC,WAYqE,OAXrEjhB,OAWqE,OAVrEqH,OAUqE,OATrE0E,cASqE,OARrElU,WAQqE,OAPrE4oB,gBAOqE,OANrES,YAMqE,OAL7DC,eAK6D,OAJ7DC,YAI6D,OAH7DC,aAG6D,EACjEtgB,KAAKigB,KAAO,CAAC,aAAI9f,KAAL,aAAgBlP,EAAKyZ,IAAI,KAAzB,aAAkCvK,KAAlC,aAA6ClP,EAAKyZ,IAAI,MAClE1K,KAAKkgB,MAAQ,CAAC,IAAI3Y,KAAQvH,KAAKigB,KAAK,GAAGhhB,EAAGe,KAAKigB,KAAK,GAAG3Z,GAAI,IAAIiB,KAAQvH,KAAKigB,KAAK,GAAGhhB,EAAGe,KAAKigB,KAAK,GAAG3Z,IACpGtG,KAAKf,EAAIhO,EAAKgO,EACde,KAAKsG,EAAIrV,EAAKqV,EACdtG,KAAK0f,WAAazuB,EAAKiJ,KACvB8F,KAAKlJ,MAAQA,EACbkJ,KAAKgL,SAAWA,EAChBhL,KAAKogB,WAAY,EACjBpgB,KAAKmgB,OAAS,GACdngB,KAAKqgB,OAAS,IAAIf,GAClBtf,KAAKsgB,SAAU,EAzBvB,0CAwCI,WACI,OAAOtgB,KAAKogB,WAzCpB,IA4BI,SAAYA,GACJpgB,KAAKogB,YAAcA,IAGvBpgB,KAAKogB,UAAYA,EAEbA,EACApgB,KAAKugB,OAELvgB,KAAKwgB,UArCjB,kBA4CI,WAAQ,IAAD,OAoCH,GAnCKxgB,KAAKqgB,OAAOjlB,QACb4E,KAAKqgB,OAAOvvB,IAAIkP,MAAM,SAACmgB,GAEnB,IAAK,EAAKC,YAAc,EAAKE,QACzB,OAAO,EAAKG,eAH0B,qBAMpBN,GANoB,IAM1C,2BAA8B,CAAC,IAAtBO,EAAqB,QAE1B,EAAK1V,SAAStV,OAAOoc,QAAQE,gBAAgBmB,QAC7CgM,GAAiBuB,EAAW,GAAM,SAAChC,GAI/B,OAHA,EAAK1T,SAAStV,OAAOoc,QAAQE,gBAAgB8G,OAC7C,EAAKqH,OAAOzuB,KAAKgtB,GAEZ,EAAK0B,WAAc,EAAKE,SAG7B,EAAKxpB,MAAM6pB,mBAAmB,EAAKR,QAE9B,EAAKC,WAAc,EAAKE,aAA7B,EACO,EAAKG,gBALD,EAAKA,kBAOjB,WAOC,OANK,EAAKL,YAEN,EAAKpV,SAAStV,OAAOoc,QAAQE,gBAAgB8G,OAC7C,EAAK2H,iBAGD,EAAKL,cA5BqB,kCAkC9CpgB,KAAKsgB,QAAS,CAAC,IAAD,iBACEtgB,KAAKmgB,QADP,IACd,oCACM5W,SAAU,GAFF,kCAhF1B,kBAsFI,WAKI,GAJKvJ,KAAKqgB,OAAOjlB,QACb4E,KAAKqgB,OAAOrJ,QAGXhX,KAAKsgB,QAEH,CAAC,IAAD,iBACatgB,KAAKmgB,QADlB,IACH,oCACM5W,SAAU,GAFb,oCADHvJ,KAAKygB,iBA5FjB,oBAmGI,WACI,GAAIzgB,KAAKmgB,OAAOtqB,OAAS,EAAG,CAAC,IAAD,iBACRmK,KAAKmgB,QADG,IACxB,oCACMtY,UAFkB,8BAGxB7H,KAAKmgB,OAAS,MAvG1B,yBA2GI,WACIngB,KAAKsgB,SAAU,IA5GvB,0BA+GI,WACItgB,KAAKsgB,SAAU,EAEVtgB,KAAKogB,WACNpgB,KAAKygB,iBAnHjB,0BAuHI,WACIpqB,QAAQoI,IAAI,iBADD,qBAEKuB,KAAKmgB,QAFV,IAEX,oCACMtY,UAHK,8BAKX7H,KAAKmgB,OAAS,GACdngB,KAAKqgB,OAAOjlB,QAAS,MA7H7B,KC1CA,SAASwlB,GAAS3hB,EAAWqH,GACzB,IAAIua,EAAQ7f,KAAK6D,IAAI7D,KAAKC,IAAIhC,GAAI+B,KAAKC,IAAIqF,IAE3C,GAAU,IAANrH,GAAiB,IAANqH,EACX,OAAO,EAGX,IAZ4Bwa,EAYxBC,EAA2C,IAZnBD,EAYMD,EAAQ,IAX7BC,EAAI,GAAM,GAavB,GAAK7hB,EAAI+B,KAAKC,IAAIqF,IAAQrH,IAAMqH,GAAKrH,EAAI,EACrC,OAAO8hB,EAAOF,EAAQva,EACnB,IAAMA,EAAItF,KAAKC,IAAIhC,IAAQqH,KAAOrH,IAAQqH,EAAI,EACjD,OAAOya,EAAgB,EAARF,EAAcA,EAAS5hB,EACnC,GAAKA,EAAIqH,GAAQrH,IAAMqH,GAAOrH,EAAI,EACrC,OAAO8hB,EAAgB,EAARF,EAAava,EACzB,GAAKA,EAAIrH,IAASqH,IAAMrH,GAAOqH,EAAI,EACtC,OAAOya,EAAgB,EAARF,EAAa5hB,EAEhC,MAAM,IAAIuM,MAAM,uBAab,IClCFwV,GDkCQC,GAAb,WAcI,WAAYhwB,EAAa+Z,EAAoBlU,GAAyB,0BAbtEmpB,UAaqE,OAZrEC,WAYqE,OAXrE5O,gBAWqE,OAVrEtG,cAUqE,OATrEkW,cASqE,OAPrEC,WAOqE,OANrEC,oBAMqE,OALrE7X,aAKqE,OAJrE8X,iBAIqE,OAH5DC,WAG4D,OAFrExqB,WAEqE,EACjEkJ,KAAKkhB,SAAWjwB,EAAKswB,UACrBvhB,KAAKgL,SAAWA,EAChBhL,KAAKlJ,MAAQA,EAEbkJ,KAAKigB,KAAO,CAAC,IAAI9f,KAAQoT,IAAUA,IAAUA,KAAW,IAAIpT,MAASoT,KAAWA,KAAWA,MAC3FvT,KAAKmhB,MAAQ,IAAI1d,IAEjBzD,KAAKwhB,YAAYvwB,EAAM+Z,EAAUlU,GAEjCkJ,KAAKkgB,MAAQ,CAAC,IAAI3Y,KAAQvH,KAAKigB,KAAK,GAAGhhB,EAAGe,KAAKigB,KAAK,GAAG3Z,GAAI,IAAIiB,KAAQvH,KAAKigB,KAAK,GAAGhhB,EAAGe,KAAKigB,KAAK,GAAG3Z,IACpGtG,KAAKsR,WAAa,IAAI/J,KAAQgM,IAAUA,KAExCvT,KAAKohB,eAAiB,IACtBphB,KAAKqhB,YAAc,IAAII,IACvBzhB,KAAKuJ,QAAU,IAAIkY,IAEnBzhB,KAAKshB,MAAQ,IAAI/Z,KA/BzB,yCAkCI,WACI,OAxCQma,EAwCM1hB,KAAKigB,KAvChB,IAAI1Y,KAA4B,IAAnBma,EAAE,GAAGziB,EAAIyiB,EAAE,GAAGziB,GAA8B,IAAnByiB,EAAE,GAAGpb,EAAIob,EAAE,GAAGpb,IAD/D,IAAgBob,IAKhB,kBAsCI,WAAQ,IAAD,iBACgB1hB,KAAKuJ,QAAQoY,UAD7B,IACH,2BAA0C,SACjCpY,SAAU,GAFhB,iCAtCX,kBA4CI,WAAQ,IAAD,iBACgBvJ,KAAKuJ,QAAQoY,UAD7B,IACH,2BAA0C,SACjCpY,SAAU,GAFhB,iCA5CX,yBAkDI,SAAoBtY,EAAa+Z,EAAoBlU,GAAyB,IAAD,EA5DjE8qB,EAAaF,EA4DoD,eAClDzwB,EAAKkwB,OAD6C,IACzE,2BAAmC,CAAC,IAAzBU,EAAwB,QAC3BC,EAAMlB,GAASiB,EAAS5iB,EAAG4iB,EAASvb,GAClC8V,EAAO,IAAI4D,GAAK6B,EAAU7W,EAAUlU,GA/DtC8qB,EAgEG5hB,KAAKigB,KAhEKyB,EAgECtF,EAAK6D,KA/D/B2B,EAAE,GAAGzgB,IAAIugB,EAAE,IACXE,EAAE,GAAG/c,IAAI6c,EAAE,IA+DH1hB,KAAKmhB,MAAMvgB,IAAIkhB,EAAK1F,IALiD,iCAlDjF,gCA2DI,SAAmB2F,GACf,IAAMC,EAAchiB,KAAKsR,WAAWN,QAAQiR,aAAajiB,KAAKkhB,UAAU7a,QAClE6b,EAAe,IAAI3a,KAAQwa,EAAG9iB,EAAG8iB,EAAGzb,GAAG2b,aAAajiB,KAAKkhB,UAAU7a,QAEpE2b,EAAYG,OAAOD,KACpBliB,KAAKsR,WAAW1Q,IAAImhB,EAAG9iB,EAAG8iB,EAAGzb,GAC7BtG,KAAKoiB,iBAAiBF,MAjElC,8BAqEI,WACIliB,KAAKoiB,iBAAiBpiB,KAAKsR,WAAWN,QAAQiR,aAAajiB,KAAKkhB,UAAU7a,WAtElF,8BAyEI,SAAiB2b,GAAuB,IAAD,OAC7BK,EAAariB,KAAKuJ,QACxBvJ,KAAKuJ,QAAUvJ,KAAKqhB,YACpBrhB,KAAKqhB,YAAcgB,EAEnB,IAAMC,EAAOthB,KAAKuhB,KAAKviB,KAAKohB,eAAiBphB,KAAKkhB,UAC5CsB,EAAMR,EAAYhR,QAAQyR,UAAUH,GACpCI,EAAMV,EAAYhR,QAAQ2R,UAAUL,EAAO,GAEjDtiB,KAAKuJ,QAAQzB,QAEb,IAAK,IAAI7I,EAAIujB,EAAIvjB,EAAGA,EAAIyjB,EAAIzjB,IAAKA,EAC7B,IAAK,IAAIqH,EAAIkc,EAAIlc,EAAGA,EAAIoc,EAAIpc,IAAKA,EAAG,CAChC,IAAIwb,EAAMlB,GAAS3hB,EAAGqH,GAChB8V,EAAOpc,KAAKmhB,MAAMrwB,IAAIgxB,GACxB1F,IAEAA,EAAK7S,SAAU,EACfvJ,KAAKuJ,QAAQpF,IAAIiY,IAK7Bpc,KAAKqhB,YAAYrmB,SAAQ,SAACohB,GACjB,EAAK7S,QAAQgC,IAAI6Q,KAClBA,EAAK7S,SAAU,UAlG/B,KEnCaqZ,GAAb,WAaI,WAAY3xB,EAAiB4E,EAAgBmV,EAAoBlU,GAAyB,0BAZ1Fqc,WAYyF,OAXzFC,SAWyF,OAVzFvd,YAUyF,OATzFqE,UASyF,OARzF8Q,cAQyF,OAPzFlU,WAOyF,OANzF+rB,WAMyF,OALzFC,aAKyF,OAJzFnG,UAIyF,OAHzFoG,YAGyF,OAFzFC,iBAEyF,EACrFhjB,KAAKmT,MAAQliB,EAAKgyB,WAClBjjB,KAAKnK,OAASA,EACdmK,KAAKoT,IAAMpT,KAAKmT,MAAQtd,EACxBmK,KAAK9F,KAAOjJ,EAAKiJ,KACjB8F,KAAKgL,SAAWA,EAChBhL,KAAKlJ,MAAQA,EACbkJ,KAAK8iB,SAAU,EACf9iB,KAAK2c,MAAO,EACZ3c,KAAKgjB,iBAAcjoB,EACnBiF,KAAK+iB,QAAU,EACf/iB,KAAK6iB,MAAQ,GAxBrB,yCA2BI,SAAKrtB,GAAuB,IAAD,OACvB,OAAIwK,KAAK8iB,UAAW9iB,KAAK2c,OAGzB3c,KAAK8iB,SAAU,EACf9iB,KAAKgjB,YAAcjnB,YAAW,WAC1B,EAAKinB,iBAAcjoB,EACnB,EAAKiQ,SAAStV,OAAOoc,QAAQC,gBAAgBoB,QAC7CjkB,GAAO4B,IAAP,UAAc7B,GAAd,OAAmC,EAAK6H,MAAM1F,QAA9C,YAAyD,EAAK0F,MAAMvD,KAApE,4BAA4F,EAAK2G,OAAQnJ,MACrG,SAACC,GACG,IAAMC,EAAOD,EAASC,KACtB,EAAK+Z,SAAStV,OAAOoc,QAAQC,gBAAgB+G,OAC7C,EAAK9N,SAAStV,OAAOoc,QAAQE,gBAAgBmB,QJR1D,SAA6BliB,EAAiBotB,EAAoB7oB,EAA4BwhB,GACjG,IAAK,IAAI1V,EAAI,EAAGA,EAAIrQ,EAAK4E,SAAUyL,EAC/B,IAAI8c,GAAK,CAAE9G,KAAMrmB,EAAKqmB,KAAKhW,GAAIlR,GAAIa,EAAKb,GAAGkR,GAAIqK,IAAK1a,EAAK0a,IAAIrK,GAAI8M,KAAMnd,EAAKgyB,WAAa3hB,EAAGid,WAAYttB,EAAKstB,WAAWjd,GAAIkd,SAAUvtB,EAAKutB,SAASld,IAAM+c,EAAU7oB,EAAUwhB,GIOlKkM,CAAoBjyB,EAAM,GAAM,SAACkyB,GAC7B,EAAKN,MAAMnxB,KAAKyxB,GAChBA,EAAK5Z,SAAU,EACX,EAAKsZ,MAAMhtB,SAAW,EAAKA,SAE3B,EAAKmV,SAAStV,OAAOoc,QAAQE,gBAAgB8G,OAC7C,EAAKsK,eACL5tB,QAEL,kBAAM,UAGlB,MAEI,KAtDf,0BAyDI,WACIwK,KAAK6iB,MAAMQ,MAAK,SAACzB,EAAGF,GAAJ,OAAUE,EAAExT,KAAOsT,EAAEtT,QACrCpO,KAAK2c,MAAO,EACZ3c,KAAK8iB,SAAU,IA5DvB,oBA+DI,SAAO1U,GACH,GAAKpO,KAAK2c,KAAV,CAGA,IAAMnqB,EAAUwO,KAAKqF,MAAM+H,GAAQpO,KAAKmT,MACpCnT,KAAK+iB,SAAWvwB,KAIC,IAAjBwN,KAAK+iB,SACL/iB,KAAK6iB,MAAM7iB,KAAK+iB,QAAQxZ,SAAU,GAElC/W,GAAWwN,KAAK6iB,MAAMhtB,SAG1BmK,KAAK6iB,MAAMrwB,GAAS+W,SAAU,EAC9BvJ,KAAK+iB,OAASvwB,OA/EtB,sBAkFI,SAAS4b,GACL,OAAOA,GAAQpO,KAAKmT,OAAS/E,EAAOpO,KAAKoT,MAnFjD,oBAsFI,WAAU,IAAD,iBACapT,KAAK6iB,OADlB,IACL,IAAI,EAAJ,8BACShb,UAFJ,8BAID7H,KAAKgjB,aACLhnB,aAAagE,KAAKgjB,aAEtBhjB,KAAK8iB,SAAU,EACf9iB,KAAK2c,MAAO,EACZ3c,KAAK6iB,MAAQ,KA/FrB,kBAkGI,YACyB,IAAjB7iB,KAAK+iB,SAGT/iB,KAAK6iB,MAAM7iB,KAAK+iB,QAAQxZ,SAAU,KAtG1C,kBAyGI,YACyB,IAAjBvJ,KAAK+iB,SAGT/iB,KAAK6iB,MAAM7iB,KAAK+iB,QAAQxZ,SAAU,OA7G1C,K,oBDCKyX,O,qBAAAA,I,uBAAAA,I,oBAAAA,Q,KAME,IAAMsC,GAAb,WAWI,WAAYryB,EAAiB+Z,EAAoBlU,GAAyB,0BAV1EysB,eAUyE,OATzEC,oBASyE,OARzEpD,eAQyE,OAPzEqD,YAOyE,OANzEtQ,WAMyE,OALzEC,SAKyE,OAJzEsQ,mBAIyE,OAFzEtoB,YAEyE,EACrE4E,KAAKujB,UAAY,GACjBvjB,KAAKwjB,eAAiBvyB,EAAK0yB,gBAC3B3jB,KAAKyjB,QAAU,EACfzjB,KAAKogB,WAAY,EAEjBpgB,KAAK0jB,eAAgB,EACrB1jB,KAAK5E,OAAS,IAAIqI,IAPmD,qBASjDxS,EAAKsyB,WAT4C,IASrE,gCAAWK,EAAX,QACI5jB,KAAKujB,UAAU7xB,KAAK,IAAIkxB,GAASgB,EAAO5jB,KAAKwjB,eAAgBxY,EAAUlU,KAVN,8BAYrEkJ,KAAKujB,UAAUF,MAAK,SAACzB,EAAGF,GAAJ,OAAUE,EAAEzO,MAAQuO,EAAEvO,SAC1CnT,KAAKmT,MAAQnT,KAAKujB,UAAU,GAAGpQ,MAC/BnT,KAAKoT,IAAMpT,KAAKujB,UAAUvjB,KAAKujB,UAAU1tB,OAAS,GAAGsd,MAAQnT,KAAKwjB,eAElExY,EAASwI,SAASqQ,YAAY7jB,MA3BtC,0CA8BI,SAAYogB,GACJpgB,KAAKogB,YAAcA,IAGvBpgB,KAAKogB,UAAYA,EAEbA,EACApgB,KAAKugB,OAELvgB,KAAKwgB,UAvCjB,uBA0CI,WACI,IADc,EACVsD,EAAQ,EADE,eAEO9jB,KAAK5E,OAAOumB,UAFnB,IAEd,sCACmBX,GAAW8B,SACtBgB,KAJM,8BAKd,OAAOA,IA/Cf,iBAkDI,WACI,IAAMC,EAAK/jB,KAAKgkB,YAEhB,OAAIhkB,KAAK0jB,cACDK,GA/DG,IAiEH/jB,KAAK0jB,eAAgB,GACd,GAIRK,GAtEI,IASnB,oBAgEI,SAAO3V,GACEpO,KAAKogB,YAGVpgB,KAAKikB,aAAa7V,GAEbpO,KAAKujB,UAAUvjB,KAAKyjB,SAAYzjB,KAAKujB,UAAUvjB,KAAKyjB,QAAQS,SAAS9V,IACtEpO,KAAKmkB,WAAW/V,IAEC,IAAjBpO,KAAKyjB,QACLzjB,KAAKujB,UAAUvjB,KAAKyjB,QAAQ/W,OAAO0B,MA1E/C,0BA8EI,SAAaA,GAET,IADA,IAAM5b,EAAUwN,KAAKxN,QAAQ4b,GACpB9M,EAAI9O,EAAS8O,EAAI9O,EAxFjB,EAwFqC8O,IAC1CtB,KAAKokB,aAAa9iB,GACtBtB,KAAKqkB,QAAQ7xB,KAlFrB,wBAqFI,SAAW4b,GACP,IAAM9M,EAAItB,KAAKxN,QAAQ4b,GACvBpO,KAAKyjB,QAAU,EACXzjB,KAAKujB,UAAUjiB,GAAGqb,OAClB3c,KAAKyjB,OAASniB,KAzF1B,qBA6FI,SAAgB8M,GAEZ,OADyBkW,cAAGtkB,KAAKujB,UAAW,CAACpQ,MAAO/E,IAAmB,SAACwT,EAAGF,GAAJ,OAAUE,EAAEzO,MAAQuO,EAAEvO,WA9FrG,0BAkGI,SAAqB9hB,GAAgB,IAAD,OAC1BgtB,EAAWre,KAAKujB,UAAUlyB,GAE3BgtB,EAKDA,EAAS1B,MAAQ0B,EAASyE,UAI9B9iB,KAAK5E,OAAOwF,IAAIvP,EAAO2vB,GAAW8B,SAElCzE,EAASkG,MAAK,WACV,EAAKnpB,OAAOwF,IAAIvP,EAAO2vB,GAAW5lB,YAXlC4E,KAAK5E,OAAOwF,IAAIvP,EAAO2vB,GAAWwD,YAtG9C,qBAqHI,SAAgBC,GAAmB,IAAD,iBACVzkB,KAAK5E,OAAO6jB,QADF,IAC9B,2BAAwC,CAAC,IAA9B5tB,EAA6B,SAChCA,EAAQozB,GAAYpzB,GAASozB,EA/H5B,IAgIDzkB,KAAK0kB,eAAerzB,IAHE,iCArHtC,4BA4HI,SAAuBA,GACf2O,KAAK5E,OAAOtK,IAAIO,KAAW2vB,GAAWwD,UACtCxkB,KAAKujB,UAAUlyB,GAAOwW,SAC1B7H,KAAK5E,OAAO0gB,OAAOzqB,KA/H3B,kBAkII,WACI2O,KAAKuJ,SAAU,GAEM,IAAjBvJ,KAAKyjB,QAGTzjB,KAAKujB,UAAUvjB,KAAKyjB,QAAQjD,SAxIpC,kBA2II,WACIxgB,KAAKuJ,SAAU,GAEM,IAAjBvJ,KAAKyjB,QAGTzjB,KAAKujB,UAAUvjB,KAAKyjB,QAAQlD,WAjJpC,KEJeoE,G,WAUX,WAAY3Z,EAAoB5Z,EAAiBH,EAAsB2zB,GAAwB,0BAT/FrxB,UAS8F,OAR9FnC,aAQ8F,OAP9F4Z,cAO8F,OAN9F6Z,UAM8F,OAL9FrR,cAK8F,OAJ9F3e,WAI8F,OAH9FwkB,gBAG8F,EAC1FrZ,KAAKzM,KAAOtC,EAAKsC,KACjByM,KAAK5O,QAAUA,EACf4O,KAAKgL,SAAWA,EAChBhL,KAAKqZ,YAAa,E,0CActB,WACI,OAAOrZ,KAAKqZ,Y,IAZhB,SAAYxY,GACJA,IAAMb,KAAKqZ,aAGfrZ,KAAKqZ,WAAaxY,EACdb,KAAKqZ,WACLrZ,KAAKugB,OAELvgB,KAAKwgB,U,kBAOb,SAAKvvB,GACGA,EAAK4zB,OAEL7kB,KAAK6kB,KAAO,IAAI5D,GAAKhwB,EAAK4zB,KAAM7kB,KAAKgL,SAAUhL,MAC/CA,KAAKgL,SAASkF,SAAS4U,MAAM9kB,KAAK6kB,KAAKE,QACvC/kB,KAAK6kB,KAAKG,mBAAmBhlB,KAAKgL,SAASkF,SAAS9Q,QACpDY,KAAKgL,SAAS6I,SAAU,GAGxB5iB,EAAKuiB,WAELxT,KAAKwT,SAAW,IAAI8P,GAASryB,EAAKuiB,SAAUxT,KAAKgL,SAAUhL,MAC3DA,KAAKgL,SAAS6I,SAAU,K,iCAIhC,SAAoBoR,GACXjlB,KAAKqZ,YAGNrZ,KAAK6kB,MACL7kB,KAAK6kB,KAAKG,mBAAmBC,K,kBAGrC,WACQjlB,KAAK6kB,MACL7kB,KAAK6kB,KAAKrE,OACVxgB,KAAKwT,UACLxT,KAAKwT,SAASgN,OAClBxgB,KAAKgL,SAAS6I,SAAU,I,kBAG5B,WACQ7T,KAAK6kB,MACL7kB,KAAK6kB,KAAKK,mBACVllB,KAAKwT,UACLxT,KAAKwT,SAAS+M,OAClBvgB,KAAKgL,SAAS6I,SAAU,I,8BAG5B,SAAiBsR,GACTnlB,KAAK6kB,OAEL7kB,KAAK6kB,KAAKzD,eAAiB+D,EACvBnlB,KAAKuJ,SACLvJ,KAAK6kB,KAAKK,oBAGlBllB,KAAKgL,SAAS6I,SAAU,I,wBAG5B,SAAWhf,GAAgB,IAAD,OACtB3F,GAAO4B,IAAP,UAAc7B,GAAd,OAAmC+Q,KAAK5O,QAAxC,mBAA0DyD,EAA1D,YAAmEmL,KAAKzM,KAAxE,SAAqF,CACjF9D,QAAS,CACL,gBAAiB,WACjB,OAAU,WACV,QAAW,OAEhBsB,MAAK,SAACC,GACL,IAAI+mB,GAAW/mB,EAASC,MAAM,SAACm0B,GAG3B,GAFA,EAAKvwB,MAAQuwB,EAET,EAAKP,KACT,CAAC,IAAD,iBACqB,EAAKA,KAAK1D,MAAMQ,UADrC,IACI,2BAA2C,CAAC,IAAnCvF,EAAkC,QACvC,EAAKuE,mBAAmBvE,EAAK+D,SAFrC,sCAMLrtB,OAAM,WACL,EAAKuyB,kB,wBAOb,WAEI,GADArlB,KAAKnL,WAAQkG,EACTiF,KAAK6kB,KAAT,sBACqB7kB,KAAK6kB,KAAK1D,MAAMQ,UADrC,IACI,2BAA2C,CAAC,IAAnCvF,EAAkC,QACvCpc,KAAK2gB,mBAAmBvE,EAAK+D,SAFrC,kC,yBAMJ,WACI,GAAIngB,KAAK6kB,KAAT,sBACqB7kB,KAAK6kB,KAAK1D,MAAMQ,UADrC,IACI,2BAA2C,SAClC2D,eAFb,kC,0BAMJ,WACI,GAAItlB,KAAK6kB,KAAT,sBACqB7kB,KAAK6kB,KAAK1D,MAAMQ,UADrC,IACI,2BAA2C,SAClC4D,gBAFb,oC,KAQKC,GAAb,oDAGI,WAAYxa,EAAoB5Z,EAAiBH,EAAkB2zB,GAAwB,IAAD,+BACtF,cAAM5Z,EAAU5Z,EAASH,EAAM2zB,IAHnCrtB,UAE0F,EAEtF,EAAKA,KAAOtG,EAAKsG,KACjB,EAAKyT,SAAS+J,OAAOsH,eAAe,EAAK9oB,KAAM,EAAKgE,MACpD,EAAKolB,KAAK1rB,GAJ4E,EAH9F,uDAUI,SAAmBkvB,GACf,IADgC,EAC1BvI,EAAS5X,KAAKgL,SAAS+J,OAAOsH,eAAerc,KAAKzM,MADxB,eAEd4sB,GAFc,IAEhC,2BAA0B,SAChBsF,WAAW7N,EAAQ5X,KAAKnL,QAHF,iCAVxC,uBAiBI,WACI,OAAOmL,KAAKgL,SAAS+J,OAAOsH,eAAerc,KAAKzM,UAlBxD,GAA2BoxB,IAsBde,GAAb,oDAKI,WAAY1a,EAAoB5Z,EAAiBH,EAAoB2zB,GAAwB,IAAD,+BACxF,cAAM5Z,EAAU5Z,EAASH,EAAM2zB,IALnCzlB,YAI4F,IAH5FC,YAG4F,IAF5F7H,UAE4F,EAExF,EAAK4H,OAASlO,EAAKkO,OACnB,EAAKC,OAASnO,EAAKmO,OACnB,EAAK7H,KAAOtG,EAAKsG,KACjB,EAAKyT,SAAS+J,OAAOsH,eAAe,EAAKld,OAAQ,EAAK5H,KAAK,IAC3D,EAAKyT,SAAS+J,OAAOsH,eAAe,EAAKjd,OAAQ,EAAK7H,KAAK,IAC3D,EAAKolB,KAAK1rB,GAP8E,EALhG,uDAeI,SAAmBkvB,GACf,IADgC,EAC1BvI,EAAS5X,KAAKgL,SAAS+J,OAAOsH,eAAerc,KAAKb,QADxB,eAGdghB,GAHc,IAGhC,2BAA0B,SAChBsF,WAAW7N,EAAQ5X,KAAKnL,QAJF,iCAfxC,uBAuBI,WACI,OAAOmL,KAAKgL,SAAS+J,OAAOsH,eAAerc,KAAKb,YAxBxD,GAA6BwlB,IC/JhBlsB,GAAb,WAOI,WAAYlF,EAAcyX,GAAqB,IAAD,iCAN9CzX,UAM8C,OAL9CyX,cAK8C,OAJ9CtU,YAI8C,OAH9C2B,YAG8C,OAF9CstB,eAE8C,EAC1C3lB,KAAKzM,KAAOA,EACZyM,KAAKgL,SAAWA,EAChBhL,KAAKtJ,OAAS,GACdsJ,KAAK3H,OAAS,GAEdnJ,GAAO4B,IAAP,UAAc7B,GAAd,OAAmC+Q,KAAKzM,KAAxC,gBAA4D,CACxD9D,QAAS,CACL,gBAAiB,WACjB,OAAU,WACV,QAAW,OAEhBsB,MAAK,SAACC,GACL,IAAMqH,EAASrH,EAASC,KAAKoH,OAC7B,EAAKA,OAASA,EAFI,qBAGErH,EAASC,KAAKyF,QAHhB,IAGlB,2BACA,CAAC,IADUI,EACX,QACOA,EAAMC,WAAcD,EAAM+tB,OAAQ/tB,EAAM0c,UAGxB,UAAf1c,EAAMN,MACN,EAAKE,OAAOhF,KAAK,IAAI8zB,GAAM,EAAKxa,SAAU,EAAKzX,KAAMuD,EAAOuB,KATlD,mDAYIrH,EAASC,KAAKyF,QAZlB,IAYlB,2BACA,CAAC,IADU2I,EACX,QACOA,EAAQtI,WAAcsI,EAAQwlB,OAAQxlB,EAAQmU,UAG5B,YAAjBnU,EAAQ7I,MACR,EAAKE,OAAOhF,KAAK,IAAIg0B,GAAQ,EAAK1a,SAAU,EAAKzX,KAAM8L,EAAShH,KAlBtD,kCAnB9B,wDA0CI,SAAoB+G,GAAwB,IAAD,iBACnBY,KAAKtJ,QADc,IACvC,2BAAgC,SACtBkvB,oBAAoBxmB,IAFS,iCA1C/C,8BAgDI,SAAiB+lB,GAAiB,IAAD,iBACZnlB,KAAKtJ,QADO,IAC7B,IAAI,EAAJ,8BACUmvB,iBAAiBV,IAFE,iCAhDrC,sBAqDI,SAASvU,GAAiB,IAAD,iBACJ5Q,KAAKtJ,QADD,IACrB,IAAI,EAAJ,0BAAQI,EAAR,QACI8Z,EAAQ9Z,EAAMwuB,cAAgBxuB,EAAMyuB,gBAFnB,iCArD7B,wBA0DI,SAAW1wB,GACP,IAAmC,IAAhCmL,KAAK3H,OAAOqB,QAAQ7E,GAAvB,CAIAmL,KAAK2lB,UAAY9wB,EALI,qBAMFmL,KAAKtJ,QANH,IAMrB,IAAI,EAAJ,qBAA+B,SACrB+uB,WAAW5wB,IAPA,kCA1D7B,wBAqEI,WACImL,KAAK2lB,eAAY5qB,EADT,qBAEWiF,KAAKtJ,QAFhB,IAER,IAAI,EAAJ,qBAA+B,SACrB2uB,cAHF,mCArEhB,KCDWvF,GAAO/P,OAAO+V,SAAShG,KAO3B,ICyVFiG,GASAC,GDlWQC,GAAb,WAcI,WAAYjb,EAAoB5Z,GAAmB,0BAbnD4Z,cAakD,OAZlD5Z,aAYkD,OAXlD80B,YAWkD,OATlDC,sBASkD,OARlDC,uBAQkD,OAPlDC,0BAOkD,OANlDC,wBAMkD,OAJlDC,eAIkD,OAHlDC,qBAGkD,OAFlDC,yBAEkD,EAC9CzmB,KAAKgL,SAAWA,EAChBhL,KAAK5O,QAAUA,EACf4O,KAAKkmB,OAAS,GACdlmB,KAAKumB,UAAY,EACjBvmB,KAAKwmB,iBAAkB,EACvBxmB,KAAKymB,qBAAsB,EApBnC,2CAuBI,SAAO9a,GACH3L,KAAKgL,SAAS0L,OAAO/K,KAxB7B,yBA2BI,SAAY1M,EAAWqH,GAAY,IAAD,OACxB5G,EAAWM,KAAKgL,SAAS0b,MAAMznB,EAAGqH,GAEnC5G,GAGLxQ,GAAOgH,KAAKjH,EAAgB,CACxBmC,QAAS4O,KAAK5O,QAAQmC,KACtBuD,MAAO4I,EAAS5I,MAChB6U,IAAKjM,EAASiM,MACf5a,MAAK,SAAA4qB,GACJtlB,QAAQoI,IAAIkd,EAAI1qB,MAChB,IAAMA,EAAO0qB,EAAI1qB,KACjBA,EAAI,IAAUyO,EAASiM,IACvB1a,EAAI,MAAYyO,EAAS5I,MAErB,EAAKqvB,kBACL,EAAKA,iBAAiBxK,EAAI1qB,WA5C1C,uBAgDI,SAAUgO,EAAWqH,EAAW8H,EAAcuY,GAC1C3mB,KAAKumB,UAAYnY,EACbpO,KAAKwmB,kBAELxmB,KAAKgL,SAASqK,SAASvN,QACvB9H,KAAKgL,SAASqK,SAASqB,OAAOzX,EAAGqH,GACjCtG,KAAKymB,qBAAsB,EAC3BzmB,KAAKgL,SAAS6I,SAAU,KAvDpC,uBA2DI,SAAU5U,EAAWqH,GACbtG,KAAKwmB,iBAAmBxmB,KAAKymB,sBAE7BzmB,KAAKgL,SAASqK,SAASqB,OAAOzX,EAAGqH,GACjCtG,KAAKgL,SAAS6I,SAAU,KA/DpC,qBAmEI,SAAQ5U,EAAWqH,EAAW8H,EAAcuY,GACvBvY,EAAOpO,KAAKumB,UAEd,MAEI,IAAXI,EACA3mB,KAAK4mB,YAAY3nB,EAAGqH,GACJ,IAAXqgB,GAAgB3mB,KAAKomB,mBAC1BpmB,KAAKomB,qBAGTpmB,KAAKwmB,kBACLxmB,KAAKymB,qBAAsB,GAE/BzmB,KAAKumB,UAAYnY,IAjFzB,qBAoFI,SAAQyY,GACJxwB,QAAQoI,IAAI,WAAYooB,GACxB7mB,KAAKkmB,OAAOW,IAAO,IAtF3B,mBAyFI,SAAMA,GACFxwB,QAAQoI,IAAI,SAAUooB,GACtB7mB,KAAKkmB,OAAOW,IAAO,IA3F3B,qBA8FI,WACQ7mB,KAAKkmB,OAAL,OAEAlmB,KAAKgL,SAAS8b,eACd9mB,KAAKkmB,OAAL,MAAsB,GAGtBlmB,KAAKsmB,oBACLtmB,KAAKsmB,mBAAmBtmB,KAAKgL,SAASwI,SAASpF,KAAMpO,KAAKgL,SAASwI,SAASL,MAAOnT,KAAKgL,SAASwI,SAASJ,OAtGtH,wBA0GI,WACIpT,KAAKgL,SAASkF,SAASmB,OACvBrR,KAAKgL,SAAS6I,SAAU,IA5GhC,2BA+GI,WACI7T,KAAKgL,SAASkF,SAASA,SAAS+F,SAAU,EAC1CjW,KAAKgL,SAASkF,SAASA,SAASrU,WAjHxC,0BAoHI,WACImE,KAAKgL,SAASkF,SAASA,SAAS+F,SAAU,EAC1CjW,KAAKgL,SAASkF,SAASA,SAASrU,WAtHxC,kCAyHI,WACImE,KAAKwmB,iBAAkB,IA1H/B,gCA6HI,WACIxmB,KAAKwmB,iBAAkB,EACvBxmB,KAAKgL,SAASqK,SAASvN,UA/H/B,qCAkII,WACI9H,KAAKgL,SAASkF,SAASwF,WACvB1V,KAAKgL,SAAS6I,SAAU,IApIhC,oBAuII,SAAO5U,EAAWqH,GACdtG,KAAKgL,SAAS6F,OAAO5R,EAAGqH,KAxIhC,oBA2II,WACItG,KAAKgL,SAASkF,SAAS6W,OAAO,IAC9B/mB,KAAKgL,SAAS6I,SAAU,IA7IhC,qBAgJI,WACI7T,KAAKgL,SAASkF,SAAS8W,QAAQ,IAC/BhnB,KAAKgL,SAAS6I,SAAU,IAlJhC,0BAqJI,SAAatc,GACTyI,KAAKgL,SAAS6L,aAAatf,KAtJnC,0BAyJI,SAAaA,GACTyI,KAAKgL,SAAS8L,aAAavf,KA1JnC,iCA6JI,SAAoB6H,GAChBY,KAAK5O,QAAQw0B,oBAAoBxmB,KA9JzC,8BAiKI,SAAiB+lB,GACbnlB,KAAK5O,QAAQy0B,iBAAiBV,KAlKtC,sBAqKI,SAASvU,GACL5Q,KAAK5O,QAAQ61B,SAASrW,KAtK9B,wBAyKI,SAAW/b,GACPmL,KAAK5O,QAAQq0B,WAAW5wB,KA1KhC,wBA6KI,SAAW+b,GACHA,EACA5Q,KAAKgL,SAASkc,gBAEdlnB,KAAKgL,SAASmc,mBAjL1B,qBAoLI,SAAQ/Y,GACJpO,KAAKgL,SAASwI,SAASpF,KAAOA,IArLtC,qBAwLI,SAAQiF,GACJrT,KAAKgL,SAASwI,SAASH,KAAOA,IAzLtC,qBA4LI,WACI,OAAOrT,KAAKgL,SAASwI,SAASH,OA7LtC,sBAgMI,SAASC,GACLtT,KAAKgL,SAASwI,SAASF,MAAQA,IAjMvC,sBAoMI,WACI,OAAOtT,KAAKgL,SAASwI,SAASF,UArMtC,KA0Ma8T,GAAb,WAUI,WAAYjuB,EAAsB2W,GAA4B,IAAD,iCAT7D3W,kBAS6D,OAR7D2W,YAQ6D,OAN7D9E,cAM6D,OAL7DqK,cAK6D,OAJ7DjkB,aAI6D,OAF7D8e,cAE6D,EACzDlQ,KAAK7G,aAAeA,EACpB6G,KAAK8P,OAASA,EAEd9P,KAAKgL,SAAW,IAAI4J,GAAS5U,KAAK8P,QAAS,WACnC,EAAKI,UACL,EAAKA,SAAS4B,aAGtB9R,KAAKqV,SAAW,IAAItB,GAAS/T,KAAKgL,UAnB1C,yCAsBI,WAAQ,IAAD,OACHhL,KAAK5O,QAAU,IAAIqH,GAAQuH,KAAK7G,aAAc6G,KAAKgL,UACnDhL,KAAKkQ,SAAW,IAAI+V,GAAejmB,KAAKgL,SAAUhL,KAAK5O,SACvD4O,KAAKgL,SAASkF,SAASA,SAASmX,iBAAiB,UAAU,kBAAM,EAAKC,aAzB9E,mBA4BI,WAAS,IAAD,EACJtnB,KAAK5O,QAAQw0B,oBAAoB5lB,KAAKgL,SAASkF,SAAS9Q,QACxDY,KAAKgL,SAASiK,OAAOpZ,OAArB,UAA4BmE,KAAKkQ,gBAAjC,aAA4B,EAAemW,sBAC3CrmB,KAAKgL,SAAS6I,SAAU,IA/BhC,kBAkCI,gBAlCJ,K,8GClNA,SAAS0T,GAAS13B,GACd,IAAQkE,EAAsBlE,EAAtBkE,SAAUjC,EAAYjC,EAAZiC,QAGlB,OACI,eAAC5B,EAAA,EAAD,CAAMC,UAAU,WAAWq3B,QAAS11B,EAAS,QAAU,OAAvD,SACKiC,IAMb,SAAS0zB,GAAU53B,GACf,IAAQ63B,EAAoB73B,EAApB63B,OAAQne,EAAY1Z,EAAZ0Z,QAChB,EAAgC9Y,wBAA6BsK,GAA7D,mBAAO2E,EAAP,KAAiBioB,EAAjB,KAEMlC,EAAa,SAAC5wB,GACF,MAAV6yB,IAGJC,EAAY9yB,GAERA,EACA6yB,EAAOt2B,QAAQq0B,WAAW5wB,GAE1B6yB,EAAOt2B,QAAQi0B,eAWvB,OARAx0B,qBAAU,WACD62B,GAGLC,EAAYD,EAAOt2B,QAAQu0B,aAE5B,CAAC+B,IAGA,qCACKne,GACG,uCACJ,eAACrY,EAAA,EAAD,CAASqG,KAAM,IAAKpH,UAAU,QAA9B,oBACA,gBAACD,EAAA,EAAD,CAAMC,UAAU,SAAhB,iBACKu3B,QADL,IACKA,OADL,EACKA,EAAQt2B,QAAQiH,OAAOlH,KAAI,SAAA0D,GAAK,OAC7B,eAAC3E,EAAA,EAAD,CAAkBuB,QAAS,kBAAMg0B,EAAW5wB,IAAQ1E,UAAS,gBAAWuP,IAAa7K,EAAQ,WAAa,IAA1G,SACKA,GADMA,MAIf,eAAC3E,EAAA,EAAD,CAAMuB,QAAS,kBAAMg0B,KAAct1B,UAAS,qBAAwB4K,IAAb2E,EAAyB,WAAa,IAA7F,8BAahB,SAASkoB,GAAU/3B,GACf,IAAQ63B,EAAoB73B,EAApB63B,OAAQne,EAAY1Z,EAAZ0Z,QAChB,EAAoC9Y,mBAAoB,IAAxD,mBAAO4oB,EAAP,KAAmBwO,EAAnB,KAGAh3B,qBAAU,WACD62B,GAELG,EAAcH,EAAOt2B,QAAQsF,OAAOvF,KAAI,SAAC2F,GAAD,OAAWA,EAAMyS,cAC1D,CAACme,EAAQne,IAUZ,OACI,qCACKA,GACG,uCACI,eAACrY,EAAA,EAAD,CAASqG,KAAM,IAAKpH,UAAU,QAA9B,oBACA,eAACD,EAAA,EAAD,CAAMC,UAAU,SAAhB,gBACKu3B,QADL,IACKA,OADL,EACKA,EAAQt2B,QAAQsF,OAAOvF,KAAI,SAAC2F,EAAOwK,GAAR,OACxB,gBAACpR,EAAA,EAAD,CAAuBC,UAAU,QAAQsB,QAAS,kBAfhDJ,EAeuEiQ,OAdxFomB,IAELA,EAAOt2B,QAAQsF,OAAOrF,GAAOkY,SAAW8P,EAAWhoB,GACnDw2B,EAAcxO,EAAWloB,KAAI,SAAC0P,EAAGS,GAAJ,OAAUA,IAAMjQ,GAASwP,EAAIA,QAJrC,IAACxP,GAeF,UACKgoB,EAAW/X,GAAK,eAAC,KAAD,CAAM7J,KAAMqwB,OAAkB,eAAC,KAAD,CAAMrwB,KAAMswB,OAC3D,eAAC73B,EAAA,EAAD,CAAMC,UAAU,YAAhB,SAA6B2G,EAAMvD,SAF5BuD,EAAMvD,gBAa7C,SAASy0B,GAAan4B,GAClB,IAAQ63B,EAAoB73B,EAApB63B,OAAQne,EAAY1Z,EAAZ0Z,QAOhB,OALA1Y,qBAAU,cAGP,CAAC62B,EAAQne,IAGR,qCACKA,GACG,uCACI,eAACrY,EAAA,EAAD,CAASqG,KAAM,IAAKpH,UAAU,QAA9B,uBACA,eAACD,EAAA,EAAD,CAAMC,UAAU,SAAhB,oDAUpB,SAAS83B,GAAap4B,GAClB,IAAQ63B,EAAoB73B,EAApB63B,OAAQne,EAAY1Z,EAAZ0Z,QAChB,EAAwB9Y,mBAAiB,GAAzC,mBAAO2d,EAAP,KAAawF,EAAb,KACA,EAA0BnjB,mBAAiB,GAA3C,mBAAO0iB,EAAP,KAAc+U,EAAd,KACA,EAAwBz3B,oBAAkB,GAA1C,mBAAO4iB,EAAP,KAAa8U,EAAb,KACA,EAAsB13B,mBAAiB,GAAvC,mBAAO2iB,EAAP,KAAYgV,EAAZ,KACA,EAA0B33B,mBAAiB,GAA3C,mBAAO6iB,EAAP,KAAc+U,EAAd,KACMC,EAAUC,iBAAyB,MAKnCC,EAAS,SAACpa,EAAc+E,EAAeC,GACzCQ,EAAQ5S,KAAKqF,MAAM+H,IAEnB8Z,EAAS/U,GACTiV,EAAOhV,IAwBXviB,qBAAU,WACD62B,GAAWA,EAAOxX,UAGvBwX,EAAOxX,SAASmY,SAAS/U,KAC1B,CAACA,EAAOoU,IAEX72B,qBAAU,WACD62B,GAAWA,EAAOxX,WAGvBwX,EAAOxX,SAASoW,mBAAqBkC,EACrCL,EAAQT,EAAOxX,SAASuY,WACxBJ,EAASX,EAAOxX,SAASwY,eAC1B,CAAChB,IAEJ,IAAMiB,EAAM,SAAC7H,GACT,OAAOA,EAAEtO,WAAWoW,SAAS,EAAG,MAOpC,OACI,qCACKrf,GACG,uCACI,eAACrY,EAAA,EAAD,CAASqG,KAAM,IAAKpH,UAAU,QAA9B,sBACA,eAACD,EAAA,EAAD,CAAMC,UAAU,WAAhB,SACI,gBAACD,EAAA,EAAD,CAAMC,UAAU,UAAhB,UACI,gBAACD,EAAA,EAAD,CAAMs3B,QAAQ,OAAOqB,cAAc,MAAMrvB,eAAe,SAAxD,UACI,gBAACtJ,EAAA,EAAD,CAAM44B,SAAS,IAAf,UACI,eAAC53B,EAAA,EAAD,CAASqG,KAAM,IAAf,kBACA,eAACrG,EAAA,EAAD,CAASqG,KAAM,IAAf,SAbtBoxB,EAAI3nB,KAAKqF,MAAM+H,EAAO,OAAS,IAAMua,EAAI3nB,KAAKqF,MAAO+H,EAAO,KAAQ,KAAO,IAAMua,EAAI3nB,KAAKqF,MAAM+H,EAAO,UAerF,gBAACle,EAAA,EAAD,WACI,eAACsH,GAAA,EAAD,CAAYC,KAAM4b,EAAO0V,KAAYC,KAAUx3B,WAAW,UAAUC,QA1DjF,WACVi2B,GAAWA,EAAOxX,WAGvBwX,EAAOxX,SAASiY,SAAS9U,GACzB8U,GAAS9U,OAsDmB,eAAC7T,GAAA,EAAD,CACItM,MAAM,eACNuM,QAvEf,CAAC,IAAM,GAAK,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAuEItO,KAAI,SAACoB,GAAD,MAAY,CAAEiB,MAAM,GAAD,OAAKjB,EAAL,QAAqBA,MAAOA,MACzEmN,SAAQ,UAAK4T,EAAL,QACR2V,WAAW,EACXtwB,SAAU,SAACgH,GAAD,OAAU0oB,EAAS1oB,EAAKpN,QALtC,SAMI,eAACjB,EAAA,EAAD,CAAQE,WAAW,UAAnB,yBAAuC8hB,EAAvC,kBAIZ,eAACpjB,EAAA,EAAD,CAAMC,UAAU,WAAhB,SACI,eAACD,EAAA,EAAD,CAAMC,UAAU,aAAhB,SACI,wBACIwD,IAAK20B,EACL9xB,KAAK,QACL2K,IAAKgS,EACLtO,IAAKuO,EACLtC,KAAM,EACNve,MAAO6b,EACP8a,SAAU,kBAtE5B,WAAO,IAAD,EACd9a,EAAI,UAAGka,EAAQ91B,eAAX,aAAG,EAAiBD,MAE9B,GAAKm1B,GAAWA,EAAOxX,UAAa9B,EAApC,CAGA,IAAM+a,EAAIC,WAAWhb,GACjBib,MAAMF,IAGVzB,EAAOxX,SAAS0D,QAAQuV,IA4DwBG,oBAYxD,SAASC,GAAa15B,GAClB,IAAQ63B,EAAoB73B,EAApB63B,OAAQne,EAAY1Z,EAAZ0Z,QAChB,EAA4B9Y,mBAAiB,KAA7C,mBAAO00B,EAAP,KAAeqE,EAAf,KACA,EAAkC/4B,mBAAiB,GAAnD,mBAAOyd,EAAP,KAAkB2I,EAAlB,KACA,EAAkCpmB,mBAAiB,GAAnD,mBAAOg5B,EAAP,KAAkB3S,EAAlB,KACA,EAA8BrmB,oBAAkB,GAAhD,mBAAOi5B,EAAP,KAAgBC,EAAhB,KACA,EAA0Bl5B,oBAAkB,GAA5C,mBAAOm5B,EAAP,KAAcC,EAAd,KAEAh5B,qBAAU,WACD62B,GAELoC,QAAQC,QAAQ,GAAGh5B,MAAK,kCAAM22B,EAAOxX,gBAAb,aAAM,EAAiB2V,iBAAiBV,QACjE,CAACuC,EAAQvC,IAGZt0B,qBAAU,WACD62B,GAELoC,QAAQC,QAAQ,GAAGh5B,MAAK,WAAO,IAAD,EAC1B,UAAA22B,EAAOxX,gBAAP,SAAiB8Z,WAAWN,QAEjC,CAAChC,EAAQgC,IAEZ74B,qBAAU,WACD62B,GAELoC,QAAQC,QAAQ,GAAGh5B,MAAK,WAAO,IAAD,EAC1B,UAAA22B,EAAOxX,gBAAP,SAAiB+W,SAAS2C,QAE/B,CAAClC,EAAQkC,IAEZ/4B,qBAAU,WACD62B,GAELoC,QAAQC,QAAQ,GAAGh5B,MAAK,kCAAM22B,EAAOxX,gBAAb,aAAM,EAAiB2G,aAAa3I,QAC7D,CAACwZ,EAAQxZ,IAEZrd,qBAAU,WACD62B,GAELoC,QAAQC,QAAQ,GAAGh5B,MAAK,kCAAM22B,EAAOxX,gBAAb,aAAM,EAAiB4G,aAAa2S,QAC7D,CAAC/B,EAAQ+B,IAsCZ,OACI,qCACKlgB,GACG,uCACI,eAACrY,EAAA,EAAD,CAASqG,KAAM,IAAKpH,UAAU,QAA9B,sBACA,gBAACD,EAAA,EAAD,CAAMC,UAAU,WAAhB,UACI,gBAACD,EAAA,EAAD,CAAMC,UAAU,UAAhB,UACI,gBAACe,EAAA,EAAD,CAASqG,KAAM,IAAf,6BAAqC4tB,KACrC,eAACj1B,EAAA,EAAD,CAAMC,UAAU,WAAhB,SACI,wBAAOqG,KAAK,QAAQ2K,IAAK,EAAG0D,IAAK,IAAOiM,KAAM,IAAMmZ,aAAc9E,EAAQ+D,SAAU,SAAC72B,GAAD,OA7C3F,SAACE,GAClB,IAAMsO,EAAIqpB,SAAS33B,GACfsO,IAAMskB,GACNqE,EAAU3oB,GA0CqGspB,CAAa93B,EAAE+M,OAAO7M,eAGzH,gBAACrC,EAAA,EAAD,CAAMC,UAAU,UAAhB,UACI,gBAACe,EAAA,EAAD,CAASqG,KAAM,IAAf,yBAAiC2W,KACjC,eAAChe,EAAA,EAAD,CAAMC,UAAU,WAAhB,SACI,wBAAOqG,KAAK,QAAQ2K,IAAK,EAAG0D,IAAK,EAAGiM,KAAM,GAAKmZ,aAAc/b,EAAWgb,SAAU,SAAC72B,GAAD,OA5CtF,SAACE,GACrB,IAAMsO,EAAIuoB,WAAW72B,GACjBsO,IAAMqN,GACN2I,EAAahW,GAyCgGupB,CAAgB/3B,EAAE+M,OAAO7M,eAG1H,gBAACrC,EAAA,EAAD,CAAMC,UAAU,UAAhB,UACI,gBAACe,EAAA,EAAD,CAASqG,KAAM,IAAf,yBAAiCkyB,KACjC,eAACv5B,EAAA,EAAD,CAAMC,UAAU,WAAhB,SACI,wBAAOqG,KAAK,QAAQ2K,IAAK,EAAG0D,IAAK,GAAIiM,KAAM,GAAKmZ,aAAcR,EAAWP,SAAU,SAAC72B,GAAD,OA3CvF,SAACE,GACrB,IAAMsO,EAAIuoB,WAAW72B,GACjBsO,IAAMqN,GACN4I,EAAajW,GAwCiGwpB,CAAgBh4B,EAAE+M,OAAO7M,eAG3H,eAACrC,EAAA,EAAD,CAAMC,UAAU,UAAhB,SACI,gBAACD,EAAA,EAAD,CAAMC,UAAU,iBAAhB,UACI,gBAACe,EAAA,EAAD,CAASqG,KAAM,IAAf,sBAA8BmyB,EAAU,KAAO,SAC/C,eAACY,GAAA,EAAD,CAAQC,QAASb,EAASR,SAAU,SAAC72B,GAAD,OA1C1C,SAACA,GACdq1B,GAGLiC,EAAWt3B,EAAE+M,OAAOmrB,SAsC+CC,CAAcn4B,WAGjE,eAACnC,EAAA,EAAD,CAAMC,UAAU,UAAhB,SACI,gBAACD,EAAA,EAAD,CAAMC,UAAU,iBAAhB,UACI,gBAACe,EAAA,EAAD,CAASqG,KAAM,IAAf,2BAAmCqyB,EAAQ,KAAO,SAClD,eAACU,GAAA,EAAD,CAAQC,QAASX,EAAOV,SAAU,SAAC72B,GAAD,OAzC1C,SAACA,GACZq1B,GAGLmC,EAASx3B,EAAE+M,OAAOmrB,SAqC+CE,CAAYp4B,mBAwB9E,SAASqgB,GAAO7iB,GACnB,IAAQ63B,EAAW73B,EAAX63B,OACR,EAA0Bj3B,mBAAiB,GAA3C,mBAAOqiB,EAAP,KAAc4X,EAAd,KAEMC,EAAS,SAACC,GACZ,IAAMC,GAAqC,IAAjBD,EAAuB5pB,KAAK2O,GACtD+a,EAASG,IAGbh6B,qBAAU,WACD62B,GAAWA,EAAOxX,WAGvBwX,EAAOxX,SAASmW,qBAAuBsE,KACxC,CAACjD,IAMJ,OACI,eAACpzB,GAAA,EAAD,CAASC,QAAQ,sBAAjB,SACI,eAACiD,GAAA,EAAD,CAAYC,KAAM,eAACqzB,GAAA,EAAD,CAAcj2B,MAAO,CAAEk2B,UAAU,UAAD,OAAYjY,EAAZ,WAA8BthB,WAAW,UAAUC,QANvF,WACZ,OAANi2B,QAAM,IAANA,KAAQ1c,SAASkF,SAASkB,eAW3B,SAAS4Z,GAASn7B,GACrB,IAAQ63B,EAAW73B,EAAX63B,OACR,EAAkCj3B,oBAAkB,GAApD,mBAAOw6B,EAAP,KAAkBC,EAAlB,KACA,EAA4Bz6B,mBAAqBu1B,GAAWmF,IAA5D,mBAAO5oB,EAAP,KAAe6oB,EAAf,KACA,EAAwB36B,mBAAiBs1B,GAAKsF,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAa,SAACC,GACZR,GAAaQ,IAASH,GAEtBC,GAAS,GACTL,GAAa,KAGbK,EAAQE,GACRP,GAAa,KAoCrB,OArBAr6B,qBAAU,WACN,GAAK62B,EAAL,CAIC,IAAD,MAQA,IATA,GAAI4D,IAASvF,GAAKhS,SAEd,UAAA2T,EAAOxX,gBAAP,SAAiBwb,0BACjBN,EAAUpF,GAAWmF,IACrB,UAAAzD,EAAOxX,gBAAP,SAAiByb,gBACjB,UAAAjE,EAAOxX,gBAAP,SAAiB0b,uBAGrB,GAAIN,IAASvF,GAAKhS,SAEd,UAAA2T,EAAOxX,gBAAP,SAAiB2b,eACjB,UAAAnE,EAAOxX,gBAAP,SAAiB4b,wBAGtB,CAACR,IAIA,gBAACp7B,EAAA,EAAD,CAAMC,UAAU,eAAhB,UACI,gBAACD,EAAA,EAAD,CAAMC,UAAU,aAAhB,UACI,eAACmE,GAAA,EAAD,CAASC,QAAQ,SAAjB,SACI,eAACiD,GAAA,EAAD,CAAYC,KAAMM,KAAY5H,UAAWm7B,IAASvF,GAAKtvB,QAAUw0B,EAAY,SAAW,GAAIz5B,WAAW,UAAUC,QAAS,kBAAM+5B,EAAWzF,GAAKtvB,aAEpJ,eAACnC,GAAA,EAAD,CAASC,QAAQ,SAAjB,SACI,eAACiD,GAAA,EAAD,CAAYC,KAAM3C,KAAW3E,UAAWm7B,IAASvF,GAAK3tB,QAAU6yB,EAAY,SAAW,GAAIz5B,WAAW,UAAUC,QAAS,kBAAM+5B,EAAWzF,GAAK3tB,aAEnJ,eAAC9D,GAAA,EAAD,CAASC,QAAQ,WAAjB,SACI,eAACiD,GAAA,EAAD,CAAYC,KAAMs0B,KAAc57B,UAAWm7B,IAASvF,GAAKiG,UAAYf,EAAY,SAAW,GAAIz5B,WAAW,UAAUC,QAAS,kBAAM+5B,EAAWzF,GAAKiG,eAExJ,eAAC13B,GAAA,EAAD,CAASC,QAAQ,WAAjB,SACI,eAACiD,GAAA,EAAD,CAAYC,KAAMw0B,KAAU97B,UAAWm7B,IAASvF,GAAKzC,UAAY2H,EAAY,SAAW,GAAIz5B,WAAW,UAAUC,QAAS,kBAAM+5B,EAAWzF,GAAKzC,eAEpJ,eAAChvB,GAAA,EAAD,CAASC,QAAQ,gBAAjB,SACI,eAACiD,GAAA,EAAD,CAAYC,KAAMy0B,KAAY/7B,UAAWm7B,IAASvF,GAAKhS,UAAYkX,EAAY,SAAW,GAAIz5B,WAAW,UAAUC,QAAS,kBAAM+5B,EAAWzF,GAAKhS,eAEtJ,eAACzf,GAAA,EAAD,CAASC,QAAQ,4BAAjB,SACI,eAACjD,EAAA,EAAD,CAAQE,WAAW,UAAUuH,GAAG,qBAAqBtH,QAnDlD,WAAO,IAAD,EAChBi2B,GAGD4D,IAASvF,GAAKhS,WAGlB,UAAA2T,EAAOxX,gBAAP,SAAiBic,aACjBf,EAAU7oB,IAAWyjB,GAAWmF,GAAKnF,GAAWoG,GAAKpG,GAAWmF,MA2CsBp0B,SAAUu0B,IAAOvF,GAAKhS,SAAhG,SACKxR,IAAWyjB,GAAWmF,GAAK,KAAO,SAG3C,eAAC72B,GAAA,EAAD,CAASC,QAAQ,UAAjB,SACI,eAACiD,GAAA,EAAD,CAAYC,KAAM40B,KAAU76B,WAAW,UAAUC,QAAS,WAAO,IAAD,EAAQ,OAANi2B,QAAM,IAANA,GAAA,UAAAA,EAAQxX,gBAAR,SAAkB6W,cAExF,eAACzyB,GAAA,EAAD,CAASC,QAAQ,WAAjB,SACI,eAACiD,GAAA,EAAD,CAAYC,KAAM60B,KAAW96B,WAAW,UAAUC,QAAS,WAAO,IAAD,EAAQ,OAANi2B,QAAM,IAANA,GAAA,UAAAA,EAAQxX,gBAAR,SAAkB8W,eAEzF,eAAC,GAAD,CAAQU,OAAQA,OAEpB,gBAACH,GAAD,CAAUz1B,QAASm5B,EAAWsB,QAAS,kBAAMf,EAAWF,IAAxD,UACI,eAAC1D,GAAD,CAAWF,OAAQA,EAAWne,QAAS+hB,IAASvF,GAAKtvB,SACrD,eAACgxB,GAAD,CAAWC,OAAQA,EAAWne,QAAS+hB,IAASvF,GAAK3tB,SACrD,eAACmxB,GAAD,CAAc7B,OAAQA,EAAQne,QAAS+hB,IAASvF,GAAKiG,WACrD,eAAC/D,GAAD,CAAcP,OAAQA,EAAQne,QAAS+hB,IAASvF,GAAKzC,WACrD,eAAC0E,GAAD,CAAcN,OAAQA,EAAQne,QAAS+hB,IAASvF,GAAKhS,kB,SAhIhEgS,O,eAAAA,I,mBAAAA,I,mBAAAA,I,uBAAAA,I,uBAAAA,I,wBAAAA,Q,cASAC,O,WAAAA,I,YAAAA,Q,mBC1WE,SAASwG,GAAW38B,GACvB,IAAO63B,EAAU73B,EAAV63B,OAEP,EAAwBj3B,mBAAgC,IAAxD,mBAAOg8B,EAAP,KAAaC,EAAb,KACA,EAAsCj8B,oBAAS,GAA/C,mBAAOk8B,EAAP,KAAoBC,EAApB,KAGMC,EAAW,SAAC57B,GACdy7B,EAAQz7B,GACR27B,GAAe,IAGbE,EAAYt0B,uBAAY,WAAO,IAAD,EAC1B,OAANkvB,QAAM,IAANA,GAAA,UAAAA,EAAQxX,gBAAR,SAAkBwG,QAAQ,GAC1BkW,GAAe,KAChB,QAAClF,QAAD,IAACA,OAAD,EAACA,EAAQxX,WAYZ,OATArf,qBAAU,WACF62B,GAAUA,EAAOxX,WAEjBwX,EAAOxX,SAASiW,iBAAmB0G,EACnCnF,EAAOxX,SAASkW,kBAAoB0G,KAEzC,CAACpF,EAAD,OAASA,QAAT,IAASA,OAAT,EAASA,EAAQxX,SAAU4c,IAI1B,eAACC,GAAA,EAAD,CACI75B,MAAM,WACN85B,WAAW,EACXC,WAAW,EACX12B,MAAM,OACNzE,QAAS66B,EACTv5B,gBAAiB05B,EACjBI,SAAUJ,EAPd,SASI,eAAC58B,EAAA,EAAD,CAAMC,UAAU,OAAhB,SAEQ6uB,OAAOC,KAAKwN,GAAMt7B,KAAI,SAAA01B,GAAG,OACrB,gBAAC32B,EAAA,EAAD,CAAgBC,UAAU,YAA1B,UACI,gBAACyK,GAAA,EAAD,CAAMzK,UAAU,MAAhB,UAAuB02B,EAAvB,OADJ,IACwC,eAACjsB,GAAA,EAAD,CAAMzK,UAAU,QAAhB,SAAyBs8B,EAAK5F,OAD3DA,UCxB5B,SAASsG,KACZ,IAAQh0B,EAAiBC,cAAjBD,aACR,EAfJ,WACI,MAAwB1I,mBAAS,CAAC,EAAG,IAArC,mBAAO8G,EAAP,KAAa6e,EAAb,KASA,OARAgX,2BAAgB,WACZ,SAASC,IACLjX,EAAQ,CAACrG,OAAOC,WAAYD,OAAOE,cAIvC,OAFAF,OAAOsX,iBAAiB,SAAUgG,GAClCA,IACO,kBAAMtd,OAAOud,oBAAoB,SAAUD,MACnD,IACI91B,EAKiBg2B,GAAxB,mBAAOh3B,EAAP,KAAchF,EAAd,KACA,EAA4Bd,wBAAqCsK,GAAjE,mBAAO2sB,EAAP,KAAe8F,EAAf,KACM1d,EAASje,sBA0Bf,OAxBAhB,qBAAU,WACN,GAAsB,MAAlBif,EAAOtd,QAAX,CAGA,IAAMk1B,EAAS,IAAIN,GAAejuB,EAAc2W,EAAOtd,SAKvD,OAJAk1B,EAAO/K,OACP6Q,EAAU9F,GACVA,EAAO1c,SAASsL,QAET,WACHvG,OAAO+V,SAAS2H,aAIrB,CAACt0B,IAGJtI,qBAAU,WAAO,IAAD,EACE,MAAV62B,IAGJ,UAAAA,EAAOxX,gBAAP,SAAiBW,OAAOta,EAAOhF,MAChC,CAACgF,EAAOhF,EAAQm2B,IAGf,gBAACx3B,EAAA,EAAD,CAAMC,UAAU,eAAhB,UACI,eAACq8B,GAAD,CAAY9E,OAAQA,IACpB,eAACsD,GAAD,CAAUtD,OAAQA,IAClB,yBACI/zB,IAAKmc,EACL4d,YAAa,SAAC53B,GAAW,IAAD,EAAM4xB,IAAgB,UAAAA,EAAOxX,gBAAP,SAAiByd,UAAU73B,EAAM83B,QAAS93B,EAAM+3B,QAAS/3B,EAAMg4B,UAAWh4B,EAAM6wB,UAC9HoH,UAAW,SAACj4B,GAAW,IAAD,EAAO4xB,IAAgB,UAAAA,EAAOxX,gBAAP,SAAiB8d,QAAQl4B,EAAM83B,QAAS93B,EAAM+3B,QAAS/3B,EAAMg4B,UAAWh4B,EAAM6wB,UAC3HsH,YAAa,SAACn4B,GAAW,IAAD,EAAO4xB,IAAgB,UAAAA,EAAOxX,gBAAP,SAAiBge,UAAUp4B,EAAM83B,QAAS93B,EAAM+3B,WAC/FM,UAAW,SAACr4B,GAAW,IAAD,GAAMA,EAAMs4B,QAAW1G,IAAgB,UAAAA,EAAOxX,gBAAP,SAAiBme,QAAQv4B,EAAMslB,QAC5FkT,QAAS,SAACx4B,GAAW,IAAD,GAAMA,EAAMs4B,QAAW1G,IAAgB,UAAAA,EAAOxX,gBAAP,SAAiBqe,MAAMz4B,EAAMslB,QACxFoT,SAAU,EAPd,wDAWA,eAACt+B,EAAA,EAAD,CAAM6I,GAAG,gBAAT,uB,iCCzCC01B,GAAc,CACvBC,aAAc,GACdC,OAAQ,cAIRC,SAAU,CACN,SACA,UACA,UACA,SAGJC,aAAc,CACV,WACA,SACA,YAKPC,QAAS,wBACTC,QAAS,wEACTC,OAAQ,cACRC,YAAa,oBACbC,aAAc,oBACdC,UAAW,iCAGXC,UAAW,yBAEXC,UAAW,+EAGRC,UAAW,CACPC,KAAM,CACX,CAAC,OAAQ,qBACT,CAAEC,QAAS,WAGZ9/B,OAAQ,CAEP,CAAC,iBAAkB,CAClB+/B,MAAO,CACN,gBAAiB,UACjB,YAAa,kBACb,WAAY,gBAOd,CAAED,QAAS,eAIF,CAAC,+DAAgE,CAAE5P,MAAO,SAAU8P,QAAS,QAASC,KAAM,YAIrH,CAAC,WAAY,aACb,CAAC,mBAAoB,aACrB,CAAC,WAAY,CACZF,MAAO,CACN,WAAY,MAMd,CAAC,kCAAmC,gBAEpC,CAAC,6CAA8C,gBAC/C,CAAC,oBAAqB,cACtB,CAAC,gBAAiB,cAClB,CAAC,uBAAwB,gBACzB,CAAC,uBAAwB,iBACzB,CAAC,YAAa,UAGd,CAAC,QAAS,aAGV,CAAC,kBAAmB,kBACpB,CAAC,kBAAmB,kBACpB,CAAC,IAAK,SAAU,kBAChB,CAAC,IAAK,SAAU,kBAChB,CAAC,IAAK,SAAU,qBAGjBG,WAAY,CACX,CAAC,aAAc,KAKhBC,OAAQ,CAEP,CAAC,yBAA0B,CAAC,wBAAyB,wBAAyB,0BAErE,CAAC,kCAAmC,CAAC,wBAAyB,CAAEjQ,MAAO,wBAAyB+P,KAAM,iBAC/G,CAAC,oBAAqB,CAAC,wBAAyB,0BAChD,CAAC,OAAQ,yBACT,CAAC,aAAc,yBAEN,CAAC,UAAW,UACrB,CAAC,aAAc,iBACf,CAAC,OAAQ,kBACT,CAAC,kBAAmB,CAAC,CAAE/P,MAAO,SAAU8P,QAAS,SAAUC,KAAM,QAAU,mBAG5EG,WAAY,CACX,CAAC,IAAK,yBACN,CAAC,KAAM,kBACP,CAAC,aAAc,iBACf,CAAC,QAAS,UACV,CAAC,KAAM,CAAElQ,MAAO,wBAAyB+P,KAAM,OAAQD,QAAS,YAGjEK,cAAe,CACd,CAAC,UAAW,UACZ,CAAC,WAAY,iBACb,CAAC,MAAO,yBACR,CAAC,IAAK,SAAU,SAGjBC,cAAe,CACd,CAAC,UAAW,UACZ,CAAC,WAAY,iBACb,CAAC,MAAO,yBACR,CAAC,IAAK,SAAU,SAGjBC,gBAAiB,CAChB,CAAC,OAAQ,CAAErQ,MAAO,oBAAqB+P,KAAM,qBAC7C,CAAC,WAAY,UACb,CAAC,WAAY,iBACb,CAAC,MAAO,yBACR,CAAC,IAAK,SAAU,SAGjBO,gBAAiB,CAChB,CAAC,KAAM,oBAAqB,oBAC5B,CAAC,KAAM,oBAAqB,QAC5B,CAAEV,QAAS,aAMDW,GAAgB,CACzBC,SAAU,CACN,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,OAStC,SAASC,GAA0B5kB,GAG/B,MAAO,CACH,CACIjY,MAAO,cACPi4B,KAAM6E,KAAiBC,mBAAmBC,MAC1CC,gBAAiBH,KAAiBI,6BAA6BC,gBAC/DC,cAAe,oBAEfC,WAAY,oDACZplB,MAAOA,GAEX,CACIjY,MAAO,gBACPi4B,KAAM6E,KAAiBC,mBAAmBC,MAC1CC,gBAAiBH,KAAiBI,6BAA6BC,gBAC/DC,cAAe,uDAEfC,WAAY,8BACZplB,MAAOA,GAEX,CACIjY,MAAO,gBACPi4B,KAAM6E,KAAiBC,mBAAmBC,MAC1CC,gBAAiBH,KAAiBI,6BAA6BC,gBAC/DC,cAAe,uDAEfC,WAAY,8BACZplB,MAAOA,GAEX,CACIjY,MAAO,aACPi4B,KAAM6E,KAAiBC,mBAAmBC,MAC1CC,gBAAiBH,KAAiBI,6BAA6BC,gBAC/DC,cAAe,wCAEfC,WAAY,8CACZplB,MAAOA,GAEX,CACIjY,MAAO,cACPi4B,KAAM6E,KAAiBC,mBAAmBO,MAC1CL,gBAAiBH,KAAiBI,6BAA6BC,gBAC/DC,cAAe,oBAEfC,WAAY,sBACZplB,MAAOA,GAEX,CACIjY,MAAO,mBACPi4B,KAAM6E,KAAiBC,mBAAmBO,MAC1CL,gBAAiBH,KAAiBI,6BAA6BC,gBAC/DC,cAAe,yBAEfC,WAAY,yBACZplB,MAAOA,GAEX,CACIjY,MAAO,gBACPi4B,KAAM6E,KAAiBC,mBAAmBO,MAC1CL,gBAAiBH,KAAiBI,6BAA6BC,gBAC/DC,cAAe,sBAEfC,WAAY,uBACZplB,MAAOA,IAKnB,IASMslB,GAAW,IAAIC,OATA,SASoB7xB,OAHzB,aAG0CA,OARpC,SAQ2DA,OAAQ,MAGlF,SAAS8xB,KACZ,MAAqC73B,cAA7BD,EAAR,EAAQA,aAAc+3B,EAAtB,EAAsBA,WAChBvgC,EAAUC,cAuChB,EAA4BH,wBAAwDsK,GAApF,mBAAOo2B,EAAP,KAAeC,EAAf,KAEAvgC,qBAAU,WACFsgC,GAGJjiC,GAAOgH,KAAKjH,EAAiB,CAAEmC,QAAS+H,EAAc5F,KAAM29B,IAAcngC,MAAK,SAACC,GAC5E,IAAMC,EAAeD,EAASC,KAC9BkgC,EAAOE,SAASpgC,EAAK4D,UACtB/B,OAAM,SAACC,GACNsD,QAAQnE,MAAMa,QAGnB,CAACo+B,EAAQh4B,EAAc+3B,IAE1B,MAA0CzgC,oBAAS,GAAnD,mBAAO6gC,EAAP,KAAsBC,EAAtB,KACA,EAA4B9gC,mBAAS,IAArC,mBAAO+gC,EAAP,KAAeC,EAAf,KAsBA,OACI,gBAACvhC,EAAA,EAAD,WACI,eAACD,GAAD,CAAQK,UAAQ,IAChB,gBAACJ,EAAA,EAAD,CAAMC,UAAU,eAAhB,UACI,gBAACe,EAAA,EAAD,CAASf,UAAU,OAAnB,mBAAiC+gC,KACjC,gBAAC5/B,EAAA,EAAD,CAAQmD,YAAa,GAAIjD,WAAW,UAAUmD,WAAYgF,KAAclI,QAAS,WAAQd,EAAQe,KAAK1C,EAAemK,IAArH,6BACqBA,KAErB,eAAC4zB,GAAA,EAAD,CACI75B,MAAM,eACN85B,WAAW,EACXC,WAAW,EACX12B,MAAM,OACNzE,QAASw/B,EACTl+B,gBAAiB,kBAAMm+B,GAAiB,IAN5C,SAQA,eAACxzB,GAAA,EAAD,CAAK5N,UAAU,gBAAf,SAAgCqhC,MAEhC,eAAClgC,EAAA,EAAD,CAAQmD,YAAa,GAAIjD,WAAW,UAAUmD,WAAY8I,KAAUhM,QAtClE,WACV,GAAI0/B,EAAJ,CAGA,IAAMt8B,EAAQs8B,EAAOO,WACrBxiC,GAAOgH,KAAKjH,EAAmB,CAAEmC,QAAS+H,EAAc5F,KAAM29B,EAAY74B,OAAQxD,IAAS9D,MAAK,SAACC,GAChE,UAAzBA,EAASC,KAAKyE,QAEd+7B,EAAUzgC,EAASC,KAAKiB,OACxBq/B,GAAiB,KAEjBE,EAAU,4BACVF,GAAiB,OAEtBz+B,OAAM,SAACC,GACNsD,QAAQnE,MAAMa,QAuBV,mBAGA,eAACiB,GAAD,CACIpB,UAAW3D,EACXiE,MAAK,qBAAgBg+B,GACrB19B,MAAK,8CAAyC09B,EAAzC,yDACL79B,aAAa,YACbV,OAAO,OACPD,WAAY,WACR,IAAKy+B,EACD,MAAM,IAAI3lB,MAAM,yCAEpB,MAAO,CAAEpa,QAAS+H,EAAc5F,KAAM29B,EAAY74B,OAAQ84B,EAAOO,aAErE7+B,SAAU,WACNwD,QAAQoI,IAAR,gBAAqByyB,EAArB,YAGJl+B,QAAS,SAACD,GAAY,MAAO,4BAC7BsB,QAAQ,sEAjBZ,SAmBI,eAAC/C,EAAA,EAAD,CAAQmD,YAAa,GAAIjD,WAAW,UAAUmD,WAAYg9B,KAA1D,oBAIJ,eAAC39B,GAAD,CACIpB,UAAW3D,EACXiE,MAAK,sBAAiBg+B,GACtB19B,MAAK,mDAA8C09B,EAA9C,0DACL79B,aAAa,UACbV,OAAO,OACPD,WAAY,WACR,IAAKy+B,EACD,MAAM,IAAI3lB,MAAM,yCAEpB,MAAO,CAAEpa,QAAS+H,EAAc5F,KAAM29B,EAAY74B,OAAQ84B,EAAOO,aAErE7+B,SAAU,WACN3D,GAAOgH,KAAKjH,EAAmB,CAAEmC,QAAS+H,EAAc5F,KAAM29B,IAAcngC,MAAK,SAACC,GAC9EsK,aAAM,gCACPxI,OAAM,SAACC,GACNuI,aAAM,kCAGdtI,QAAS,SAACD,GAAY,MAAO,iCAC7BsB,QAAQ,2EApBZ,SAsBI,eAAC/C,EAAA,EAAD,CAAQE,WAAW,UAAUmD,WAAYI,KAAzC,mCAMR,eAAC7E,EAAA,EAAD,CAAMC,UAAU,YAAhB,SACI,eAAC,KAAD,CACIyhC,YArJS,SAACtB,GACjBA,EAAOuB,UAAUC,eAAeC,MAAK,kBAAmB,eAAnB,EAAGh5B,QAEzCu3B,EAAOuB,UAAUG,SAAS,CAAEj5B,GAAI,eAEhCu3B,EAAOuB,UAAUI,yBAAyB,aAAcxD,IAExD6B,EAAOuB,UAAUK,yBAAyB,aAAc/B,IAExDG,EAAOuB,UAAUM,+BAA+B,aAAc,CAC1DC,uBAAwB,SAAU1T,EAAOnY,GAKrC,IAHwBmY,EAAM2T,gBAAgB,CAAEC,gBAAiB,EAAGC,YAAa,EAAGC,cAAejsB,EAASksB,WAAYC,UAAWnsB,EAASosB,SAC9GC,MAAM7B,IAGhC,MAAO,CAAE8B,YAAa,IAG1B,IAAIC,EAAOpU,EAAMqU,qBAAqBxsB,GAStC,MAAO,CACHssB,YAAaxC,GARL,CACRiC,gBAAiB/rB,EAASksB,WAC1BD,cAAejsB,EAASksB,WACxBF,YAAaO,EAAKP,YAClBG,UAAWI,EAAKJ,kBA6HpBM,QAAS,SAAC7B,EAAQb,GACdc,EAAUD,IAEdhhC,UAAU,SACVoB,OAAO,OACP0hC,gBAAgB,oBCzZ7B,SAASC,KACd,OACE,gBAAC,IAAD,WACE,eAAC,KAAD,CACE3sB,SAAS,aACT4sB,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,IAIlB,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,CAAC,KAApB,SACE,eAAC,IAAD,CAAUtjC,GAAG,WAEf,eAAC,IAAD,CAAOsjC,KAAM1kC,EAAb,SACE,eAACyG,GAAD,MAEF,eAAC,IAAD,CAAOi+B,KAAM1kC,EAAb,SACE,eAAC2P,GAAD,MAEF,eAAC,IAAD,CAAO+0B,KAAM1kC,EAAb,SACE,eAACoL,GAAD,MAEF,eAAC,IAAD,CAAOs5B,KAAM1kC,EAAb,SACE,eAACkK,GAAD,MAEF,eAAC,IAAD,CAAOw6B,KAAM1kC,EAAb,SACE,eAACiiC,GAAD,MAEF,eAAC,IAAD,CAAOyC,KAAM1kC,EAAb,SACE,eAAC0P,GAAD,MAEF,eAAC,IAAD,CAAOg1B,KAAM1kC,EAAb,SACE,eAACm+B,GAAD,MAEF,eAAC,IAAD,CAAOuG,KAAM1kC,EAAb,SACE,eAACwB,GAAD,YCtDVmjC,IAASjnB,OACP,eAAC,IAAMknB,WAAP,UACE,eAAC,IAAYC,SAAb,CAAsBthC,MAAO,CAAEpC,UAAW,eAA1C,SACE,eAAC+iC,GAAD,QAGJ9gB,SAASC,eAAe,W","file":"static/js/main.654534f0.chunk.js","sourcesContent":["\n\n\nexport const url = {\n    HOME: '/app',\n    LOGIN: '/app/login',\n    VIEWTEMPLATE: '/app/view/:project_name',\n    VIEW: '/app/view/',\n    PROJECTSTEMPLATE: '/app/projects/:project_name?',\n    PROJECTS: '/app/projects/',\n    JOBS: '/app/jobs',\n    UPLOADLAYERTEMPLATE: '/app/upload/:project_name',\n    UPLOADLAYER: '/app/upload/',\n    STYLETEMPLATE: '/app/style/:project_name/:style_name',\n    STYLE: '/app/style/',\n    MAPPINGTEMPLATE: '/app/mapping/:project_name',\n    MAPPING: '/app/mapping/'\n};\n\nexport const apiurl = {\n    LISTPROJECT: '/api/projects',\n    ADDPROJECT: '/api/project',\n    EXISTSPROJECT: '/api/project/exists',\n    RENAMEPROJECT: '/api/project/rename',\n    DELETEPROJECT: '/api/project',\n    BUILDPROJECT: '/api/project/build',\n    GETMETA: '/api/project/meta',\n    \n    LISTLAYER: '/api/layers',\n    ADDLAYER: '/api/layer',\n    RENAMELAYER: '/api/layer/rename',\n    DELETELAYER: '/api/layer',\n    ENABLELAYER: '/api/layer/enable',\n    DISABLELAYER: '/api/layer/disable',\n    MAPLAYERS: '/api/layer/map',\n    \n    LISTJOBS: '/api/jobs',\n    LISTLOGS: '/api/logs',\n    LOG: '/api/log',\n    \n    AUTHUSER: '/auth/user',\n    TOKEN: '/auth/token',\n\n    LISTSTYLES: '/api/styles',\n    GETSTYLE: '/api/style',\n    CREATESTYLE: '/api/style/create',\n    UPDATESTYLE: '/api/style/update',\n    DELETESTYLE: '/api/style',\n    RENAMESTYLE: '/api/style/rename',\n    APPLYSTYLE: '/api/style/apply',\n    PARSESTYLE: '/api/style/parse',\n\n    PROJECTDATA: '/api/data/'\n};\n","import axios from \"axios\";\n\nlet config = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  config = {\n    baseURL: \"http://localhost:5000\" // leave unset if you are using the production server\n  };\n}\n\nconst iaxios = axios.create(config);\n\n(function() { \n  let authToken = localStorage.getItem(\"JWT\");\n  if (authToken === null) {\n      // This means that there ISN'T JWT and no user is logged in.\n      iaxios.defaults.headers.common.Authorization = null;\n  } else {\n      // This means that there IS a JWT so someone must be logged in.\n      iaxios.defaults.headers.common.Authorization = `Bearer ${authToken}`;\n  }\n})();\n\n\n\n\nexport default iaxios;","import React from 'react'\nimport { Link as ReactRouterLink } from 'react-router-dom'\nimport { Link, Pane } from 'evergreen-ui'\nimport { url } from '../../url'\n\nexport const EvergreenReactRouterLink = (props: any) =>\n    <Link is={ReactRouterLink} {...props} />\n\n\ninterface IHeaderProps {\n    home?: boolean;\n    projects?: boolean;\n    jobs?: boolean;\n}\n\nexport function Header(props: IHeaderProps) {\n\n    return (\n        <Pane className=\"header\" >\n                <EvergreenReactRouterLink to={url.HOME} className={`headerLink ${props.home ? 'selected' : ''}`}>Home</EvergreenReactRouterLink>\n                <EvergreenReactRouterLink to={url.PROJECTS} className={`headerLink ${props.projects ? 'selected' : ''}`}>Projects</EvergreenReactRouterLink>\n                <EvergreenReactRouterLink to={url.JOBS} className={`headerLink ${props.jobs ? 'selected' : ''}`}>Jobs &amp; Logs</EvergreenReactRouterLink>\n        </Pane>\n    )\n}","import { Pane, Heading, Button } from 'evergreen-ui'\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport iaxios from '../axios';\nimport { apiurl, url } from '../url';\nimport { EvergreenReactRouterLink } from './elements/header';\n\n\nexport function Home() {\n  const [projects, setProjects] = useState<string[]>([]);\n  const history = useHistory();\n\n  const getProjects = () => {\n    iaxios.get(apiurl.LISTPROJECT).then((response) => {\n      setProjects(response.data);\n    });\n  }\n\n  useEffect(() => {\n    getProjects();\n    return () => {\n      setProjects([]);\n    };\n  }, []);\n\n  return (\n    <>\n    <Pane className=\"home\">\n      <Heading className=\"homeHeading\">Metacity</Heading>\n      <Pane className=\"homeProjectList\">\n        {projects.map((project, index) => (\n          <Button height={48} key={index} appearance=\"minimal\" onClick={() => history.push(url.VIEW + project)}>\n            {project}\n          </Button>)\n        )}\n      </Pane>\n      <EvergreenReactRouterLink to={url.PROJECTS} className=\"homeNav\">\n        Go to Controls\n      </EvergreenReactRouterLink>\n    </Pane>\n    </>\n  );\n}","import { Paragraph, Dialog, TextInputField, InlineAlert, Tooltip } from 'evergreen-ui'\nimport { useState, FormEvent, createRef, useEffect, cloneElement } from 'react'\nimport iaxios from '../../axios';\n\ninterface IInputDialogProps {\n    submitUrl: string;\n    title: string;\n    confirmLabel: string;\n    label: string;\n    description?: string;\n    placeholder?: string;\n    method: \"post\" | \"delete\";\n\n    submitBody: (input: string) => Object;\n    onSubmit: (input: string) => void;\n    onError: (reject: any, value: string) => string;\n\n    children: React.ReactElement;\n\n}\n\n\nexport function InputDialog(props: IInputDialogProps) {\n    const nameref = createRef<HTMLInputElement>();\n    const [isShown, setShown] = useState(false);\n    const [invalid, setInvalid] = useState(false);\n    const [error, setError] = useState(\"\");\n\n    const submit = (e?: FormEvent) => {\n        if (e)\n            e.preventDefault();\n\n        const value = nameref.current?.value;\n        if (!value)\n            return;\n        const body = props.submitBody(value);\n\n        iaxios[props.method](props.submitUrl, body).then(() => {\n            if (nameref.current)\n                nameref.current.value = \"\";\n            setShown(false);\n            props.onSubmit(value);\n        }).catch((reject) => {\n            const error = props.onError(reject, value);\n            setInvalid(true);\n            setError(error);\n        });\n    };\n\n    useEffect(() => {\n        setError(\"\");\n        setInvalid(false);\n    }, [isShown]);\n\n    return (\n        <>\n        <Dialog\n            isShown={isShown}\n            title={props.title}\n            onConfirm={() => submit()}\n            onCloseComplete={() => setShown(false)}\n            confirmLabel={props.confirmLabel}>\n            <form className=\"dialogForm\" onSubmit={submit}>\n                { invalid ? \n                    <TextInputField name=\"name\" \n                        label={props.label} \n                        description={props.description} \n                        placeholder={props.placeholder} \n                        ref={nameref} \n                        isInvalid={invalid} \n                        validationMessage={error}\n                    />\n                    :\n                    <TextInputField name=\"name\" \n                        label={props.label} \n                        description={props.description} \n                        placeholder={props.placeholder} \n                        ref={nameref} \n                    />\n                }\n            </form>\n        </Dialog>\n        { cloneElement(props.children, { onClick: () => setShown(true) }) }\n    </>\n    );\n}\n\n\ninterface ITextDialogProps {\n    submitUrl: string;\n    title: string;\n    confirmLabel: string;\n    label: string;\n    method: \"post\" | \"delete\";\n    tooltip?: string;\n    intent?: \"success\" | \"warning\" | \"danger\" | \"none\";\n\n    submitBody: () => Object;\n    onSubmit: () => void;\n    onError: (reject: any) => string;\n\n    children: React.ReactElement;\n}\n\n\nexport function TextDialog(props: ITextDialogProps) {\n    const [isShown, setShown] = useState(false);\n    const [invalid, setInvalid] = useState(false);\n    const [error, setError] = useState(\"\");\n\n    const submit = () => {\n        try {\n            const body = props.submitBody();\n            iaxios[props.method](props.submitUrl, body).then(() => {\n                setShown(false);\n                props.onSubmit();\n            }).catch((reject) => {\n                const error = props.onError(reject);\n                setInvalid(true);\n                setError(error);\n            });\n        } catch(error: any) {\n            setInvalid(true);\n            setError(error); \n        }\n\n    };\n\n    useEffect(() => {\n        setError(\"\");\n        setInvalid(false);\n    }, [isShown]);\n\n    return (\n        <>\n        <Dialog\n            isShown={isShown}\n            intent={props.intent ? props.intent :  \"none\"}\n            title={props.title}\n            onConfirm={submit}\n            onCloseComplete={() => setShown(false)}\n            confirmLabel={props.confirmLabel}>\n            <Paragraph>{props.label}</Paragraph>\n            { invalid ? <InlineAlert intent=\"danger\" marginTop={16}>{error}</InlineAlert> : \"\"}\n        </Dialog>\n        {props.tooltip? \n            <Tooltip content={props.tooltip}>\n                { cloneElement(props.children, { onClick: () => { setShown(true); } }) }\n            </Tooltip> :\n            cloneElement(props.children, { onClick: () => { setShown(true); } })\n    \n        }   \n        </>\n    );\n}\n\n\n","import { Pane, Button, CubeIcon, AddToArtifactIcon, MergeColumnsIcon, StyleIcon, PresentationIcon, EditIcon, TrashIcon } from 'evergreen-ui'\nimport { useHistory } from 'react-router-dom'\nimport { InputDialog, TextDialog } from '../dialog'\nimport { url, apiurl } from '../../../url'\n\n\ninterface IProjectProps {\n    name: string;\n    showProject: (name?: string) => void;\n\n}\n\nexport function ProjectActions(props: IProjectProps) {\n    const history = useHistory();\n\n    const recompile = () => {\n        history.push(url.JOBS);\n    }\n\n    return (\n        <Pane className=\"actions\">\n\n            <Button marginRight={12} marginBottom={12} appearance=\"minimal\" iconBefore={AddToArtifactIcon} onClick={() => history.push(url.UPLOADLAYER + props.name)}>\n                Add Layer\n            </Button>\n\n            <InputDialog\n                submitUrl={apiurl.CREATESTYLE}\n                title=\"Add Style\"\n                label={`Choose the name of the new style`}\n                confirmLabel=\"Create\"\n                method=\"post\"\n                submitBody={(name) => { return { project: props.name, name: name } }}\n                onSubmit={(style) => { history.push(url.STYLE + props.name + \"/\" + style) }}\n                onError={(reject, style) => {return \"Style already exists\"}} \n            >\n                <Button marginRight={12} marginBottom={12} appearance=\"minimal\" iconBefore={StyleIcon}>\n                    Add Style\n                </Button>\n            </InputDialog>\n\n            <TextDialog\n                submitUrl={apiurl.BUILDPROJECT}\n                title={`Recompile project ${props.name}`}\n                label={`Are you sure you want to recompile project ${props.name}?`}\n                confirmLabel=\"Recompile\"\n                method=\"post\"\n                submitBody={() => { return { name: props.name }}}\n                onSubmit={recompile}\n                onError={(reject) => {return \"Project could not be recompiled\"}} \n                tooltip=\"Publish selected layers and compile data for visualization\"\n            >\n                <Button marginRight={12} marginBottom={12} appearance=\"minimal\" iconBefore={CubeIcon}>\n                    Publish 3D\n                </Button>\n            </TextDialog>\n\n            <Button  marginBottom={12} appearance=\"minimal\" iconBefore={MergeColumnsIcon} onClick={() => { history.push(url.MAPPING + props.name) }}>\n                Map Layers\n            </Button>\n            <Button marginRight={12} marginBottom={12} appearance=\"minimal\" iconBefore={PresentationIcon} onClick={() => { history.push(url.VIEW + props.name) }}>\n                View\n            </Button>\n            <InputDialog\n                submitUrl={apiurl.RENAMEPROJECT}\n                title={`Rename project ${props.name}`}\n                label={`Choose a new name for project ${props.name}`}\n                confirmLabel=\"Rename\"\n                method=\"post\"\n                submitBody={(name) => { return {new: name, old: props.name} }}\n                onSubmit={props.showProject}\n                onError={(reject, name) => {return \"Project already exists\"}} \n            >\n                <Button marginRight={12} marginBottom={12} appearance=\"minimal\" iconBefore={EditIcon}>\n                    Rename\n                </Button>\n            </InputDialog>\n            <TextDialog\n                submitUrl={apiurl.DELETEPROJECT}\n                title={`Delete project ${props.name}`}\n                label={`Do you really want to delete project ${props.name}?`}\n                confirmLabel=\"Delete\"\n                method=\"delete\"\n                intent=\"danger\"\n                submitBody={() => { return { data: { name: props.name }}}}\n                onSubmit={() => { props.showProject() }}\n                onError={(reject) => {return \"Project could not be deleted\"}} \n            >\n                <Button  marginBottom={12} appearance=\"minimal\" iconBefore={TrashIcon} intent=\"danger\">\n                    Delete Project\n                </Button>\n            </TextDialog>\n\n        </Pane>\n    );\n}\n\n","import { Pane, Heading, TextInput } from 'evergreen-ui'\nimport { useEffect, useState, FormEvent, createRef } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport iaxios from '../axios';\nimport { url, apiurl } from '../url';\n\n\nexport function authUser(history: any, callback: CallableFunction) {\n    iaxios.get(apiurl.AUTHUSER).then((response) => {\n        callback();\n    }).catch(() => {\n        history.push(url.LOGIN);\n    });\n}\n\n\nexport function Login() {\n  const [status, setStatus] = useState<string>(\"\");\n  let history = useHistory();\n\n  const name = createRef<HTMLInputElement>();\n  const pass = createRef<HTMLInputElement>();\n\n  const login = (event: FormEvent) => {\n    event.preventDefault();\n\n    let formData = new FormData();\n    formData.append(\"username\", name.current?.value || \"\");\n    formData.append(\"password\", pass.current?.value || \"\");\n\n    iaxios.post(apiurl.TOKEN, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then((response) => {\n      localStorage.setItem(\"JWT\", response.data.access_token);\n      iaxios.defaults.headers.common[\"Authorization\"] = `Bearer ${response.data.access_token}`;\n      history.push(url.PROJECTS);\n    }).catch((reject) => {\n      console.error(reject);\n      setStatus(\"There was a problem with your login, check your username and password.\")\n    });\n  };\n\n  useEffect(() => {\n    iaxios.get(apiurl.AUTHUSER, ).then(() => {\n      history.push(url.PROJECTS);\n    }).catch((reject) => {\n        //silently pass\n    });\n  }, [history]);\n\n\n  return (\n    <Pane className=\"fullScreen\">\n        <Pane>\n          <Heading is=\"h1\">Login</Heading>\n          { status.length > 0? <p>{status}</p> : \"\"}\n          <form onSubmit={login}>\n            <TextInput width=\"100%\" placeholder=\"username\" ref={name} type=\"text\" />\n            <TextInput width=\"100%\" placeholder=\"password\" ref={pass} type=\"password\" />\n            <TextInput type=\"submit\"/>\n          </form>\n        </Pane>\n    </Pane>\n  )\n}","import { Pane, Table, TrashIcon, EditIcon, IconButton, EmptyState, LayersIcon, Heading, CrossIcon, TickIcon } from 'evergreen-ui'\nimport { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport iaxios from '../../axios'\nimport { url, apiurl } from '../../url'\nimport { EvergreenReactRouterLink } from './header'\nimport { TextDialog, InputDialog } from './dialog'\nimport { authUser } from '../login'\n\n\ninterface ILayersProps {\n    name: string;\n}\n\nexport interface ILayer {\n    name: string;\n    size: number | [number, number];\n    type: string;\n    disabled: boolean;\n}\n\nexport function Layers(props: ILayersProps) {\n    const [layers, setLayers] = useState<ILayer[]>([]);\n    const history = useHistory();\n\n    const loadLayers = () => {\n        iaxios.post(apiurl.LISTLAYER, { name: props.name }).then((response) => {\n            setLayers(response.data);\n        });\n    }\n\n    useEffect(() => {\n\n        authUser(history, () => {\n            iaxios.post(apiurl.LISTLAYER, { name: props.name }).then((response) => {\n                setLayers(response.data);\n            });\n        })\n\n        return () => {\n            setLayers([]);\n        };\n    }, [props.name, history]);\n\n\n    const changeDisabled = (layer: ILayer) => {\n        if (layer.disabled) {\n            iaxios.post(apiurl.ENABLELAYER, { project: props.name, name: layer.name }).then(() => {\n                loadLayers();\n            });\n        } else {\n            iaxios.post(apiurl.DISABLELAYER, { project: props.name, name: layer.name }).then(() => {\n                loadLayers();\n            });\n        }\n    };\n\n\n    return (\n        <Pane className=\"section\">\n            <Pane className=\"projectHeader\">\n                <Heading className=\"wide\" is=\"h3\"> Layers</Heading>\n            </Pane>\n\n            <Table>\n                <Table.Head className=\"row\">\n                    <Table.TextHeaderCell className=\"wide\">Layer</Table.TextHeaderCell>\n                    <Table.TextHeaderCell className=\"wide\">Number of Objects</Table.TextHeaderCell>\n                    <Table.TextHeaderCell className=\"wide\">Type</Table.TextHeaderCell>\n                    <Table.TextHeaderCell className=\"narrow\">Public</Table.TextHeaderCell>\n                    <Table.TextHeaderCell className=\"narrow\">Rename</Table.TextHeaderCell>\n                    <Table.TextHeaderCell className=\"narrow\">Delete</Table.TextHeaderCell>\n                </Table.Head>\n                <Table.Body>\n                    {layers.length > 0 ? layers.map((layer) => (\n                        <Table.Row key={layer.name} paddingY={12} height=\"auto\" className=\"row\">\n                            <Table.TextCell className=\"wide\">{layer.name}</Table.TextCell>\n                            <Table.TextCell className=\"wide\">{typeof layer.size === 'number'? layer.size : `${layer.size[0]} x ${layer.size[1]}`}</Table.TextCell>\n                            <Table.TextCell className=\"wide\">{layer.type}</Table.TextCell>\n                            <Table.TextCell className=\"narrow\">\n                                {   layer.disabled ?\n                                        <IconButton icon={CrossIcon} appearance=\"minimal\" onClick={() => changeDisabled(layer)} />\n                                    :\n                                        <IconButton icon={TickIcon} intent=\"success\" appearance=\"minimal\" onClick={() => changeDisabled(layer)} />\n                                }\n                            </Table.TextCell>\n                            <Table.TextCell className=\"narrow\">\n                                <InputDialog\n                                    submitUrl={apiurl.RENAMELAYER}\n                                    title={`Rename layer ${layer.name}`}\n                                    label={`Choose a new name for layer ${layer.name}`}\n                                    confirmLabel=\"Rename\"\n                                    method=\"post\"\n                                    submitBody={(name) => { return { project: props.name, new: name, old: layer.name } }}\n                                    onSubmit={loadLayers}\n                                    onError={(reject, name) => { return \"Project already exists\" }}\n                                >\n                                    <IconButton icon={EditIcon} appearance=\"minimal\" />\n                                </InputDialog>\n                            </Table.TextCell>\n                            <Table.TextCell className=\"narrow\">\n                                <TextDialog\n                                    submitUrl={apiurl.DELETELAYER}\n                                    title={`Delete layer ${layer.name}`}\n                                    label={`Do you really want to delete layer ${layer.name}?`}\n                                    confirmLabel=\"Delete\"\n                                    method=\"delete\"\n                                    submitBody={() => { return { data: { project: props.name, name: layer.name } } }}\n                                    onSubmit={loadLayers}\n                                    onError={(reject) => { return \"Layer could not be deleted\" }}\n                                >\n                                    <IconButton icon={TrashIcon} intent=\"danger\" appearance=\"minimal\" />\n                                </TextDialog>\n                            </Table.TextCell>\n                        </Table.Row>\n                    )) :\n                        <EmptyState\n                            background=\"light\"\n                            title=\"No Layers in this Project\"\n                            orientation=\"horizontal\"\n                            icon={<LayersIcon color=\"#C1C4D6\" />}\n                            iconBgColor=\"#EDEFF5\"\n                            description=\"Layers apper after successfull processing of the input files.\"\n                            anchorCta={\n                                <EmptyState.LinkButton is={EvergreenReactRouterLink} to={url.UPLOADLAYER + props.name}>\n                                    Add first layer\n                                </EmptyState.LinkButton>\n                            }\n                        />\n                    }\n                </Table.Body>\n            </Table>\n        </Pane>\n    );\n}\n\n","import { Pane, Heading, Button, StyleIcon, EmptyState, TrashIcon, EditIcon } from 'evergreen-ui'\nimport { useCallback, useEffect, useState } from 'react'\nimport iaxios from '../../axios'\nimport { url, apiurl } from '../../url'\nimport { authUser } from '../login'\nimport { useHistory } from 'react-router'\nimport { InputDialog, TextDialog } from './dialog'\n\ninterface IStyleListProps {\n    project: string;\n}\n\nexport function Styles(props: IStyleListProps) {\n    const [styles, setStyles] = useState<any[]>([]);\n    const history = useHistory();\n\n    const getStyles = useCallback(() => {\n        iaxios.post(apiurl.LISTSTYLES, { name: props.project }).then((response) => {\n            setStyles(response.data);\n        });\n    }, [props.project]);\n\n    useEffect(() => {\n        authUser(history, () => {\n            getStyles();\n        })\n    }, [props.project, history, getStyles]);\n\n    return (\n        <Pane className=\"styles\">\n            <Pane className=\"projectHeader\">\n                <Heading className=\"wide\" is=\"h3\">Styles</Heading> \n            </Pane>\n            <Pane className=\"styleList\">\n                {styles.length > 0 ? styles.map((style) => (\n                    <Pane key={style} className=\"styleItem\">\n                        <Pane className=\"styleTitle\" onClick={() => { history.push(url.STYLE + props.project + \"/\" + style) }}>\n                            {style}\n                        </Pane>\n                        <Pane>\n\n                        <InputDialog\n                            submitUrl={apiurl.RENAMESTYLE}\n                            title={`Rename style ${style}`}\n                            label={`Choose a new name for style ${style}`}\n                            confirmLabel=\"Rename\"\n                            method=\"post\"\n                            submitBody={(name) => { return {project: props.project, new: name, old: style } }}\n                            onSubmit={() => { getStyles() }}\n                            onError={(reject, name) => {return \"Project already exists\"}} \n                        >\n\n                            <Button marginRight={16} appearance=\"minimal\" iconBefore={EditIcon}>\n                                Rename\n                            </Button>\n\n                        </InputDialog>\n\n\n                        <TextDialog\n                            submitUrl={apiurl.DELETESTYLE}\n                            title={`Delete style ${style}`}\n                            label={`Do you really want to delete style ${style}?`}\n                            confirmLabel=\"Delete\"\n                            method=\"delete\"\n                            intent=\"danger\"\n                            submitBody={() => { return { data: { project: props.project, name: style }}}}\n                            onSubmit={() => { getStyles() }}\n                            onError={(reject) => {return \"Style could not be deleted\"}} \n                        >\n                            <Button appearance=\"minimal\" intent=\"danger\" iconBefore={TrashIcon}>\n                                Delete\n                            </Button>\n                        </TextDialog>\n\n                        </Pane>\n                    </Pane>\n                )) : \n                <EmptyState\n                    background=\"light\"\n                    title=\"No Styles in this Project\"\n                    orientation=\"vertical\"\n                    icon={<StyleIcon color=\"#C1C4D6\" />}\n                    iconBgColor=\"#EDEFF5\"\n                    description=\"Styles modify the appearance of the layer in the visualization according to the layer and object metadata\"\n                />\n                }\n            </Pane>\n        </Pane>\n    )\n}","import { Heading, Pane } from 'evergreen-ui'\nimport { ProjectActions } from './project/projectactions'\nimport { Layers } from './layers'\nimport { Styles } from './styles'\n\n\ninterface IProjectProps {\n    name: string;\n    showProject: (name?: string) => void;\n}\n\nexport function Project(props: IProjectProps) {\n\n    return ( \n        <Pane className=\"project\">\n            <Pane>\n                <Pane className=\"projectHeader main\">\n                    <Heading className=\"wide\">Project {props.name}</Heading> \n                </Pane>\n            </Pane>\n            <ProjectActions name={props.name} showProject={props.showProject}/>\n            <Layers name={props.name} />\n            <Styles project={props.name}/>\n        </Pane>\n    );\n}\n\n","import { Pane, Tablist, Tab, Heading, AddIcon } from 'evergreen-ui'\nimport { apiurl } from '../../../url'\nimport { InputDialog } from '../dialog';\n\ninterface IProjectListProps {\n    currentProject: string | undefined;\n    onSelect: (name: string) => void;\n    projects: string[];\n}\n\nexport function ProjectList(props: IProjectListProps) {\n\n  return (\n    <Pane className=\"list\">\n        <Heading className=\"projectList title\">Projects</Heading>\n\n        <InputDialog\n                submitUrl={apiurl.ADDPROJECT}\n                title=\"Add Project\"\n                label={`Choose the name of the new project`}\n                confirmLabel=\"Create\"\n                method=\"post\"\n                submitBody={(name) => { return { name: name } }}\n                onSubmit={(project) => { props.onSelect(project) }}\n                onError={(reject, style) => {return \"Project already exists\"}} \n            >\n              <Pane className=\"projectList action\"><AddIcon/>Add Project</Pane>\n          </InputDialog>\n\n        <Tablist className=\"projectList tabs\">\n        {props.projects.map((project) => (\n            <Tab\n            key={project}\n            id={`tab-${project}`}\n            onSelect={() => props.onSelect(project)}\n            isSelected={project === props.currentProject}>\n            {project}\n            </Tab>\n        ))}\n        </Tablist>\n    </Pane>\n  );\n}","import { Pane, EmptyState, ProjectsIcon } from 'evergreen-ui'\nimport { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom';\nimport iaxios from '../axios';\nimport { url, apiurl } from '../url';\nimport { Header } from './elements/header'\nimport { Project } from './elements/project'\nimport { ProjectList } from './elements/project/projectlist'\nimport { authUser } from './login';\n\n\nexport function Projects() {\n    const { project_name } = useParams<{ project_name: string|undefined }>();\n    const [currentProject, setCurrentProject] = useState<string|undefined>(project_name);\n    const [projects, setProjects] = useState<string[]>([]);\n    const history = useHistory();\n\n    const getProjects = () => {\n        iaxios.get(apiurl.LISTPROJECT).then((response) => {\n            setProjects(response.data);\n        });\n    }\n\n    useEffect(() => {\n        authUser(history, () => {\n            getProjects();\n        });\n        return () => {\n            setProjects([]);\n        };\n    }, [history]);\n\n    const showProject = (name?: string) => {\n        getProjects();\n        setCurrentProject(name);\n\n        let lurl = url.PROJECTS;\n        if (name)\n            lurl += name;\n        history.push(lurl);\n    }\n\n    return (\n        <Pane>\n            <Header projects />\n            <Pane className=\"projects\">\n                <ProjectList\n                    currentProject={currentProject}\n                    onSelect={showProject}\n                    projects={projects}\n                />\n                <Pane className={`content ${currentProject ? \"\" : \"empty\"}`} justifyContent=\"center\" alignItems=\"center\">\n                    {currentProject ?\n                        (projects.indexOf(currentProject) > -1 ?    \n                            <Project\n                            name={currentProject} \n                            showProject={showProject}\n                            /> :\n                            <EmptyState\n                            background=\"light\"\n                            title={`Project ${currentProject} not found`}\n                            orientation=\"vertical\"\n                            icon={<ProjectsIcon color=\"#C1C4D6\" />}\n                            iconBgColor=\"#EDEFF5\"\n                        />                            \n                        ) :\n                        <EmptyState\n                            background=\"light\"\n                            title=\"No project selected\"\n                            orientation=\"vertical\"\n                            icon={<ProjectsIcon color=\"#C1C4D6\" />}\n                            iconBgColor=\"#EDEFF5\"\n                        />}\n                </Pane>\n            </Pane>\n        </Pane>\n    );\n}","import { Pane, Heading, LayersIcon, Icon, TextInput, Button, Spinner, Text } from 'evergreen-ui'\nimport { useEffect, useState, createRef, FormEvent } from 'react'\nimport { useHistory, useParams } from 'react-router-dom';\nimport iaxios from '../axios';\nimport { url, apiurl } from '../url';\nimport { Header } from './elements/header'\nimport { authUser } from './login';\nimport { useDropzone } from 'react-dropzone';\nimport { toast } from 'react-toastify';\n\n\ninterface IDropzone {\n    submit: (layer_name: string, files: File[]) => void;\n};\n\nfunction Dropzone(props: IDropzone) {\n    const { acceptedFiles, getRootProps, getInputProps } = useDropzone();\n    const name = createRef<HTMLInputElement>();\n\n    const files = acceptedFiles.map(file => (\n        <li key={file.name}>\n            <span className=\"fileName\">{file.name}</span><span className=\"fileSize\">{file.size} bytes</span>\n        </li>\n    ));\n\n    const submit = (event: FormEvent) => {\n        event.preventDefault();\n        props.submit(name.current!.value, acceptedFiles);\n    }\n\n    return (\n        <Pane className=\"dropzoneContainer\">\n            <form onSubmit={submit} id=\"layerUploadForm\">\n                <TextInput placeholder=\"layer name\" ref={name} className=\"layerName\" />\n                <div {...getRootProps({ className: \"dropzone\" })}>\n                    <input {...getInputProps()} />\n                    <p>Click or drag 'n' drop layer files here</p>\n                    <ul className=\"filelist\">{files}</ul>\n                </div>\n            </form>\n            <Button appearance=\"primary\" type=\"submit\" form=\"layerUploadForm\">\n                Upload\n            </Button>\n        </Pane>\n    );\n}\n\n\n\nexport function UploadLayer() {\n    const { project_name } = useParams<{ project_name: string }>();\n    const history = useHistory();\n\n    const [progress, setProgress] = useState<number>(0);\n    const [uploading, setUploading] = useState<boolean>(false);\n\n    useEffect(() => {\n        authUser(history, () => { });\n    });\n\n    const submit = (layer_name: string, files: File[]) => {\n        if (uploading)\n            return;\n\n        if (layer_name === undefined || layer_name.length === 0)\n        {\n            toast('No name specified');\n            return;\n        }\n\n        if (files === undefined || files.length === 0)\n        {\n            toast('No files provided');\n            return;\n        }\n\n        setUploading(true);\n\n        let formData = new FormData();\n        formData.append(\"project\", project_name);\n        formData.append(\"layer\", layer_name);\n        files.forEach(dataset => {\n            formData.append(\"files\", dataset)\n        });\n\n        iaxios.post(apiurl.ADDLAYER, formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            },\n            onUploadProgress: progressEvent => setProgress(progressEvent.loaded / progressEvent.total * 100)\n        }).then((response) => {\n            history.push(url.JOBS);\n        })\n    }\n\n\n    return (\n        <Pane>\n            <Header projects />\n            <Pane className=\"upload\">\n                { uploading ?\n                    <Spinner/>\n                    :\n                    <Icon icon={LayersIcon} size={30} color=\"#C1C4D6\" background=\"#EDEFF5\" className=\"uploadIcon\" padding={20} borderRadius={40} />\n                }\n                <Heading className=\"uploadTitle\">Uploading Layer to Project {project_name}</Heading>\n                { uploading ?\n                    <Pane className=\"progress\">\n                        <Text className=\"label\">{progress.toFixed(0)}%</Text>\n                    </Pane> \n                    :\n                    <Dropzone submit={submit} />\n                }\n            </Pane>\n\n        </Pane>\n    );\n}","import { Pane, Table, CodeIcon, ApplicationIcon, IconButton, EmptyState, ConsoleIcon, SideSheet, Heading } from 'evergreen-ui'\nimport { useEffect, useState } from 'react'\nimport iaxios from '../../axios'\nimport { apiurl } from '../../url'\nimport ReactJson from 'react-json-view'\n\n\ninterface IJob {\n    type: string;\n    status: number;\n    project?: string;\n    job_id: string;\n}\n\nexport function JobList() {\n    const [jobs, setJobs] = useState<IJob[]>([]);\n    const [selectedJob, setSelectedJob] = useState<IJob | undefined>(undefined);\n    const [detailIsShown, setDetailIsShown] = useState(false)\n\n    \n    useEffect(() => {\n        let update: NodeJS.Timeout;\n\n        const loadJobs = () => {\n            iaxios.get(apiurl.LISTJOBS).then((response) => {\n                setJobs(response.data);\n                update = setTimeout(loadJobs, 2000);\n            });\n        }\n\n        loadJobs();\n        \n        return () => {\n            clearTimeout(update);\n            setJobs([]);\n        };\n    }, []);\n\n    return (\n        <Pane>\n            <SideSheet\n                isShown={detailIsShown}\n                onCloseComplete={() => setDetailIsShown(false)}\n                preventBodyScrolling>\n                <Pane className=\"jsonRaw\">\n                    <Heading className=\"jsonHeading\">Job {selectedJob?.job_id}</Heading>\n\n                    <Pane className=\"json\">\n                        <ReactJson \n                            src={selectedJob as object} \n                            enableClipboard={false}\n                            theme={{\n                                base00: \"#FFF\",\n                                base01: \"#DDD\",\n                                base02: \"#DDD\",\n                                base03: \"#444\",\n                                base04: \"#BBB\",\n                                base05: \"#444\",\n                                base06: \"#444\",\n                                base07: \"#444\",\n                                base08: \"#444\",\n                                base09: \"#3366FF\",\n                                base0A: \"#3366FF\",\n                                base0B: \"#3366FF\",\n                                base0C: \"#3366FF\",\n                                base0D: \"#BBB\",\n                                base0E: \"#BBB\",\n                                base0F: \"#3366FF\"\n                                //https://github.com/chriskempson/base16/blob/master/styling.md\n                            }}/>\n                    </Pane>\n                </Pane>\n            </SideSheet>\n            <Table>\n                <Table.Head className=\"row\">\n                    <Table.TextHeaderCell className=\"wide\">Job Type</Table.TextHeaderCell>\n                    <Table.TextHeaderCell className=\"wide\">Status</Table.TextHeaderCell>\n                    <Table.TextHeaderCell className=\"wide\">Project</Table.TextHeaderCell>\n                    <Table.TextHeaderCell className=\"narrow\">Log</Table.TextHeaderCell>\n                    <Table.TextHeaderCell className=\"narrow\">Raw</Table.TextHeaderCell>\n                </Table.Head>\n                <Table.Body>\n                    {jobs.length > 0 ? jobs.map((job) => (\n                        <Table.Row key={job.job_id} paddingY={12} height=\"auto\" className=\"row\">\n                            <Table.TextCell className=\"wide\">{job.type}</Table.TextCell>\n                            <Table.TextCell className=\"wide\">{job.status}</Table.TextCell>\n                            <Table.TextCell className=\"wide\">{job.project ? job.project : \"--\"}</Table.TextCell>\n                            <Table.TextCell className=\"narrow\">\n                                <IconButton icon={ApplicationIcon} onClick={() => {}} disabled/>\n                            </Table.TextCell>\n                            <Table.TextCell className=\"narrow\">\n                                <IconButton icon={CodeIcon} onClick={() => { setSelectedJob(job); setDetailIsShown(true); }} />\n                            </Table.TextCell>\n                        </Table.Row>\n                    )) :\n                        <EmptyState\n                            background=\"light\"\n                            title=\"No Running Jobs\"\n                            orientation=\"horizontal\"\n                            icon={<ConsoleIcon color=\"#C1C4D6\" />}\n                            iconBgColor=\"#EDEFF5\"\n                            description=\"Jobs run in the background and process input data into visualizable elements\"\n                        />\n                    }\n                </Table.Body>\n            </Table>\n        </Pane>\n    );\n}\n\n","import { Pane, Pre } from 'evergreen-ui'\nimport { useEffect, useState } from 'react'\nimport iaxios from '../../axios'\nimport { apiurl } from '../../url'\n\n\ninterface ILogProps {\n    name: string;\n}\n\nexport function Log(props: ILogProps) {\n    const [contents, setContents] = useState(\"\");\n\n    useEffect(() => {\n        let update: NodeJS.Timeout;\n\n        const loadLog = () => {\n            iaxios.post(apiurl.LOG, {\n                name: props.name\n            }).then((response) => {\n                setContents(response.data);\n                update = setTimeout(loadLog, 2000);\n            })\n        }\n\n        loadLog();\n        return () => {\n            setContents(\"\");\n            clearTimeout(update);\n        };\n    }, [props.name]);\n\n    return ( \n        <Pane className=\"logContents\">\n            { contents && contents.length > 0 ?\n                <Pre className=\"logLines\">{contents.split(/[\\r\\n]+/).map((line, index) => <span key={index}>{line}</span>)}</Pre>\n                :\n                <Pre>No contents</Pre>\n            }\n        </Pane>\n    );\n}\n\n","import { Pane, Tablist, Tab, EmptyState, ApplicationIcon } from 'evergreen-ui'\nimport { useEffect, useState } from 'react'\nimport { Log } from './log'\nimport iaxios from '../../axios'\nimport { apiurl } from '../../url'\n\n\nexport function LogList() {\n    const [logs, setLogs] = useState<string[]>([]);\n    const [selectedLog, setSelectedLog] = useState<string | undefined>(undefined);\n\n    \n    \n    useEffect(() => {\n        let update: NodeJS.Timeout;\n\n        const loadLogs = () => {\n            iaxios.get(apiurl.LISTLOGS).then((response) => {\n                setLogs(response.data);\n                update = setTimeout(loadLogs, 2000);\n            });\n        }\n\n        loadLogs();\n        return () => {\n            setLogs([]);\n            clearTimeout(update);\n        };\n    }, []);\n\n    return (\n        <Pane>\n            <Tablist className=\"logList\" marginBottom={16} flexBasis={240} marginRight={24}>\n                {logs.map((log, index) => (\n                    <Tab\n                        key={log}\n                        id={log}\n                        onSelect={() => setSelectedLog(log)}\n                        isSelected={log === selectedLog}\n                        aria-controls={`panel-${log}`}\n                        className=\"logTab\"\n                    >\n                        {log}\n                    </Tab>\n                ))}\n            </Tablist>\n            <Pane>\n                { selectedLog ?\n                    <Log name={selectedLog}/>\n                :\n                <EmptyState\n                    background=\"light\"\n                    title=\"No Log selected\"\n                    orientation=\"horizontal\"\n                    icon={<ApplicationIcon color=\"#C1C4D6\" />}\n                    iconBgColor=\"#EDEFF5\"\n                    description=\"Logs contain debug information for running processes\"\n                />\n                }\n            </Pane>\n        </Pane>\n    );\n}\n\n","import { Pane, Heading } from 'evergreen-ui'\nimport { useEffect} from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { Header } from './elements/header'\nimport { JobList } from './elements/jobs'\nimport { LogList } from './elements/logs'\nimport { authUser } from './login';\n\n\nexport function Jobs() {\n    const history = useHistory();\n\n    useEffect(() => {\n        authUser(history, () => { });\n    }, [history]);\n\n    return (\n        <Pane>\n            <Header jobs />\n            <Pane className=\"jobs\">\n                <Heading className=\"jobsHeading\">Jobs</Heading>\n                <JobList />\n            </Pane>\n            <Pane className=\"logs\">\n                <Heading className=\"logsHeading\">Logs</Heading>\n                <LogList />\n            </Pane>\n        </Pane>\n    );\n}","import { Pane, Heading, Icon, TextInput, Button, SelectMenu, MergeColumnsIcon, Tooltip, Paragraph, ArrowRightIcon, Code } from 'evergreen-ui'\nimport { useEffect, useState, createRef, FormEvent } from 'react'\nimport { useHistory, useParams } from 'react-router-dom';\nimport iaxios from '../axios';\nimport { apiurl } from '../url';\nimport { Header } from './elements/header'\nimport { authUser } from './login';\nimport { toast } from 'react-toastify';\nimport { ILayer } from './elements/layers';\n\n\n\nexport function Mapping() {\n    const { project_name } = useParams<{ project_name: string }>();\n    const [layers, setLayers] = useState<ILayer[]>([]);\n    const [selectedSource, setSelectedSource] = useState<string | undefined>(undefined);\n    const [selectedTarget, setSelectedTarget] = useState<string | undefined>(undefined);\n    const name = createRef<HTMLInputElement>();\n    const history = useHistory();\n\n\n    useEffect(() => {\n        authUser(history, () => {\n            iaxios.post(apiurl.LISTLAYER, { name: project_name }).then((response) => {\n                setLayers(response.data.filter((x: ILayer) => x.type === 'layer'));\n            });\n        })\n\n        return () => {\n            setLayers([]);\n        };\n    }, [project_name, history]);\n\n\n    const submit = (event: FormEvent) => {\n        event.preventDefault();\n\n        const overlay_name = name.current!.value;\n        if (overlay_name === undefined || overlay_name.length === 0)\n        {\n            toast.error('No name specified.');\n            return;\n        }\n\n        if (selectedSource === undefined || selectedTarget === undefined) {\n            toast.error('Please select source and target layer.');\n            return;\n        }\n\n        if (selectedSource === selectedTarget) {\n            toast.error('Source and target layer cannot be same.');\n            return;\n        }\n\n        iaxios.post(apiurl.MAPLAYERS, {\n                project: project_name,\n                source: selectedSource,\n                target: selectedTarget,\n                overlay: overlay_name\n            }).then(() => {\n                toast.success('Mapping layers successfully.');\n            }).catch(() => {\n                toast.error('Mapping layers failed.');\n            });\n    };\n\n\n    return (\n        <Pane>\n            <Header projects />\n            <Pane className=\"mapping\">\n                <Icon icon={MergeColumnsIcon} size={30} color=\"#C1C4D6\" background=\"#EDEFF5\" className=\"uploadIcon\" padding={20} borderRadius={40} />\n                <Heading className=\"mappingTitle\">Layer mapping in Project {project_name}</Heading>\n\n                <Pane className=\"mappingDialog\">\n                    <form onSubmit={submit} id=\"layerMappingForm\">\n                        <TextInput placeholder=\"overlay name\" ref={name} className=\"layerName\" />\n                        <Paragraph className=\"mappingDescription\">\n                            Geometry of source layer is mapped onto geometry of target layer. The output of this operation is a new layer with type <Code size={300}>overlay</Code>. The <Code size={300}>source</Code> layer can contain any geometry, the <Code size={300}>target</Code> layer must contain any <Code size={300}>polygons</Code>.\n                        </Paragraph>\n                        <Pane className=\"mappingLayerPicker\">\n                            <SelectMenu\n                                title=\"Select source layer\"\n                                options={layers.map((layer) => ({ label: layer.name, value: layer.name }))}\n                                selected={selectedSource}\n                                onSelect={(item) => setSelectedSource(item.value as string)}\n                            >\n                                <Tooltip content=\"Can contain 2D or 3D points, lines or polygons\">\n                                    <Button type=\"button\">{selectedSource || 'select source layer'}</Button>\n                                </Tooltip>\n                        </SelectMenu>\n                        <Pane className=\"dialogPart\">\n                            <Icon icon={ArrowRightIcon} color=\"#C1C4D6\"/>\n                        </Pane>\n                        <SelectMenu\n                            title=\"Select target layer\"\n                            options={layers.map((layer) => ({ label: layer.name, value: layer.name }))}\n                            selected={selectedTarget}\n                            onSelect={(item) => setSelectedTarget(item.value as string)}\n                        >\n                            <Tooltip content=\"Must contain 2D or 3D polygons\">\n                            <Button type=\"button\">{selectedTarget || 'select target layer'}</Button>\n                            </Tooltip>\n                        </SelectMenu>\n                        </Pane>\n                    </form>\n                    <Button appearance=\"primary\" type=\"submit\" form=\"layerMappingForm\">\n                        Apply Mapping\n                    </Button>\n                </Pane>\n            </Pane>\n        </Pane>\n    );\n}","import { Vector3, Matrix4 } from 'three';\n\nconst inverseProjectionMatrix = new Matrix4();\n\nclass Frustum {\n\n\tconstructor( data ) {\n\n\t\tdata = data || {};\n\n\t\tthis.vertices = {\n\t\t\tnear: [\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3()\n\t\t\t],\n\t\t\tfar: [\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3()\n\t\t\t]\n\t\t};\n\n\t\tif ( data.projectionMatrix !== undefined ) {\n\n\t\t\tthis.setFromProjectionMatrix( data.projectionMatrix, data.maxFar || 10000 );\n\n\t\t}\n\n\t}\n\n\tsetFromProjectionMatrix( projectionMatrix, maxFar ) {\n\n\t\tconst isOrthographic = projectionMatrix.elements[ 2 * 4 + 3 ] === 0;\n\n\t\tinverseProjectionMatrix.copy( projectionMatrix ).invert();\n\n\t\t// 3 --- 0  vertices.near/far order\n\t\t// |     |\n\t\t// 2 --- 1\n\t\t// clip space spans from [-1, 1]\n\n\t\tthis.vertices.near[ 0 ].set( 1, 1, - 1 );\n\t\tthis.vertices.near[ 1 ].set( 1, - 1, - 1 );\n\t\tthis.vertices.near[ 2 ].set( - 1, - 1, - 1 );\n\t\tthis.vertices.near[ 3 ].set( - 1, 1, - 1 );\n\t\tthis.vertices.near.forEach( function ( v ) {\n\n\t\t\tv.applyMatrix4( inverseProjectionMatrix );\n\n\t\t} );\n\n\t\tthis.vertices.far[ 0 ].set( 1, 1, 1 );\n\t\tthis.vertices.far[ 1 ].set( 1, - 1, 1 );\n\t\tthis.vertices.far[ 2 ].set( - 1, - 1, 1 );\n\t\tthis.vertices.far[ 3 ].set( - 1, 1, 1 );\n\t\tthis.vertices.far.forEach( function ( v ) {\n\n\t\t\tv.applyMatrix4( inverseProjectionMatrix );\n\n\t\t\tconst absZ = Math.abs( v.z );\n\t\t\tif ( isOrthographic ) {\n\n\t\t\t\tv.z *= Math.min( maxFar / absZ, 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\tv.multiplyScalar( Math.min( maxFar / absZ, 1.0 ) );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn this.vertices;\n\n\t}\n\n\tsplit( breaks, target ) {\n\n\t\twhile ( breaks.length > target.length ) {\n\n\t\t\ttarget.push( new Frustum() );\n\n\t\t}\n\n\t\ttarget.length = breaks.length;\n\n\t\tfor ( let i = 0; i < breaks.length; i ++ ) {\n\n\t\t\tconst cascade = target[ i ];\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tfor ( let j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\tcascade.vertices.near[ j ].copy( this.vertices.near[ j ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( let j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\tcascade.vertices.near[ j ].lerpVectors( this.vertices.near[ j ], this.vertices.far[ j ], breaks[ i - 1 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( i === breaks.length - 1 ) {\n\n\t\t\t\tfor ( let j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\tcascade.vertices.far[ j ].copy( this.vertices.far[ j ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( let j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\tcascade.vertices.far[ j ].lerpVectors( this.vertices.near[ j ], this.vertices.far[ j ], breaks[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoSpace( cameraMatrix, target ) {\n\n\t\tfor ( var i = 0; i < 4; i ++ ) {\n\n\t\t\ttarget.vertices.near[ i ]\n\t\t\t\t.copy( this.vertices.near[ i ] )\n\t\t\t\t.applyMatrix4( cameraMatrix );\n\n\t\t\ttarget.vertices.far[ i ]\n\t\t\t\t.copy( this.vertices.far[ i ] )\n\t\t\t\t.applyMatrix4( cameraMatrix );\n\n\t\t}\n\n\t}\n\n}\n\nexport { Frustum };\n","import { ShaderChunk } from 'three';\n\nconst CSMShader = {\n\tlights_fragment_begin: /* glsl */`\nGeometricContext geometry;\n\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n\n#ifdef CLEARCOAT\n\n\tgeometry.clearcoatNormal = clearcoatNormal;\n\n#endif\n\nIncidentLight directLight;\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0) && defined( RE_Direct ) && defined( USE_CSM ) && defined( CSM_CASCADES )\n\n\tDirectionalLight directionalLight;\n\tfloat linearDepth = (vViewPosition.z) / (shadowFar - cameraNear);\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#if defined( USE_SHADOWMAP ) && defined( CSM_FADE )\n\tvec2 cascade;\n\tfloat cascadeCenter;\n\tfloat closestEdge;\n\tfloat margin;\n\tfloat csmx;\n\tfloat csmy;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\n\t\t// NOTE: Depth gets larger away from the camera.\n\t\t// cascade.x is closer, cascade.y is further\n\t\tcascade = CSM_cascades[ i ];\n\t\tcascadeCenter = ( cascade.x + cascade.y ) / 2.0;\n\t\tclosestEdge = linearDepth < cascadeCenter ? cascade.x : cascade.y;\n\t\tmargin = 0.25 * pow( closestEdge, 2.0 );\n\t\tcsmx = cascade.x - margin / 2.0;\n\t\tcsmy = cascade.y + margin / 2.0;\n\t\tif( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS && linearDepth >= csmx && ( linearDepth < csmy || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 ) ) {\n\n\t\t\tfloat dist = min( linearDepth - csmx, csmy - linearDepth );\n\t\t\tfloat ratio = clamp( dist / margin, 0.0, 1.0 );\n\t\t\tif( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS ) {\n\n\t\t\t\tvec3 prevColor = directLight.color;\n\t\t\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\t\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t\t\t\tbool shouldFadeLastCascade = UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 && linearDepth > cascadeCenter;\n\t\t\t\tdirectLight.color = mix( prevColor, directLight.color, shouldFadeLastCascade ? ratio : 1.0 );\n\n\t\t\t}\n\n\t\t\tReflectedLight prevLight = reflectedLight;\n\t\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t\t\tbool shouldBlend = UNROLLED_LOOP_INDEX != CSM_CASCADES - 1 || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 && linearDepth < cascadeCenter;\n\t\t\tfloat blendRatio = shouldBlend ? ratio : 1.0;\n\n\t\t\treflectedLight.directDiffuse = mix( prevLight.directDiffuse, reflectedLight.directDiffuse, blendRatio );\n\t\t\treflectedLight.directSpecular = mix( prevLight.directSpecular, reflectedLight.directSpecular, blendRatio );\n\t\t\treflectedLight.indirectDiffuse = mix( prevLight.indirectDiffuse, reflectedLight.indirectDiffuse, blendRatio );\n\t\t\treflectedLight.indirectSpecular = mix( prevLight.indirectSpecular, reflectedLight.indirectSpecular, blendRatio );\n\n\t\t}\n\n\t}\n\t#pragma unroll_loop_end\n\t#else\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tif(linearDepth >= CSM_cascades[UNROLLED_LOOP_INDEX].x && linearDepth < CSM_cascades[UNROLLED_LOOP_INDEX].y) directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t\t#endif\n\n\t\tif(linearDepth >= CSM_cascades[UNROLLED_LOOP_INDEX].x && (linearDepth < CSM_cascades[UNROLLED_LOOP_INDEX].y || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1)) RE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct ) && !defined( USE_CSM ) && !defined( CSM_CASCADES )\n\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\n\tRectAreaLight rectAreaLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n\tvec3 iblIrradiance = vec3( 0.0 );\n\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n\n#endif\n`,\n\tlights_pars_begin: /* glsl */`\n#if defined( USE_CSM ) && defined( CSM_CASCADES )\nuniform vec2 CSM_cascades[CSM_CASCADES];\nuniform float cameraNear;\nuniform float shadowFar;\n#endif\n\t` + ShaderChunk.lights_pars_begin\n};\n\nexport { CSMShader };\n","import {\n\tVector2,\n\tVector3,\n\tDirectionalLight,\n\tMathUtils,\n\tShaderChunk,\n\tMatrix4,\n\tBox3\n} from 'three';\nimport { Frustum } from './Frustum.js';\nimport { CSMShader } from './CSMShader.js';\n\nconst _cameraToLightMatrix = new Matrix4();\nconst _lightSpaceFrustum = new Frustum();\nconst _center = new Vector3();\nconst _bbox = new Box3();\nconst _uniformArray = [];\nconst _logArray = [];\n\nexport class CSM {\n\n\tconstructor( data ) {\n\n\t\tdata = data || {};\n\n\t\tthis.camera = data.camera;\n\t\tthis.parent = data.parent;\n\t\tthis.cascades = data.cascades || 3;\n\t\tthis.maxFar = data.maxFar || 100000;\n\t\tthis.mode = data.mode || 'practical';\n\t\tthis.shadowMapSize = data.shadowMapSize || 2048;\n\t\tthis.shadowBias = [];\n\n\t\tfor(let i = 0; i < this.cascades; ++i)\n\t\t\tthis.shadowBias.push(data.shadowBias ? data.shadowBias[i] : 0.000001);\n\n\t\tthis.lightDirection = data.lightDirection || new Vector3( 1, - 1, 1 ).normalize();\n\t\tthis.lightIntensity = data.lightIntensity || 1;\n\t\tthis.lightNear = data.lightNear || 1;\n\t\tthis.lightFar = data.lightFar || 2000;\n\t\t\n\t\tthis.lightMargin = data.lightMargin || 200;\n\t\tthis.customSplitsCallback = data.customSplitsCallback;\n\t\tthis.fade = false;\n\t\tthis.mainFrustum = new Frustum();\n\t\tthis.frustums = [];\n\t\tthis.breaks = [];\n\n\t\tthis.lights = [];\n\t\tthis.shaders = new Map();\n\n\t\tthis.createLights();\n\t\tthis.updateFrustums();\n\t\tthis.injectInclude();\n\n\t}\n\n\tcreateLights() {\n\n\t\tfor ( let i = 0; i < this.cascades; i ++ ) {\n\n\t\t\tconst light = new DirectionalLight( 0xffffff, this.lightIntensity );\n\t\t\tlight.castShadow = true;\n\t\t\tlight.shadow.mapSize.width = this.shadowMapSize;\n\t\t\tlight.shadow.mapSize.height = this.shadowMapSize;\n\n\t\t\tlight.shadow.camera.near = this.lightNear;\n\t\t\tlight.shadow.camera.far = this.lightFar;\n\t\t\tlight.shadow.bias = this.shadowBias[i];\n\n\t\t\tthis.parent.add( light );\n\t\t\tthis.parent.add( light.target );\n\t\t\tthis.lights.push( light );\n\n\t\t}\n\n\t}\n\n\tinitCascades() {\n\n\t\tconst camera = this.camera;\n\t\tcamera.updateProjectionMatrix();\n\t\tthis.mainFrustum.setFromProjectionMatrix( camera.projectionMatrix, this.maxFar );\n\t\tthis.mainFrustum.split( this.breaks, this.frustums );\n\n\t}\n\n\tupdateShadowBounds() {\n\n\t\tconst frustums = this.frustums;\n\t\tfor ( let i = 0; i < frustums.length; i ++ ) {\n\n\t\t\tconst light = this.lights[ i ];\n\t\t\tconst shadowCam = light.shadow.camera;\n\t\t\tconst frustum = this.frustums[ i ];\n\n\t\t\t// Get the two points that represent that furthest points on the frustum assuming\n\t\t\t// that's either the diagonal across the far plane or the diagonal across the whole\n\t\t\t// frustum itself.\n\t\t\tconst nearVerts = frustum.vertices.near;\n\t\t\tconst farVerts = frustum.vertices.far;\n\t\t\tconst point1 = farVerts[ 0 ];\n\t\t\tlet point2;\n\t\t\tif ( point1.distanceTo( farVerts[ 2 ] ) > point1.distanceTo( nearVerts[ 2 ] ) ) {\n\n\t\t\t\tpoint2 = farVerts[ 2 ];\n\n\t\t\t} else {\n\n\t\t\t\tpoint2 = nearVerts[ 2 ];\n\n\t\t\t}\n\n\t\t\tlet squaredBBWidth = point1.distanceTo( point2 );\n\t\t\tif ( this.fade ) {\n\n\t\t\t\t// expand the shadow extents by the fade margin if fade is enabled.\n\t\t\t\tconst camera = this.camera;\n\t\t\t\tconst far = Math.max( camera.far, this.maxFar );\n\t\t\t\tconst linearDepth = frustum.vertices.far[ 0 ].z / ( far - camera.near );\n\t\t\t\tconst margin = 0.25 * Math.pow( linearDepth, 2.0 ) * ( far - camera.near );\n\t\t\t\tsquaredBBWidth += margin;\n\n\t\t\t}\n\n\t\t\tshadowCam.left = - squaredBBWidth / 2;\n\t\t\tshadowCam.right = squaredBBWidth / 2;\n\t\t\tshadowCam.top = squaredBBWidth / 2;\n\t\t\tshadowCam.bottom = - squaredBBWidth / 2;\n\t\t\tshadowCam.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n\tgetBreaks() {\n\n\t\tconst camera = this.camera;\n\t\tconst far = Math.min( camera.far, this.maxFar );\n\t\tthis.breaks.length = 0;\n\n\t\tswitch ( this.mode ) {\n\n\t\t\tcase 'uniform':\n\t\t\t\tuniformSplit( this.cascades, camera.near, far, this.breaks );\n\t\t\t\tbreak;\n\t\t\tcase 'logarithmic':\n\t\t\t\tlogarithmicSplit( this.cascades, camera.near, far, this.breaks );\n\t\t\t\tbreak;\n\t\t\tcase 'practical':\n\t\t\t\tpracticalSplit( this.cascades, camera.near, far, 0.8, this.breaks );\n\t\t\t\tbreak;\n\t\t\tcase 'custom':\n\t\t\t\tif ( this.customSplitsCallback === undefined ) console.error( 'CSM: Custom split scheme callback not defined.' );\n\t\t\t\tthis.customSplitsCallback( this.cascades, camera.near, far, this.breaks );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tfunction uniformSplit( amount, near, far, target ) {\n\n\t\t\tfor ( let i = 1; i < amount; i ++ ) {\n\n\t\t\t\ttarget.push( ( near + ( far - near ) * i / amount ) / far );\n\n\t\t\t}\n\n\t\t\ttarget.push( 1 );\n\n\t\t}\n\n\t\tfunction logarithmicSplit( amount, near, far, target ) {\n\n\t\t\tfor ( let i = 1; i < amount; i ++ ) {\n\n\t\t\t\ttarget.push( ( near * ( far / near ) ** ( i / amount ) ) / far );\n\n\t\t\t}\n\n\t\t\ttarget.push( 1 );\n\n\t\t}\n\n\t\tfunction practicalSplit( amount, near, far, lambda, target ) {\n\n\t\t\t_uniformArray.length = 0;\n\t\t\t_logArray.length = 0;\n\t\t\tlogarithmicSplit( amount, near, far, _logArray );\n\t\t\tuniformSplit( amount, near, far, _uniformArray );\n\n\t\t\tfor ( let i = 1; i < amount; i ++ ) {\n\n\t\t\t\ttarget.push( MathUtils.lerp( _uniformArray[ i - 1 ], _logArray[ i - 1 ], lambda ) );\n\n\t\t\t}\n\n\t\t\ttarget.push( 1 );\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst camera = this.camera;\n\t\tconst frustums = this.frustums;\n\t\tfor ( let i = 0; i < frustums.length; i ++ ) {\n\n\t\t\tconst light = this.lights[ i ];\n\t\t\tconst shadowCam = light.shadow.camera;\n\t\t\tconst texelWidth = ( shadowCam.right - shadowCam.left ) / this.shadowMapSize;\n\t\t\tconst texelHeight = ( shadowCam.top - shadowCam.bottom ) / this.shadowMapSize;\n\t\t\tlight.shadow.camera.updateMatrixWorld( true );\n\t\t\t_cameraToLightMatrix.multiplyMatrices( light.shadow.camera.matrixWorldInverse, camera.matrixWorld );\n\t\t\tfrustums[ i ].toSpace( _cameraToLightMatrix, _lightSpaceFrustum );\n\n\t\t\tconst nearVerts = _lightSpaceFrustum.vertices.near;\n\t\t\tconst farVerts = _lightSpaceFrustum.vertices.far;\n\t\t\t_bbox.makeEmpty();\n\t\t\tfor ( let j = 0; j < 4; j ++ ) {\n\n\t\t\t\t_bbox.expandByPoint( nearVerts[ j ] );\n\t\t\t\t_bbox.expandByPoint( farVerts[ j ] );\n\n\t\t\t}\n\n\t\t\t_bbox.getCenter( _center );\n\t\t\t_center.z = _bbox.max.z + this.lightMargin;\n\t\t\t_center.x = Math.floor( _center.x / texelWidth ) * texelWidth;\n\t\t\t_center.y = Math.floor( _center.y / texelHeight ) * texelHeight;\n\t\t\t_center.applyMatrix4( light.shadow.camera.matrixWorld );\n\n\t\t\tlight.position.copy( _center );\n\t\t\tlight.target.position.copy( _center );\n\n\t\t\tlight.target.position.x += this.lightDirection.x;\n\t\t\tlight.target.position.y += this.lightDirection.y;\n\t\t\tlight.target.position.z += this.lightDirection.z;\n\n\t\t}\n\n\t}\n\n\tinjectInclude() {\n\n\t\tShaderChunk.lights_fragment_begin = CSMShader.lights_fragment_begin;\n\t\tShaderChunk.lights_pars_begin = CSMShader.lights_pars_begin;\n\n\t}\n\n\tsetupMaterial( material ) {\n\n\t\tmaterial.defines = material.defines || {};\n\t\tmaterial.defines.USE_CSM = 1;\n\t\tmaterial.defines.CSM_CASCADES = this.cascades;\n\n\t\tif ( this.fade ) {\n\n\t\t\tmaterial.defines.CSM_FADE = '';\n\n\t\t}\n\n\t\tconst breaksVec2 = [];\n\t\tconst scope = this;\n\t\tconst shaders = this.shaders;\n\n\t\tmaterial.onBeforeCompile = function ( shader ) {\n\n\t\t\tconst far = Math.min( scope.camera.far, scope.maxFar );\n\t\t\tscope.getExtendedBreaks( breaksVec2 );\n\n\t\t\tshader.uniforms.CSM_cascades = { value: breaksVec2 };\n\t\t\tshader.uniforms.cameraNear = { value: scope.camera.near };\n\t\t\tshader.uniforms.shadowFar = { value: far };\n\n\t\t\tshaders.set( material, shader );\n\n\t\t};\n\n\t\tshaders.set( material, null );\n\n\t}\n\n\tupdateUniforms() {\n\n\t\tconst far = Math.min( this.camera.far, this.maxFar );\n\t\tconst shaders = this.shaders;\n\n\t\tshaders.forEach( function ( shader, material ) {\n\n\t\t\tif ( shader !== null ) {\n\n\t\t\t\tconst uniforms = shader.uniforms;\n\t\t\t\tthis.getExtendedBreaks( uniforms.CSM_cascades.value );\n\t\t\t\tuniforms.cameraNear.value = this.camera.near;\n\t\t\t\tuniforms.shadowFar.value = far;\n\n\t\t\t}\n\n\t\t\tif ( ! this.fade && 'CSM_FADE' in material.defines ) {\n\n\t\t\t\tdelete material.defines.CSM_FADE;\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( this.fade && ! ( 'CSM_FADE' in material.defines ) ) {\n\n\t\t\t\tmaterial.defines.CSM_FADE = '';\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}, this );\n\n\t}\n\n\tgetExtendedBreaks( target ) {\n\n\t\twhile ( target.length < this.breaks.length ) {\n\n\t\t\ttarget.push( new Vector2() );\n\n\t\t}\n\n\t\ttarget.length = this.breaks.length;\n\n\t\tfor ( let i = 0; i < this.cascades; i ++ ) {\n\n\t\t\tconst amount = this.breaks[ i ];\n\t\t\tconst prev = this.breaks[ i - 1 ] || 0;\n\t\t\ttarget[ i ].x = prev;\n\t\t\ttarget[ i ].y = amount;\n\n\t\t}\n\n\t}\n\n\tupdateFrustums() {\n\n\t\tthis.getBreaks();\n\t\tthis.initCascades();\n\t\tthis.updateShadowBounds();\n\t\tthis.updateUniforms();\n\n\t}\n\n\tremove() {\n\n\t\tfor ( let i = 0; i < this.lights.length; i ++ ) {\n\n\t\t\tthis.parent.remove( this.lights[ i ] );\n\n\t\t}\n\n\t}\n\n\tdispose() {\n\n\t\tconst shaders = this.shaders;\n\t\tshaders.forEach( function ( shader, material ) {\n\n\t\t\tdelete material.onBeforeCompile;\n\t\t\tdelete material.defines.USE_CSM;\n\t\t\tdelete material.defines.CSM_CASCADES;\n\t\t\tdelete material.defines.CSM_FADE;\n\n\t\t\tif ( shader !== null ) {\n\n\t\t\t\tdelete shader.uniforms.CSM_cascades;\n\t\t\t\tdelete shader.uniforms.cameraNear;\n\t\t\t\tdelete shader.uniforms.shadowFar;\n\n\t\t\t}\n\n\t\t\tmaterial.needsUpdate = true;\n\n\t\t} );\n\t\tshaders.clear();\n\n\t}\n\n}\n","import {\n\tGroup,\n\tMesh,\n\tLineSegments,\n\tBufferGeometry,\n\tLineBasicMaterial,\n\tBox3Helper,\n\tBox3,\n\tPlaneGeometry,\n\tMeshBasicMaterial,\n\tBufferAttribute,\n\tDoubleSide\n} from 'three';\n\nclass CSMHelper extends Group {\n\n\tconstructor( csm ) {\n\n\t\tsuper();\n\t\tthis.csm = csm;\n\t\tthis.displayFrustum = true;\n\t\tthis.displayPlanes = true;\n\t\tthis.displayShadowBounds = true;\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 24 );\n\t\tconst frustumGeometry = new BufferGeometry();\n\t\tfrustumGeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tfrustumGeometry.setAttribute( 'position', new BufferAttribute( positions, 3, false ) );\n\t\tconst frustumLines = new LineSegments( frustumGeometry, new LineBasicMaterial() );\n\t\tthis.add( frustumLines );\n\n\t\tthis.frustumLines = frustumLines;\n\t\tthis.cascadeLines = [];\n\t\tthis.cascadePlanes = [];\n\t\tthis.shadowLines = [];\n\n\t}\n\n\tupdateVisibility() {\n\n\t\tconst displayFrustum = this.displayFrustum;\n\t\tconst displayPlanes = this.displayPlanes;\n\t\tconst displayShadowBounds = this.displayShadowBounds;\n\n\t\tconst frustumLines = this.frustumLines;\n\t\tconst cascadeLines = this.cascadeLines;\n\t\tconst cascadePlanes = this.cascadePlanes;\n\t\tconst shadowLines = this.shadowLines;\n\t\tfor ( let i = 0, l = cascadeLines.length; i < l; i ++ ) {\n\n\t\t\tconst cascadeLine = cascadeLines[ i ];\n\t\t\tconst cascadePlane = cascadePlanes[ i ];\n\t\t\tconst shadowLineGroup = shadowLines[ i ];\n\n\t\t\tcascadeLine.visible = displayFrustum;\n\t\t\tcascadePlane.visible = displayFrustum && displayPlanes;\n\t\t\tshadowLineGroup.visible = displayShadowBounds;\n\n\t\t}\n\n\t\tfrustumLines.visible = displayFrustum;\n\n\t}\n\n\tupdate() {\n\n\t\tconst csm = this.csm;\n\t\tconst camera = csm.camera;\n\t\tconst cascades = csm.cascades;\n\t\tconst mainFrustum = csm.mainFrustum;\n\t\tconst frustums = csm.frustums;\n\t\tconst lights = csm.lights;\n\n\t\tconst frustumLines = this.frustumLines;\n\t\tconst frustumLinePositions = frustumLines.geometry.getAttribute( 'position' );\n\t\tconst cascadeLines = this.cascadeLines;\n\t\tconst cascadePlanes = this.cascadePlanes;\n\t\tconst shadowLines = this.shadowLines;\n\n\t\tthis.position.copy( camera.position );\n\t\tthis.quaternion.copy( camera.quaternion );\n\t\tthis.scale.copy( camera.scale );\n\t\tthis.updateMatrixWorld( true );\n\n\t\twhile ( cascadeLines.length > cascades ) {\n\n\t\t\tthis.remove( cascadeLines.pop() );\n\t\t\tthis.remove( cascadePlanes.pop() );\n\t\t\tthis.remove( shadowLines.pop() );\n\n\t\t}\n\n\t\twhile ( cascadeLines.length < cascades ) {\n\n\t\t\tconst cascadeLine = new Box3Helper( new Box3(), 0x000000 );\n\t\t\tconst planeMat = new MeshBasicMaterial( { color: 0x000000, transparent: true, opacity: 0.1, depthWrite: false, side: DoubleSide } );\n\t\t\tconst cascadePlane = new Mesh( new PlaneGeometry(), planeMat );\n\t\t\tconst shadowLineGroup = new Group();\n\t\t\tconst shadowLine = new Box3Helper( new Box3(), 0xff0000 );\n\t\t\tshadowLineGroup.add( shadowLine );\n\n\t\t\tthis.add( cascadeLine );\n\t\t\tthis.add( cascadePlane );\n\t\t\tthis.add( shadowLineGroup );\n\n\t\t\tcascadeLines.push( cascadeLine );\n\t\t\tcascadePlanes.push( cascadePlane );\n\t\t\tshadowLines.push( shadowLineGroup );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < cascades; i ++ ) {\n\n\t\t\tconst frustum = frustums[ i ];\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadowCam = light.shadow.camera;\n\t\t\tconst farVerts = frustum.vertices.far;\n\n\t\t\tconst cascadeLine = cascadeLines[ i ];\n\t\t\tconst cascadePlane = cascadePlanes[ i ];\n\t\t\tconst shadowLineGroup = shadowLines[ i ];\n\t\t\tconst shadowLine = shadowLineGroup.children[ 0 ];\n\n\t\t\tcascadeLine.box.min.copy( farVerts[ 2 ] );\n\t\t\tcascadeLine.box.max.copy( farVerts[ 0 ] );\n\t\t\tcascadeLine.box.max.z += 1e-4;\n\n\t\t\tcascadePlane.position.addVectors( farVerts[ 0 ], farVerts[ 2 ] );\n\t\t\tcascadePlane.position.multiplyScalar( 0.5 );\n\t\t\tcascadePlane.scale.subVectors( farVerts[ 0 ], farVerts[ 2 ] );\n\t\t\tcascadePlane.scale.z = 1e-4;\n\n\t\t\tthis.remove( shadowLineGroup );\n\t\t\tshadowLineGroup.position.copy( shadowCam.position );\n\t\t\tshadowLineGroup.quaternion.copy( shadowCam.quaternion );\n\t\t\tshadowLineGroup.scale.copy( shadowCam.scale );\n\t\t\tshadowLineGroup.updateMatrixWorld( true );\n\t\t\tthis.attach( shadowLineGroup );\n\n\t\t\tshadowLine.box.min.set( shadowCam.bottom, shadowCam.left, - shadowCam.far );\n\t\t\tshadowLine.box.max.set( shadowCam.top, shadowCam.right, - shadowCam.near );\n\n\t\t}\n\n\t\tconst nearVerts = mainFrustum.vertices.near;\n\t\tconst farVerts = mainFrustum.vertices.far;\n\t\tfrustumLinePositions.setXYZ( 0, farVerts[ 0 ].x, farVerts[ 0 ].y, farVerts[ 0 ].z );\n\t\tfrustumLinePositions.setXYZ( 1, farVerts[ 3 ].x, farVerts[ 3 ].y, farVerts[ 3 ].z );\n\t\tfrustumLinePositions.setXYZ( 2, farVerts[ 2 ].x, farVerts[ 2 ].y, farVerts[ 2 ].z );\n\t\tfrustumLinePositions.setXYZ( 3, farVerts[ 1 ].x, farVerts[ 1 ].y, farVerts[ 1 ].z );\n\n\t\tfrustumLinePositions.setXYZ( 4, nearVerts[ 0 ].x, nearVerts[ 0 ].y, nearVerts[ 0 ].z );\n\t\tfrustumLinePositions.setXYZ( 5, nearVerts[ 3 ].x, nearVerts[ 3 ].y, nearVerts[ 3 ].z );\n\t\tfrustumLinePositions.setXYZ( 6, nearVerts[ 2 ].x, nearVerts[ 2 ].y, nearVerts[ 2 ].z );\n\t\tfrustumLinePositions.setXYZ( 7, nearVerts[ 1 ].x, nearVerts[ 1 ].y, nearVerts[ 1 ].z );\n\t\tfrustumLinePositions.needsUpdate = true;\n\n\t}\n\n}\n\nexport { CSMHelper };\n","import * as THREE from 'three';\n\n\nexport class GPUPickHelper {\n    pickingTexture: THREE.WebGLRenderTarget;\n    pixelBuffer: Uint8Array;\n    renderer: THREE.WebGLRenderer;\n\n    selected: number[];\n    id: number;\n\n    offsets: Map<string, [number, number]>;\n    maxOffest: number;\n\n\n    constructor(renderer: THREE.WebGLRenderer) {\n        // create a 1x1 pixel render target\n        this.pickingTexture = new THREE.WebGLRenderTarget(1, 1);\n        this.pixelBuffer = new Uint8Array(4);\n        this.renderer = renderer;\n        this.selected = [-1, -1, -1, -1];\n        this.id = -1;\n        this.offsets = new Map();\n        this.maxOffest = 0;\n    }\n\n    offsetForLayer(name: string, size: number = -1) {\n        if (!this.offsets.has(name))\n        {\n            if (size === -1)\n            {\n                throw new Error(`Layer ${name} not registered.`);    \n                //return undefined;\n            }\n\n            this.offsets.set(name, [this.maxOffest, this.maxOffest + size]);\n            this.maxOffest += size;\n        }\n\n        let range = this.offsets.get(name);\n        return (range as [number, number])[0];\n    }\n\n    layerAndOidForId(id: number) {\n        for (const [layer, range] of this.offsets.entries()) {\n            if (id >= range[0] && id < range[1])\n                return {\n                    layer: layer,\n                    oid: id - range[0]\n                };\n        }\n    }\n\n    select(oid: number) {\n        this.id = oid;\n        const oid_array = new Uint32Array([oid]);\n        const oid_view = new DataView(oid_array.buffer);\n        this.selected = [oid_view.getUint8(0) / 255, oid_view.getUint8(1) / 255, oid_view.getUint8(2) / 255, oid_view.getUint8(3) / 255];\n    }\n\n    pick(x: number, y: number, scene: THREE.Scene, camera: THREE.OrthographicCamera | THREE.PerspectiveCamera) {\n        const { pickingTexture, pixelBuffer } = this;\n\n        // set the view offset to represent just a single pixel under the mouse\n        const pixelRatio = this.renderer.getPixelRatio();\n        camera.setViewOffset(\n            this.renderer.getContext().drawingBufferWidth,\n            this.renderer.getContext().drawingBufferHeight,\n            x * pixelRatio | 0,\n            y * pixelRatio | 0,\n            1,\n            1,\n        );\n        // render the scene\n        this.renderer.setRenderTarget(pickingTexture)\n        this.renderer.render(scene, camera);\n        this.renderer.setRenderTarget(null);\n\n        // clear the view offset so rendering returns to normal\n        camera.clearViewOffset();\n\n        //read the pixel\n        this.renderer.readRenderTargetPixels(\n            pickingTexture,\n            0,   // x\n            0,   // y\n            1,   // width\n            1,   // height\n            pixelBuffer);\n\n        this.selected = [pixelBuffer[0] / 255, pixelBuffer[1] / 255, pixelBuffer[2] / 255, pixelBuffer[3] / 255];\n        this.id = new DataView(pixelBuffer.buffer).getUint32(0, true);\n        return this.id;\n    }\n}","import * as THREE from 'three';\nimport { CSM } from 'three/examples/jsm/csm/CSM';\n\nexport const PHONG_SELECT_VERT = `\n#define PHONG\n\nvarying vec3 vViewPosition;\n\nuniform vec4 selectedID;\n\nattribute vec4 objectID;\nattribute vec3 color;\nvarying float varyingObjectID;\nvarying vec3 colorFrag;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n    int marked = 1;\n\n    for(int i = 0; i < 4; ++i)\n        marked *= int(floor(selectedID[i] * 255.0 + 0.5) == floor(objectID[i] * 255.0 + 0.5));\n\n    varyingObjectID = float(marked);\n\tcolorFrag = color;\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n`;\n\n\nexport const PHONG_SELECT_FRAG = `\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\nvarying float varyingObjectID;\nvarying vec3 colorFrag;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4(diffuse, opacity);\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = clamp(reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance, 0.75, 1.0) * colorFrag;\n\t\n\tif (varyingObjectID > 0.5) \n\t\toutgoingLight -= vec3(0.0, 0.6, 0.6); \n\n\n\t//outgoingLight -= vec3(0.8);\n\t//vec3 shade = outgoingLight;\n\t//const vec3 slices = vec3(10.0);\n\t//const vec3 slices_inv = vec3(1.0) / slices;\n\t//outgoingLight *= vec3(5.0);\n\t//outgoingLight *= slices;\n\t//outgoingLight = floor(outgoingLight + vec3(0.5));\n\t//outgoingLight *= slices_inv;\n\t//outgoingLight = pow(outgoingLight, vec3(0.4));\n\t//outgoingLight *= vec3(0.3);\n\t//outgoingLight += vec3(0.7);\n\n\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n\n\nexport function polygonSelectMaterial() {\n\n\tconst customUniforms = THREE.UniformsUtils.merge([\n\t\tTHREE.ShaderLib.phong.uniforms,\n\t\t{ selectedID: { value: [-1, -1, -1, -1] } }\n\t]);\n\n\treturn new THREE.ShaderMaterial({\n\t\tuniforms: customUniforms,\n\t\tvertexShader: PHONG_SELECT_VERT,\n\t\tfragmentShader: PHONG_SELECT_FRAG,\n\t\tlights: true,\n\t\tside: THREE.DoubleSide,\n\t\tname: 'custom-polygon-material'\n\t});\n}\n\nexport const PHONG_LINE_VERT = `\n#define PHONG\n\nvarying vec3 vViewPosition;\n\nattribute vec3 lineStart;\nattribute vec3 lineEnd;\nattribute vec3 color;\nattribute vec4 objectID;\n\nuniform float zoffset;\nuniform vec4 selectedID;\nuniform float thickness;\n\nvarying float varyingObjectID;\nvarying vec3 colorFrag;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n/**\n * Create rotation matrix from field vector.\n * The returned matrix can rotate vector (1, 0, 0)\n * into the desired setup.\n */\nmat4 getRotationMat(vec3 vector)\n{\n\tvec3 unit = vec3(1, 0, 0);\n\tvec3 f = normalize(vector);\n\tvec3 cross = cross(f, unit);\n\tvec3 a = normalize(cross);\n\tfloat s = length(cross);\n\tfloat c = dot(f, unit);\n\tfloat oc = 1.0 - c;\n\treturn mat4(oc * a.x * a.x + c,        oc * a.x * a.y - a.z * s,  oc * a.z * a.x + a.y * s,  0.0,\n                oc * a.x * a.y + a.z * s,  oc * a.y * a.y + c,        oc * a.y * a.z - a.x * s,  0.0,\n                oc * a.z * a.x - a.y * s,  oc * a.y * a.z + a.x * s,  oc * a.z * a.z + c,        0.0,\n                0.0,                       0.0,                       0.0,                       1.0);\n\n}\n\nvoid main() {\n    int marked = 1;\n\n    for(int i = 0; i < 4; ++i)\n        marked *= int(floor(selectedID[i] * 255.0 + 0.5) == floor(objectID[i] * 255.0 + 0.5));\n\n    varyingObjectID = float(marked);\n\tcolorFrag = color;\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\n\t#include <begin_vertex> //transformed contains location\n\n\tvec3 dir = lineEnd - lineStart;\n    float dist = length(dir);\n    mat4 rot = getRotationMat(dir);\n\n\tfloat end = float(transformed.x >= 0.9);\n\ttransformed.x = end * (dist + (transformed.x - 1.0) * thickness) + (1.0 - end) * transformed.x * thickness; //subtract one because its the original length of the template line\n\ttransformed.y *= thickness;\n\n    transformed = lineStart + (rot * vec4(transformed, 1.0)).xyz;\n\ttransformed.z += zoffset;\n\n\tif (varyingObjectID > 0.5)\n\t\ttransformed.z += zoffset;\n\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = -mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n`;\n\n\nexport const PHONG_LINE_FRAG = `\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\nvarying float varyingObjectID;\nvarying vec3 colorFrag;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\t//vec4 diffuseColor = vec4(diffuse, opacity);\n\t//ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t//vec3 totalEmissiveRadiance = emissive;\n\n\t//#include <logdepthbuf_fragment>\n\t//#include <map_fragment>\n\t//#include <color_fragment>\n\t//#include <alphamap_fragment>\n\t//#include <alphatest_fragment>\n\t//#include <specularmap_fragment>\n\t//#include <normal_fragment_begin>\n\t//#include <normal_fragment_maps>\n\t//#include <emissivemap_fragment>\n\n\t// accumulation\n\t//#include <lights_phong_fragment>\n\t//#include <lights_fragment_begin>\n\t//#include <lights_fragment_maps>\n\t//#include <lights_fragment_end>\n\n\t// modulation\n\t//#include <aomap_fragment>\n\n\t//vec3 outgoingLight = clamp(reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance, 0.75, 1.0) * colorFrag;\n\tvec3 outgoingLight = colorFrag;\n\n\t\n\tif (varyingObjectID > 0.5) \n\t\toutgoingLight -= vec3(0.0, 0.6, 0.6); \n\n\n\t//#include <envmap_fragment>\n\t//#include <output_fragment>\n\t//the output is replaced by the segment bellow\n\tgl_FragColor = vec4( outgoingLight, 1.0 );\n\n\t//#include <tonemapping_fragment>\n\t//#include <encodings_fragment>\n\t//#include <fog_fragment>\n\t//#include <premultiplied_alpha_fragment>\n\t//#include <dithering_fragment>\n}\n`;\n\n\nexport function lineMaterial() {\n\tconst customUniforms = THREE.UniformsUtils.merge([\n\t\t//THREE.ShaderLib.phong.uniforms,\n\t\t{ zoffset: { value: 1 } },\n\t\t{ thickness: { value: 1 } },\n\t\t{ selectedID: { value: [-1, -1, -1, -1] } }\n\t]);\n\n\treturn new THREE.ShaderMaterial({\n\t\tuniforms: customUniforms,\n\t\tvertexShader: PHONG_LINE_VERT,\n\t\tfragmentShader: PHONG_LINE_FRAG,\n\t\tside: THREE.DoubleSide,\n\t\t//lights: true,\n\t\tname: 'custom-line-material'\n\t});\n}\n\n\nexport const PHONG_POINT_SELECT_VERT = `\n#define PHONG\n\nvarying vec3 vViewPosition;\n\nuniform vec4 selectedID;\nuniform float pointSize;\n\nattribute vec3 location;\nattribute vec4 objectID;\nattribute vec3 color;\n\nvarying float varyingObjectID;\nvarying vec3 colorFrag;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n    int marked = 1;\n\n    for(int i = 0; i < 4; ++i)\n        marked *= int(floor(selectedID[i] * 255.0 + 0.5) == floor(objectID[i] * 255.0 + 0.5));\n\n    varyingObjectID = float(marked);\n\tcolorFrag = color;\n\n\t//#include <uv_vertex>\n\t//#include <uv2_vertex>\n\t//#include <color_vertex>\n\n\t//#include <beginnormal_vertex>\n\t//#include <morphnormal_vertex>\n\t//#include <skinbase_vertex>\n\t//#include <skinnormal_vertex>\n\t//#include <defaultnormal_vertex>\n\t//#include <normal_vertex>\n\n\t#include <begin_vertex>\n\n\ttransformed *= pointSize;\n\ttransformed += location;\n\n\t//#include <morphtarget_vertex>\n\t//#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t//#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t//#include <envmap_vertex>\n\t//#include <shadowmap_vertex>\n\t//#include <fog_vertex>\n}\n`;\n\n\nexport const PHONG_POINT_SELECT_FRAG = `\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\nvarying float varyingObjectID;\nvarying vec3 colorFrag;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\t//vec4 diffuseColor = vec4(diffuse, opacity);\n\t//ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t//vec3 totalEmissiveRadiance = emissive;\n\n\t//#include <logdepthbuf_fragment>\n\t//#include <map_fragment>\n\t//#include <color_fragment>\n\t//#include <alphamap_fragment>\n\t//#include <alphatest_fragment>\n\t//#include <specularmap_fragment>\n\t//#include <normal_fragment_begin>\n\t//#include <normal_fragment_maps>\n\t//#include <emissivemap_fragment>\n\n\t// accumulation\n\t//#include <lights_phong_fragment>\n\t//#include <lights_fragment_begin>\n\t//#include <lights_fragment_maps>\n\t//#include <lights_fragment_end>\n\n\t// modulation\n\t//#include <aomap_fragment>\n\n\t//vec3 outgoingLight = clamp(reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance, 0.75, 1.0) * colorFrag;\n\tvec3 outgoingLight = colorFrag;\n\n\t\n\tif (varyingObjectID > 0.5) \n\t\toutgoingLight -= vec3(0.0, 0.6, 0.6); \n\n\n\t//#include <envmap_fragment>\n\t//#include <output_fragment>\n\t//the output is replaced by the segment bellow\n\tgl_FragColor = vec4( outgoingLight, 1.0 );\n\n\t//#include <tonemapping_fragment>\n\t//#include <encodings_fragment>\n\t//#include <fog_fragment>\n\t//#include <premultiplied_alpha_fragment>\n\t//#include <dithering_fragment>\n}\n`;\n\n\nexport function pointSelectMaterial() {\n\n\tconst customUniforms = THREE.UniformsUtils.merge([\n\t\tTHREE.ShaderLib.phong.uniforms,\n\t\t{ selectedID: { value: [-1, -1, -1, -1] } },\n\t\t{ pointSize: { value: 1 } },\n\t]);\n\n\treturn new THREE.ShaderMaterial({\n\t\tuniforms: customUniforms,\n\t\tvertexShader: PHONG_POINT_SELECT_VERT,\n\t\tfragmentShader: PHONG_POINT_SELECT_FRAG,\n\t\tlights: true,\n\t\tside: THREE.DoubleSide,\n\t\tname: 'custom-point-material'\n\t});\n}\n\nexport const PICK_VERT = `\nattribute vec4 objectID;\nvarying vec4 objectIDColor;\n\nvoid main() {\n    objectIDColor = objectID;\n    gl_Position = projectionMatrix * (modelViewMatrix * vec4( position, 1.0 ));\n}\n`;\n\n\nexport const PICK_FRAG = `\nvarying vec4 objectIDColor;\n\nvoid main() {\n\tgl_FragColor = vec4(objectIDColor);\n}\n`;\n\n\nexport function pickingMaterial() {\n\n\tconst customUniforms = THREE.UniformsUtils.merge([]);\n\n\treturn new THREE.ShaderMaterial({\n\t\tuniforms: customUniforms,\n\t\tvertexShader: PICK_VERT,\n\t\tfragmentShader: PICK_FRAG,\n\t\tside: THREE.DoubleSide,\n\t\tname: 'custom-picking-material'\n\t});\n}\n\n\nexport const PICK_LINE_VERT = `\nattribute vec4 objectID;\nattribute vec3 lineStart;\nattribute vec3 lineEnd;\n\nuniform float zoffset;\nuniform float thickness;\n\nvarying vec4 objectIDColor;\n\n\n/**\n * Create rotation matrix from field vector.\n * The returned matrix can rotate vector (1, 0, 0)\n * into the desired setup.\n */\nmat4 getRotationMat(vec3 vector)\n{\n\tvec3 unit = vec3(1, 0, 0);\n\tvec3 f = normalize(vector);\n\tvec3 cross = cross(f, unit);\n\tvec3 a = normalize(cross);\n\tfloat s = length(cross);\n\tfloat c = dot(f, unit);\n\tfloat oc = 1.0 - c;\n\treturn mat4(oc * a.x * a.x + c,        oc * a.x * a.y - a.z * s,  oc * a.z * a.x + a.y * s,  0.0,\n                oc * a.x * a.y + a.z * s,  oc * a.y * a.y + c,        oc * a.y * a.z - a.x * s,  0.0,\n                oc * a.z * a.x - a.y * s,  oc * a.y * a.z + a.x * s,  oc * a.z * a.z + c,        0.0,\n                0.0,                       0.0,                       0.0,                       1.0);\n\n}\n\n\nvoid main() {\n    objectIDColor = objectID;\n\n\tvec3 transformed = position;\n\tvec3 dir = lineEnd - lineStart;\n    float dist = length(dir);\n    mat4 rot = getRotationMat(dir);\n\n\tfloat end = float(transformed.x >= 0.9);\n\ttransformed.x = end * (dist + (transformed.x - 1.0) * thickness) + (1.0 - end) * transformed.x * thickness; //subtract one because its the original length of the template line\n\ttransformed.y *= thickness;\n\n    transformed = lineStart + (rot * vec4(transformed, 1.0)).xyz;\n\ttransformed.z += zoffset;\n\n    gl_Position = projectionMatrix * (modelViewMatrix * vec4( transformed, 1.0 ));\n}\n`;\n\n\nexport const PICK_LINE_FRAG = `\nvarying vec4 objectIDColor;\n\nvoid main() {\n\tgl_FragColor = vec4(objectIDColor);\n}\n`;\n\n\nexport function pickingLineMaterial() {\n\n\tconst customUniforms = THREE.UniformsUtils.merge([\n\t\t{ zoffset: { value: 1 } },\n\t\t{ thickness: { value: 5 } },\n\t]);\n\n\treturn new THREE.ShaderMaterial({\n\t\tuniforms: customUniforms,\n\t\tvertexShader: PICK_LINE_VERT,\n\t\tfragmentShader: PICK_LINE_FRAG,\n\t\tside: THREE.DoubleSide,\n\t\tname: 'custom-point-picking-material'\n\t});\n}\n\nexport const PICK_POINT_VERT = `\nattribute vec4 objectID;\nattribute vec3 location;\nvarying vec4 objectIDColor;\n\nuniform float pointSize;\nuniform vec4 selectedID;\n\nvoid main() {\n    objectIDColor = objectID;\n    gl_Position = projectionMatrix * (modelViewMatrix * vec4( (pointSize * position) + location, 1.0 ));\n}\n`;\n\n\nexport const PICK_POINT_FRAG = `\nvarying vec4 objectIDColor;\n\nvoid main() {\n\tgl_FragColor = vec4(objectIDColor);\n}\n`;\n\n\nexport function pickingPointMaterial() {\n\n\tconst customUniforms = THREE.UniformsUtils.merge([\n\t\t{ pointSize: { value: 1 } }\n\t]);\n\n\treturn new THREE.ShaderMaterial({\n\t\tuniforms: customUniforms,\n\t\tvertexShader: PICK_POINT_VERT,\n\t\tfragmentShader: PICK_POINT_FRAG,\n\t\tside: THREE.DoubleSide,\n\t\tname: 'custom-point-picking-material'\n\t});\n}\n\n\nexport const PICK_AGENT_VERT = `\nattribute vec4 objectID;\nattribute vec3 from;\nattribute vec3 to;\nvarying vec4 objectIDColor;\nuniform float pointSize;\nuniform float time;\n\nvoid main() {\n\tobjectIDColor = objectID;\n    gl_Position = projectionMatrix * (modelViewMatrix * vec4( (pointSize * position) + from * (1.0 - time) + to * time, 1.0 ));\n}\n`;\n\n\nexport const PICK_AGNET_FRAG = `\nvarying vec4 objectIDColor;\n\nvoid main() {\n\tgl_FragColor = vec4(objectIDColor);\n}\n`;\n\n\nexport function pickingAgentMaterial() {\n\n\tconst customUniforms = THREE.UniformsUtils.merge([\n\t\t{ pointSize: { value: 1 } },\n\t\t{ time: { value: 0 }}\n\t]);\n\n\treturn new THREE.ShaderMaterial({\n\t\tuniforms: customUniforms,\n\t\tvertexShader: PICK_AGENT_VERT,\n\t\tfragmentShader: PICK_AGNET_FRAG,\n\t\tside: THREE.DoubleSide,\n\t\tname: 'custom-agent-picking-material'\n\t});\n}\n\n\nexport const AGENT_VERT = `\nattribute vec4 objectID;\nattribute vec3 from;\nattribute float from_speed;\nattribute vec3 to;\nattribute float to_speed;\n\nvarying float varyingObjectID;\nvarying float speed;\nuniform float pointSize;\nuniform vec4 selectedID;\nuniform float time;\n\n\n/**\n * Create rotation matrix from field vector.\n * The returned matrix can rotate vector (1, 0, 0)\n * into the desired setup.\n */\nmat4 getRotationMat(vec3 vector)\n{\n\tvec3 unit = vec3(1, 0, 0);\n\tvec3 f = normalize(vector);\n\tvec3 cross = cross(f, unit);\n\tvec3 a = normalize(cross);\n\tfloat s = length(cross);\n\tfloat c = dot(f, unit);\n\tfloat oc = 1.0 - c;\n\treturn mat4(oc * a.x * a.x + c,        oc * a.x * a.y - a.z * s,  oc * a.z * a.x + a.y * s,  0.0,\n                oc * a.x * a.y + a.z * s,  oc * a.y * a.y + c,        oc * a.y * a.z - a.x * s,  0.0,\n                oc * a.z * a.x - a.y * s,  oc * a.y * a.z + a.x * s,  oc * a.z * a.z + c,        0.0,\n                0.0,                       0.0,                       0.0,                       1.0);\n\n}\n\nvoid main() {\n\tint marked = 1;\n\n    for(int i = 0; i < 4; ++i)\n        marked *= int(floor(selectedID[i] * 255.0 + 0.5) == floor(objectID[i] * 255.0 + 0.5));\n\n    varyingObjectID = float(marked);\n\n\n\tvec3 transformed = position;\n\t//vec3 dir = from - to;\n    //float dist = length(dir);\n    //if (dist > 0.01)\n\t//{\n\t//\tmat4 rot = getRotationMat(dir);\n\t//\ttransformed = (rot * vec4(transformed, 1.0)).xyz;\n\t//}\n\n\n    gl_Position = projectionMatrix * (modelViewMatrix * vec4( (pointSize * transformed) + from * (1.0 - time) + to * time, 1.0 ));\n\tspeed = clamp((from_speed * (1.0 - time) + to_speed * time) / 20.0, 0.0, 1.0);\n}\n`;\n\n\nexport const AGENT_FRAG = `\nvarying float varyingObjectID;\nvarying float speed;\n\nvoid main() {\n\tvec3 color = vec3(1.0 - speed, speed, 0.0) * 0.7 + vec3(0.3, 0.3, 0.3);\n\tif (varyingObjectID > 0.5) \n\t\tcolor -= vec3(0.0, 0.6, 0.6); \n\n\tgl_FragColor = vec4(color, 1.0);\n}\n`;\n\n\nexport function agentSelectMaterial() {\n\n\tconst customUniforms = THREE.UniformsUtils.merge([\n\t\t{ pointSize: { value: 1 } },\n\t\t{ time: { value: 0 }},\n\t\t{ time: { value: 0 }}\n\t]);\n\n\treturn new THREE.ShaderMaterial({\n\t\tuniforms: customUniforms,\n\t\tvertexShader: AGENT_VERT,\n\t\tfragmentShader: AGENT_FRAG,\n\t\tside: THREE.DoubleSide,\n\t\tname: 'custom-agent-picking-material'\n\t});\n}\n\nexport class MaterialLibrary {\n    polygonMaterial: THREE.ShaderMaterial;\n    pointMaterial: THREE.ShaderMaterial;\n    lineMaterial: THREE.ShaderMaterial;\n    agentMaterial: THREE.ShaderMaterial;\n\t\n    pickingPolygonMaterial: THREE.ShaderMaterial;\n    pickingLineMaterial: THREE.ShaderMaterial;\n    pickingPointMaterial: THREE.ShaderMaterial;\n    pickingAgentMaterial: THREE.ShaderMaterial;\n\n\tconstructor(csm: CSM) {        \n\t\tthis.polygonMaterial = polygonSelectMaterial();\n        csm.setupMaterial(this.polygonMaterial);\n        this.lineMaterial = lineMaterial();\n\t\tthis.pointMaterial = pointSelectMaterial();\n\t\tthis.agentMaterial = agentSelectMaterial();\n\n        this.pickingPolygonMaterial = pickingMaterial();\n\t\tthis.pickingLineMaterial = pickingLineMaterial();\n        this.pickingPointMaterial = pickingPointMaterial();\n\t\tthis.pickingAgentMaterial = pickingAgentMaterial();\n\t}\n\n\tsetPointSize(size: number) {\n\t\tthis.pointMaterial.uniforms.pointSize.value = size;\n\t\tthis.pointMaterial.uniformsNeedUpdate = true;\n\t\tthis.pickingPointMaterial.uniforms.pointSize.value = size;\n\t\tthis.pickingPointMaterial.uniformsNeedUpdate = true;\n\t\tthis.agentMaterial.uniforms.pointSize.value = size;\n\t\tthis.agentMaterial.uniformsNeedUpdate = true;\n\t\tthis.pickingAgentMaterial.uniforms.pointSize.value = size;\n\t\tthis.pickingAgentMaterial.uniformsNeedUpdate = true;\n\t}\n\n\tsetLineWidth(size: number) {\n\t\tthis.lineMaterial.uniforms.thickness = { value: size };\n\t\tthis.lineMaterial.uniformsNeedUpdate = true;\n\t\tthis.pickingLineMaterial.uniforms.thickness = { value: Math.max(size, 5) };\n\t\tthis.pickingLineMaterial.uniformsNeedUpdate = true;\n\t}\n\n\tsetSelectedID(id: number[]) {\n\t\tthis.polygonMaterial.uniforms.selectedID = { value: id };\n\t\tthis.polygonMaterial.uniformsNeedUpdate = true;\n\t\tthis.lineMaterial.uniforms.selectedID = { value: id };\n\t\tthis.lineMaterial.uniformsNeedUpdate = true;\n\t\tthis.pointMaterial.uniforms.selectedID = { value: id };\n\t\tthis.pointMaterial.uniformsNeedUpdate = true;\n\t\tthis.pointMaterial.uniforms.selectedID = { value: id };\n\t\tthis.pointMaterial.uniformsNeedUpdate = true;\n\t}\n\n\tsetTime(time: number) {\n\t\tthis.pickingAgentMaterial.uniforms.time = { value: time - Math.floor(time) };\n\t\tthis.pickingAgentMaterial.uniformsNeedUpdate = true;\t\n\t\tthis.agentMaterial.uniforms.time = { value: time - Math.floor(time) };\n\t\tthis.agentMaterial.uniformsNeedUpdate = true;\t\n\t}\n}","import { Renderer } from './renderer'\nimport * as THREE from 'three';\n\n\nenum Stage {\n    NOSELECT,\n    SELECT,\n    SELECTEDFIRST\n}\n\nfunction wirebox(width: number, height: number, depth: number ) {\n    width = width * 0.5;\n    height = height * 0.5;\n    depth = depth * 0.5;\n\n    const geometry = new THREE.BufferGeometry();\n    const position = [];\n\n    position.push(\n        - width, - height, - depth,\n        - width, height, - depth,\n\n        - width, height, - depth,\n        width, height, - depth,\n\n        width, height, - depth,\n        width, - height, - depth,\n\n        width, - height, - depth,\n        - width, - height, - depth,\n\n        - width, - height, depth,\n        - width, height, depth,\n\n        - width, height, depth,\n        width, height, depth,\n\n        width, height, depth,\n        width, - height, depth,\n\n        width, - height, depth,\n        - width, - height, depth,\n\n        - width, - height, - depth,\n        - width, - height, depth,\n\n        - width, height, - depth,\n        - width, height, depth,\n\n        width, height, - depth,\n        width, height, depth,\n\n        width, - height, - depth,\n        width, - height, depth\n     );\n\n    geometry.setAttribute( 'position', new THREE.Float32BufferAttribute( position, 3 ) );\n    return geometry;\n}\n\n\nexport class Selector {\n\n    renderer: Renderer;\n    status: Stage = Stage.NOSELECT;\n    cube: THREE.LineSegments;\n    ends: THREE.Vector2[];\n    region?: {\n        start: [number, number];\n        end: [number, number];\n        size: [number, number];\n    };\n\n    constructor(renderer: Renderer) {\n        this.renderer = renderer;\n        const geometry = wirebox(1, 1, 1);\n        const material = new THREE.LineDashedMaterial( {\n            color: 0x000000,\n            dashSize: 3, gapSize: 1\n        } );\n\n        this.cube = new THREE.LineSegments( geometry, material );\n        this.renderer.scene.add( this.cube );\n        this.ends = [];\n        this.cube.visible = false;\n    }\n\n    select(x: number, y: number) {\n        const v = this.renderer.controls.screenToWorldOrthographic(x, y);\n        if (!v)\n            return;\n\n        this.ends.push(new THREE.Vector2(v.x, v.y));\n\n        this.cube.visible = true;\n        this.renderer.changed = true;\n        \n        if (this.ends.length < 2)\n            return this.initCube(v);\n        else\n            return this.transformCube();\n    }\n\n    private transformCube() {\n        const end: THREE.Vector2 = this.ends.pop() as any;\n        const tmp: THREE.Vector2 = this.ends[0].clone() as any;\n        const start = new THREE.Vector2(end.x, end.y);\n\n        start.min(tmp);\n        end.max(tmp);\n        tmp.copy(end).sub(start); //tmp is now size\n\n        this.cube.scale.set(tmp.x, tmp.y, 1000);\n        this.cube.position.set(start.x + tmp.x * 0.5, start.y + tmp.y * 0.5, 0);\n        this.cube.updateMatrixWorld();\n        this.region = {\n            start: [start.x, start.y],\n            end: [end.x, end.y],\n            size: [tmp.x, tmp.y]\n        };\n    }\n\n    private initCube(v: THREE.Vector3) {\n        this.cube.position.x = v.x;\n        this.cube.position.y = v.y;\n        this.cube.position.z = 0;\n        this.cube.scale.set(1, 1, 1000);\n        this.cube.updateMatrixWorld();\n    }\n\n    clear() {\n        this.ends = [];\n        this.cube.visible = false;\n        this.renderer.changed = true;\n        this.region = undefined;\n    }\n}\n\n\n","import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\n\nexport class MapControls extends OrbitControls {\n\n    constructor(camera: THREE.Camera, domElement: HTMLCanvasElement) {\n\n        camera.up = new THREE.Vector3(0, 0, 1);\n        super(camera, domElement);\n\n        this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n        this.mouseButtons.LEFT = THREE.MOUSE.PAN;\n        this.mouseButtons.MIDDLE = THREE.MOUSE.ROTATE;\n        this.mouseButtons.RIGHT = THREE.MOUSE.DOLLY;\n\n        this.touches.ONE = THREE.TOUCH.PAN;\n        this.touches.TWO = THREE.TOUCH.DOLLY_ROTATE;\n\n\n        this.zoomSpeed = 1.0;\n        //this.dampingFactor = 0.1;\n        //this.enableDamping = true;\n        this.minDistance = 400;\n        this.minPolarAngle = 0.001;\n        this.maxPolarAngle = Math.PI * 0.4;\n        this.update();\n    }\n}","import * as THREE from 'three';\nimport { CSM } from './csm/CSM';\nimport { MapControls } from './controls';\n\n\nclass PerspectiveControls {\n    camera: THREE.PerspectiveCamera;\n\n    constructor(canvas: HTMLCanvasElement) {\n        this.camera = new THREE.PerspectiveCamera(65, window.innerWidth / window.innerHeight, 1, 6000)\n    }\n\n    update(controls: MapControls) {\n        controls.update();\n    }\n\n    topView(controls: MapControls, distance: number = 3000) {\n        this.camera.position.copy(controls.target);\n        this.camera.position.z = distance;\n        this.camera.updateMatrixWorld();\n    }\n        \n    enable(controls: MapControls) {\n        controls.enableRotate = true;\n        controls.maxDistance = 5000;\n    }\n\n    resize(width: number, height: number) {\n        this.camera.aspect = width / height;\n        this.camera.updateProjectionMatrix();\n    }\n}\n\n\nclass OrthographicControls {\n    camera: THREE.OrthographicCamera;\n    csm: CSM;\n\n    constructor(canvas: HTMLCanvasElement, csm: CSM) {\n        this.camera = new THREE.OrthographicCamera(\n            -window.innerWidth / 2,\n            window.innerWidth / 2,\n            window.innerHeight / 2,\n            -window.innerHeight / 2,\n            1,\n            10000);\n        this.csm = csm;\n    }\n\n    update(controls: MapControls) {\n        var size = controls.target.distanceTo( controls.object.position );\n        var aspect = (controls.object as any).aspect;\n\n        this.camera.left = size * aspect / -2;\n        this.camera.right = size * aspect / 2;\n\n        this.camera.top = size / 2;\n        this.camera.bottom = size / - 2;\n\n        this.camera.position.copy(controls.object.position);\n        this.camera.updateProjectionMatrix();\n        controls.update();\n        this.csm.updateFrustums();\n    }\n    \n    enable(controls: MapControls) {\n        this.camera.position.copy( controls.object.position );\n        controls.target.copy( this.camera.position );\n        controls.target.z = 0;\n        controls.maxDistance = 10000;\n        controls.enableRotate = false;\n    }\n\n    topView(controls: MapControls, distance: number = 3000) {\n        this.camera.position.copy(controls.target);\n        this.camera.position.z = distance;\n        this.camera.updateMatrixWorld()\n    }\n    \n    resize(width: number, height: number) {\n        this.camera.left = -width / 2;\n        this.camera.right = width / 2;\n\n        this.camera.top = height / 2;\n        this.camera.bottom = -height / 2;\n\n        this.camera.updateProjectionMatrix();\n    }\n}\n\nexport class CameraControls {\n    controls: MapControls;\n    perspective: PerspectiveControls;\n    orthographic?: OrthographicControls;\n    current: PerspectiveControls | OrthographicControls;\n    csm?: CSM;\n\n    constructor(canvas: HTMLCanvasElement) {\n        this.perspective = new PerspectiveControls(canvas);\n        this.controls = new MapControls(this.perspective.camera, canvas);\n        this.current = this.perspective;\n        this.current.enable(this.controls);\n    }\n\n    initOrthographic(canvas: HTMLCanvasElement, csm: CSM) {\n        this.orthographic = new OrthographicControls(canvas, csm);\n        this.csm = csm;\n    }\n\n    resize(x: number, y: number){\n        this.perspective.resize(x, y);\n        if(this.orthographic)\n            this.orthographic.resize(x, y);\n    }\n\n\n    zoomIn(step: number) {\n\n        const pos = this.controls.object.position.clone();\n        const dir = new THREE.Vector3().subVectors(pos, this.controls.target);\n        dir.normalize();\n        dir.multiplyScalar(step * 10);\n    \n    \n        this.controls.object.position.sub(dir);\n        (this.controls.object as any).updateProjectionMatrix();\n\n        this.current.update(this.controls);\n    }\n\n    zoomOut(step: number) {\n\n        const pos = this.controls.object.position.clone();\n        const dir = new THREE.Vector3().subVectors(pos, this.controls.target);\n        dir.normalize();\n        dir.multiplyScalar(step * 10);\n    \n        this.controls.object.position.add(dir);\n        (this.controls.object as any).updateProjectionMatrix();\n\n        this.current.update(this.controls);\n    }\n\n    update() {\n        this.current.update(this.controls);\n    }\n\n    enable() {\n        this.current.enable(this.controls);\n    }\n\n    topView() {\n        const usingOrtho = (this.current.camera as any).isOrthographicCamera;\n\n        if (usingOrtho)\n            this.current.topView(this.controls);\n        else {\n            const distance = this.controls.target.distanceTo(this.controls.object.position);\n            this.current.topView(this.controls, distance);\n        }\n    }\n\n    get camera() {\n        return this.current.camera;\n    }\n\n    get target() {\n        return this.controls.target;\n    }\n\n    useOrtho() {\n        if (!this.orthographic)\n            return;\n\n        if (this.current === this.orthographic)\n            return;\n        \n        this.swap();\n    }\n\n    usePerspective() {\n        if (this.current === this.perspective)\n            return;\n        \n        this.swap();\n    }\n\n    swap() {\n        if (!this.orthographic || !this.csm)\n            return; \n\n        this.current.topView(this.controls);\n        this.current = this.current === this.perspective ? this.orthographic : this.perspective;\n        this.current.enable(this.controls);\n\n        this.csm.camera = this.current.camera;\n        this.csm.updateFrustums();   \n    }\n\n    focus(focusPoint: THREE.Vector2) {\n        const usingOrtho = (this.current.camera as any).isOrthographicCamera;\n\n        if (usingOrtho)\n            this.swap();\n\n        this.controls.target = new THREE.Vector3(focusPoint.x, focusPoint.y, 0);\n        this.perspective.camera.position.x = focusPoint.x;\n        this.perspective.camera.position.y = focusPoint.y;\n        this.perspective.camera.position.z = 1000;\n\n        if (usingOrtho)\n            this.swap();\n    }\n\n    screenToWorldOrthographic(x: number, y: number) {\n        if ((this.current.camera as any).isOrthographicCamera)\n        {\n            const camera = this.current.camera as any;\n            const vector = new THREE.Vector3();\n            vector.set(\n                (x / window.innerWidth) * 2 - 1,\n                - (y / window.innerHeight) * 2 + 1,\n                ( camera.near + camera.far ) / ( camera.near - camera.far )\n            );\n            return vector.unproject( camera );\n        }\n    }\n}","\n\nclass Action {\n    name: string;\n    counter: number;\n    manager: StatusManager;\n\n    constructor(name: string, manager: StatusManager) {\n        this.name = name;\n        this.counter = 0;\n        this.manager = manager;\n    }\n\n    start() {\n        this.counter++;\n        this.manager.update();\n    }\n    \n    stop() { \n        this.counter--;\n        this.manager.update();\n    }\n\n    toString() {\n        return `${this.name}: ${this.counter} remaining`;\n    }\n\n    get isRunning() {  \n        return this.counter > 0;\n    }\n}\n\ninterface IActionList {\n    [key: string]: Action;\n    loadingGeometry: Action;\n    parsingGeometry: Action;\n    loadingStyles: Action;\n    applyingStyles: Action;\n}\n\nexport class StatusManager {\n    actions: IActionList;\n\n    constructor() {\n        this.actions = {\n            loadingGeometry: new Action(\"Loading Geometry\", this),\n            parsingGeometry: new Action(\"Parsing Geometry\", this),\n            loadingStyles: new Action(\"Loading Styles\", this),\n            applyingStyles: new Action(\"Applying Styles\", this)\n        };\n    }\n\n    update() {\n        const bar = document.getElementById(\"viewStatusBar\");\n        if (!bar)\n            return;\n\n        for (let action in this.actions) {\n            if ((this.actions[action] as Action).isRunning) {\n                const status = this.actions[action].toString();\n                bar.innerHTML = status;\n                return;\n            }\n        }\n        \n        bar.innerHTML = 'Ready.';\n    }\n}","import { Renderer } from './renderer';\nimport * as THREE from 'three';\n\nexport class Compas {\n    renderer: Renderer;\n    camDirection3: THREE.Vector3;\n    camDirection2: THREE.Vector2;\n    north: THREE.Vector2;\n    angle: number;\n\n    constructor(renderer: Renderer) {\n        this.renderer = renderer;\n        this.camDirection3 = new THREE.Vector3(0, 0, 0);\n        this.camDirection2 = new THREE.Vector2(0, 0);\n        this.north = new THREE.Vector2(0, 1);\n        this.angle = 0;\n    }\n\n\n    update(callback?: (angle: number) => void) {\n        this.camDirection3.copy(this.renderer.controls.target);\n        this.camDirection3.sub(this.renderer.controls.camera.position);\n        this.camDirection3.normalize();\n        this.camDirection2.set(this.camDirection3.x, this.camDirection3.y);\n\n        if (this.renderer.controls.camera.up.y === 1) {\n            this.angle = 0;\n        } else {\n            this.camDirection2.normalize();\n            this.angle = Math.acos(this.north.dot(this.camDirection2));\n            if (this.camDirection2.x < 0) {\n                this.angle = -this.angle;\n            }\n        }\n\n        if (callback) {\n            callback(this.angle);\n        }\n    }\n}","import { Renderer } from \"../renderer/renderer\";\nimport { Timeline } from \"./timeline\";\n\n\n\nexport class MainTimeline {\n    renderer: Renderer;\n    timelines: Timeline[];\n    time: number;\n    start: number;\n    end: number;\n    play: boolean;\n    speed: number;\n\n    constructor(renderer: Renderer) {\n        this.renderer = renderer;\n        this.timelines = [];\n        this.time = 31740;\n        this.start = Infinity;\n        this.end = -Infinity;\n        this.play = false;\n        this.speed = 1;\n    }\n\n    addTimeline(timeline: Timeline) {\n        this.timelines.push(timeline);\n        this.start = Math.min(this.start, timeline.start);\n        this.end = Math.max(this.end, timeline.end);\n    }\n\n    get ready() {\n        for(const timeline of this.timelines)\n            if (!timeline.ready)\n                return false;\n        return true;\n    }\n\n    tick() {\n        const delta = (1 / 60) * this.speed;\n\n        if (this.play && this.ready) {\n            this.time += delta;\n            this.renderer.matlib.setTime(this.time);\n            this.renderer.changed = true;\n        }\n    \n        this.render();\n    }   \n    \n    render() {\n        for(const timeline of this.timelines)\n            timeline.render(this.time);\n        this.renderer.changed = true;\n    }\n}\n\n","import { Renderer } from \"../renderer/renderer\"\nimport * as THREE from \"three\";\nimport { color, color_default, LayerStyle } from \"../renderer/style\";\n\n\nexport enum OIDType {\n    source,\n    target,\n    object\n}\n\nexport class Model {\n    renderer: Renderer;\n    mesh?: THREE.Mesh;\n    pickingMesh?: THREE.Mesh;\n    private visibility: boolean;\n\n    constructor(renderer: Renderer) {\n        this.renderer = renderer;\n        this.visibility = true;\n    }\n\n    set visible(v: boolean) {\n        this.visibility = v;\n        if (this.mesh) {\n            this.mesh.visible = v;\n        }\n        if (this.pickingMesh) {\n            this.pickingMesh.visible = v;\n        }\n    }\n\n    remove() {\n        this.mesh = this.removeFrom(this.mesh, this.renderer.scene);\n        this.pickingMesh = this.removeFrom(this.pickingMesh, this.renderer.pickingScene);\n    }\n\n    removeFrom(mesh: THREE.Mesh | THREE.LineSegments | undefined, scene: THREE.Scene) {\n        if (mesh) {\n            scene.remove(mesh);\n            mesh.geometry.dispose();\n        }\n        return undefined;\n    }\n\n    baseColors(threeVertLength: number) {\n        const colors = new Uint8Array(threeVertLength);\n        for (let i = 0; i < threeVertLength; i++)\n            colors[i] = 255;\n        return colors;\n    }\n\n    afterApplyStyle() {\n        this.renderer.status.actions.applyingStyles.stop();\n        if (this.mesh)\n        {\n            this.mesh.geometry.attributes.color.needsUpdate = true;\n            this.renderer.changed = true;\n        }\n    }\n\n    applyStyle(offset: number, style?: LayerStyle, type?: OIDType) {\n        if (!this.mesh || !this.mesh.geometry.attributes.objectID)\n            return;\n\n        this.renderer.status.actions.applyingStyles.start();\n        const oids = this.mesh.geometry.attributes.objectID.array;\n        const out = this.mesh.geometry.attributes.color.array;\n\n        if (style) {\n            color(offset, oids as Uint8Array, style.color_buffer, out, this.afterApplyStyle.bind(this));\n        } else {\n            color_default(oids.length, out, this.afterApplyStyle.bind(this));\n        }\n    }\n\n}\n\nexport class ModelProxy extends Model {\n    applyStyle(offset: number, style?: LayerStyle, type: OIDType = OIDType.source) {\n        if (!this.mesh || !this.mesh.geometry.attributes.objectID)\n            return;\n\n        this.renderer.status.actions.applyingStyles.start();\n        const oids = this.mesh.geometry.attributes.objectID.array;\n        const out = this.mesh.geometry.attributes.color.array;\n\n        if (style) {\n            if (type === OIDType.source)\n                color(offset, oids as Uint8Array, style.color_buffer_source, out, this.afterApplyStyle.bind(this))\n            else\n                color(offset, oids as Uint8Array, style.color_buffer_target, out, this.afterApplyStyle.bind(this))\n        } else {\n            color_default(oids.length, out, this.afterApplyStyle.bind(this));\n        }\n    }\n}\n\n","import * as THREE from 'three';\nimport { CSM } from './csm/CSM';\nimport { CSMHelper } from './csm/CSMHelper';\nimport Stats from 'three/examples/jsm/libs/stats.module';\nimport { GPUPickHelper } from './picker';\nimport { MaterialLibrary } from './shaders';\nimport { CameraControls } from './camera';\nimport { StatusManager } from '../utils/status';\nimport { Compas } from './compas';\nimport { MainTimeline } from '../datamodel/maintimeline';\nimport { Selector } from './selector';\n\nconst SHOWSTATS = false;\n\nexport class Renderer {\n    canvas: HTMLCanvasElement;\n    scene: THREE.Scene;\n    pickingScene: THREE.Scene;\n    renderer: THREE.WebGLRenderer;\n\n    controls: CameraControls;\n    picker: GPUPickHelper;\n    matlib: MaterialLibrary;\n    csm!: CSM;\n    helper!: CSMHelper;\n    compas: Compas;\n\n    stats1!: Stats;\n    stats2!: Stats;\n    changed: boolean;\n\n    updateShadows = false;\n    actionCall: CallableFunction;\n    status: StatusManager;\n\n\n    timeline: MainTimeline;\n    selector: Selector;\n\n    constructor(canvas: HTMLCanvasElement, actionCall: CallableFunction) {\n        this.canvas = canvas;\n        this.actionCall = actionCall;\n        this.status = new StatusManager();\n        \n        //basic threejs\n        this.scene = new THREE.Scene();\n        this.pickingScene = new THREE.Scene();\n        this.controls = new CameraControls(this.canvas);\n        this.renderer = new THREE.WebGLRenderer({ canvas: this.canvas, antialias: true });\n        this.setupRenderer();\n        this.setupLightsAndShadows();\n        this.controls.initOrthographic(this.canvas, this.csm);\n        this.controls.useOrtho();\n        \n        //compas\n        this.compas = new Compas(this);\n        \n        //materials\n        this.matlib = new MaterialLibrary(this.csm);\n        \n        //picker\n        this.picker = new GPUPickHelper(this.renderer);\n        this.changed = true;\n        \n        //timeline\n        this.timeline = new MainTimeline(this);\n        \n        //selector\n        this.selector = new Selector(this);\n        \n        //devstats\n        if (SHOWSTATS) {\n            this.stats1 = Stats();\n            this.stats1.showPanel(0);\n            this.stats1.dom.style.cssText = 'position:absolute;top:0px;left:0px;';\n            document.body.appendChild(this.stats1.dom);\n            this.stats2 = Stats();\n            this.stats2.showPanel(1);\n            this.stats2.dom.style.cssText = 'position:absolute;top:0px;left:80px;';\n            document.body.appendChild(this.stats2.dom);\n        }\n    }\n\n\n    private setupLightsAndShadows() {\n        const hemisphere = new THREE.HemisphereLight(0xFFFFFF, 0x555555, 0.4);\n        hemisphere.position.set(0, 1, 1);\n        this.scene.add(hemisphere);\n        this.scene.add(new THREE.AmbientLight(0xFFFFFF, 0.5));\n\n        this.csm = new CSM({\n            fade: true,\n            mode: 'practical',\n            cascades: 4,\n            shadowBias: [-0.0005, -0.001, -0.001, -0.003],\n            shadowMapSize: 2048,\n            lightDirection: new THREE.Vector3(-1, -1, -1).normalize(),\n            camera: this.controls.camera,\n            parent: this.scene,\n            lightNear: 1,\n            lightFar: 10000,\n            maxFar: 5000,\n            margin: 0,\n            lightIntensity: 0.2,\n            autoUpdateHelper: false\n        });\n\n        this.helper = new CSMHelper(this.csm);\n        this.helper.visible = true;\n        this.scene.add(this.helper);\n        this.helper.update();\n    }\n\n    private setupRenderer() {\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.shadowMap.enabled = true;\n        this.renderer.shadowMap.autoUpdate = false;\n        this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n        //this.renderer.setClearColor(0xa6fff3);\n        this.renderer.setClearColor(0x151920);\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n        this.renderer.setAnimationLoop(() => this.frame());\n    }\n\n    enableShadows() {\n        this.updateShadows = true;\n        this.changed = true;\n        console.log('shadows enabled');\n    }\n\n    disableShadows() {\n        this.updateShadows = false;\n        this.changed = true;\n\n        let light: THREE.DirectionalLight;\n        for(light of this.csm.lights)\n        {\n            const target = this.renderer.getRenderTarget();\n            if (light.shadow && light.shadow.map)\n            {\n\n                this.renderer.setRenderTarget( light.shadow.map as any);\n                this.renderer.clear();\n            }\n            this.renderer.setRenderTarget(target);\n        }\n\n        console.log('shadows disabled');\n    }\n\n    frame() {\n        this.actionCall();\n        this.timeline.tick();\n        this.controls.update();\n        \n        if (this.changed) {\n            this.csm.update();\n            if (this.updateShadows) {\n                this.renderer.shadowMap.needsUpdate = true;\n            }\n\n            this.renderer.render(this.scene, this.controls.camera);\n        }\n\n        if (SHOWSTATS) {\n            this.stats1.update();\n            this.stats2.update();\n        }\n\n        this.changed = false;\n    }\n\n    click(x: number, y: number) {\n        const id = this.picker.pick(x, y, this.pickingScene, this.controls.camera);\n        return this.select(id);\n    }\n\n    select(oid: number) {\n        if (this.picker.id !== oid)\n            this.picker.select(oid);\n\n        const selected = this.picker.layerAndOidForId(oid);\n        console.log(selected, this.picker.selected);\n\n        if (selected)\n            this.matlib.setSelectedID(this.picker.selected);\n        else \n            this.matlib.setSelectedID([-1, -1, -1, -1]);\n\n        this.changed = true;\n        return selected;\n    }\n\n    setPointSize(size: number) {\n        this.matlib.setPointSize(size);\n        this.changed = true;\n    }\n\n    setLineWidth(size: number) {\n        this.matlib.setLineWidth(size);\n        this.changed = true;\n    }\n\n    updateHelper() {\n        this.helper.update();\n        this.updateShadows = false;\n        this.changed = true;\n    }\n\n    resize(x: number, y: number) {\n        this.controls.resize(x, y);\n        this.renderer.setSize(x, y);\n        this.changed = true;\n    }\n}","//DEPRECATED, to be replaced by workers.tsx\n\n\nconst STEP = 10000;\n\nexport class Decoder {\n    static base64tofloat32(data: string,  abort: CallableFunction, callback: CallableFunction) {   \n        let i = 0, j = 0;\n        const step = 16 * STEP;\n        const length = Math.floor((data.length / 16) * 3);\n        let buffer = new Float32Array(length);\n\n        const iter = () => {\n            const s = atob(data.substr(i, step));\n            const d = new DataView(Uint8Array.from(s, c => c.charCodeAt(0)).buffer);\n            \n            for(let k = 0; k < d.byteLength; k += 4)\n                buffer[j++] = d.getFloat32(k, true);\n\n            if (abort())\n                return;\n\n            i += step;\n            if (i >= data.length)\n            {\n                callback(buffer);\n                buffer = null as any;\n            }\n            else\n                setTimeout(iter, 10);\n        };\n\n        setTimeout(iter, 10);\n    }\n\n    static base64toint32(data: string, offset: number = 0, abort: CallableFunction, callback: CallableFunction) {        \n        let i = 0, j = 0;\n        const step = 16 * STEP;\n        const length = Math.floor((data.length / 16) * 3);\n        let buffer = new Int32Array(length);\n\n        const iter = () => {\n            const s = atob(data.substr(i, step));\n            const d = new DataView(Uint8Array.from(s, c => c.charCodeAt(0)).buffer);\n            \n            for(let k = 0; k < d.byteLength; k += 4)\n                buffer[j++] = d.getInt32(k, true) + offset;\n\n            if (abort())\n                return;\n\n            i += step;\n            if (i >= data.length)\n            {\n                callback(new Uint8Array(buffer.buffer));\n                buffer = null as any;\n            }\n            else\n                setTimeout(iter, 10);\n        };\n\n        setTimeout(iter, 10);\n    }\n\n    static base64touint8(data: string, callback: CallableFunction) {\n        let i = 0, j = 0;\n        const step = 4 * STEP;\n        const length = Math.floor((data.length / 4) * 3);\n        let buffer = new Uint8Array(length);\n\n        const iter = () => {\n            const s = atob(data.substr(i, step));\n            const d = Uint8Array.from(s, c => c.charCodeAt(0));\n            \n            for(let k = 0; k < d.length; k++)\n                buffer[j++] = d[k];\n\n\n            i += step;\n            if (i >= data.length)\n            {\n                callback(buffer);\n                buffer = null as any;\n            }\n            else\n                setTimeout(iter, 10);\n        };\n\n        setTimeout(iter, 10);\n    }\n}","import { ILayerStyle } from \"../types\";\nimport { Decoder } from \"../utils/decoder\";\n\n\nexport class LayerStyle {\n    styles: ILayerStyle;\n\n    constructor(styles?: ILayerStyle, callback: (style: LayerStyle) => void = () => {}) {\n        this.styles = styles || {};\n\n        if (this.styles.buffer) {\n            Decoder.base64touint8(this.styles.buffer as string, (buffer: Uint8Array) => {\n                this.styles.buffer = buffer;\n                callback(this);\n            });\n        }\n\n        if (this.styles.buffer_source && this.styles.buffer_target) {\n            Decoder.base64touint8(this.styles.buffer_source as string, (buffer: Uint8Array) => {\n                this.styles.buffer_source = buffer;\n                Decoder.base64touint8(this.styles.buffer_target as string, (buffer: Uint8Array) => {\n                    this.styles.buffer_target = buffer;\n                    callback(this);\n                });\n            });\n        }\n    }\n\n    get pickable() {\n        if (this.styles.pickable) {\n            return this.styles.pickable;\n        }\n        return true;\n    }\n\n    get visible() {\n        if (this.styles.visible) {\n            return this.styles.visible;\n        }\n        return true;\n    }\n\n    get color_buffer() {\n        if (this.styles.buffer)\n            return this.styles.buffer as Uint8Array;\n        throw new Error(\"No colors defined\");\n    }\n\n    get color_buffer_target() {\n        if (this.styles.buffer_target) \n            return this.styles.buffer_target as Uint8Array;\n        throw new Error(\"No target colors defined\");\n    }\n\n    get color_buffer_source() {\n        if (this.styles.buffer_source) \n            return this.styles.buffer_source as Uint8Array;\n        throw new Error(\"No source colors defined\");\n    }\n}\n\n\n\n\nexport function color(oid_offset: number, oids: Uint8Array, buffer: Uint8Array, outputbuffer: any, callback: CallableFunction) {\n    let c = {\n        i: 0,\n        ci: 0,\n        it: 1,\n        total_stop: oids.length / Uint32Array.BYTES_PER_ELEMENT,\n        view: new DataView(oids.buffer)\n    };\n\n\n    const iteration = () => {\n        const itStep = 100000;\n        const step_stop = c.it * itStep;\n        const stop = Math.min(step_stop, c.total_stop);\n\n        let oid;\n        for (; c.i < stop; c.i++) {\n            oid = (c.view.getUint32(c.i * Uint32Array.BYTES_PER_ELEMENT, true) - oid_offset) * 3;\n            outputbuffer[c.ci++] = buffer[oid];\n            outputbuffer[c.ci++] = buffer[oid + 1];\n            outputbuffer[c.ci++] = buffer[oid + 2];\n        }\n\n        if (c.i < c.total_stop) {\n            c.it++;\n            setTimeout(iteration, 4);\n        } else {\n            callback();\n            c = null as any;\n        }\n\n    }\n\n    setTimeout(iteration, 4);\n}\n\nexport function color_default(oid_length: number, outputbuffer: any, callback: CallableFunction) {    \n    let c = {\n        i: 0,\n        ci: 0,\n        it: 1,\n        total_stop: oid_length\n    };\n    \n    const iteration = () => {\n        const itStep = 100000;\n        const step_stop = c.it * itStep * Uint8Array.BYTES_PER_ELEMENT;\n        const stop = Math.min(step_stop, c.total_stop);\n\n        for (; c.i < stop; c.i++) {\n            outputbuffer[c.ci++] = 255;\n            outputbuffer[c.ci++] = 255;\n            outputbuffer[c.ci++] = 255;\n        }\n\n        if (c.i < c.total_stop) {\n            c.it++;\n            setTimeout(iteration, 4);\n        } else {\n            callback();\n            c = null as any;\n        }\n    }\n\n    setTimeout(iteration, 4);\n}","\n\nexport function buildWorker(worker: any) {\n    const code = worker.toString();\n    const blob = new Blob([`(${code})()`]);\n    return new Worker(URL.createObjectURL(blob));\n}\n\n\nexport enum DecoderQueryType {\n    float32 = 0,\n    int32 = 1,\n    uint8 = 2\n}\n\n//eslint-disable-next-line\n//let self: Worker;\n\nexport const Decoder = () => {\n    const base64tofloat32 = (data: string) => {\n        const s = atob(data);\n        const buffer = new Float32Array(Uint8Array.from(s, c => c.charCodeAt(0)).buffer);\n        return buffer;\n    }\n\n    const base64toint32 = (data: string, offset: number) => {\n        const s = atob(data);\n        const buffer = new Int32Array(Uint8Array.from(s, c => c.charCodeAt(0)).buffer);\n        buffer.forEach((value, index) => buffer[index] = value + offset);\n        return new Uint8Array(buffer.buffer);\n    }\n\n    const base64touint8 = (data: string) => {\n        const s = atob(data);\n        const buffer = Uint8Array.from(s, c => c.charCodeAt(0));\n        return buffer;\n    }\n\n    //eslint-disable-next-line no-restricted-globals\n    self.onmessage = (message: MessageEvent) => {\n        const data = message.data;\n        const response: any = {\n            jobID: data.jobID,\n            resID: data.resID\n        };\n\n        switch (data.data.datatype) {\n            case 0:\n                response.buffer = base64tofloat32(data.data.buffer) as any;\n                break;\n            case 1:\n                response.buffer = base64toint32(data.data.buffer, data.data.offset) as any;\n                break;\n            case 2:\n                response.buffer = base64touint8(data.data.buffer) as any;\n                break;\n        }\n\n        postMessage(response);\n    }\n}\n\nconst POOLSIZE = 20;\n\ninterface Job {\n    data: any,\n    jobID: number,\n    resID: number\n}\n\ninterface Result {\n    data: any[];\n    recieved: number;\n    expected: number;\n    callback: CallableFunction\n}\n\nexport class Decoders {\n    private static _instance: Decoders;\n    private workers: Worker[];\n    private worker_busy: boolean[];\n    private queue: Job[];\n    private jobIDs: number;\n    private resultMap: Map<number, Result>;\n    \n    private constructor()\n    {\n        this.workers = [];\n        this.worker_busy = [];\n        this.jobIDs = 0;\n        this.resultMap = new Map();\n\n        for(let i = 0; i < POOLSIZE; ++i)\n        {\n            this.workers.push(buildWorker(Decoder));\n            this.worker_busy.push(false);\n\n            this.workers[i].onmessage = (message) => {\n                const {data} = message;\n                const {buffer, jobID, resID} = data;\n\n                const res = this.resultMap.get(jobID);\n                if (!res) \n                    return;\n                res.data[resID] = buffer;\n                res.recieved++;\n                \n                if (res.recieved === res.expected)\n                {\n                    res.callback(...res.data);\n                    this.resultMap.delete(jobID);\n                }\n\n                this.worker_busy[i] = false;\n                this.submit();\n            }\n        }\n        this.queue = [];\n    }\n\n    public static get Instance()\n    {\n        return this._instance || (this._instance = new this());\n    }\n\n    private get worker() {\n        for (let i = 0; i < POOLSIZE; ++i) {\n            if (!this.worker_busy[i])\n                return i;\n        }\n        return undefined;\n    }\n\n    process(data: any[], callback: (...output: any[]) => void) \n    {\n        const jobID = this.jobIDs++;\n        this.resultMap.set(jobID, {\n            data: Array.apply(null, Array(data.length)).map(function () { return undefined; }),\n            recieved: 0,\n            expected: data.length,\n            callback: callback\n        });\n\n        for(let i = 0; i < data.length; ++i)\n            this.queue.push({data: data[i], jobID: jobID, resID: i})\n\n        this.submit();\n    }\n\n    private submit() {\n        const i = this.worker;\n        if (i === undefined)\n            return;\n        \n        const job = this.queue.shift();\n        if (!job)\n            return;\n\n        this.worker_busy[i] = true;\n        this.workers[i].postMessage(job);\n    }\n}\n","import { IModel } from \"../types\";\nimport * as THREE from \"three\";\n//import { Decoder } from \"../utils/decoder\";\nimport { Tile } from \"../datamodel/tile\";\nimport { Model, ModelProxy } from \"./base\";\nimport { Overlay } from \"../datamodel/layer\";\nimport { Decoders, DecoderQueryType } from \"../utils/workers\";\n\n\n\nexport class PolygonalModel extends Model {\n    constructor(data: IModel, tile: Tile, callback: CallableFunction, abort: CallableFunction) {\n        super(tile.renderer);\n        const offset = tile.renderer.picker.offsetForLayer(tile.layer.name);\n\n        Decoders.Instance.process(\n            [{\n                datatype: DecoderQueryType.float32,\n                buffer: data.vertices\n            }, {\n                datatype: DecoderQueryType.int32,\n                buffer: data.attributes.oid.data,\n                offset: offset\n            }], (vertices: Float32Array, objectid: Uint8Array) => {\n                this.init(vertices, objectid, tile);\n                callback(this);\n            });\n    }\n\n    private init(vertices: Float32Array, objectid: Uint8Array, tile: Tile) {\n        const geometry = this.createGeometry(vertices, objectid);\n        this.createMesh(geometry);\n        this.createPickingMesh(geometry);\n        this.visible = tile.visible;\n        this.renderer.changed = true;\n    }\n\n\n    private createPickingMesh(geometry: THREE.BufferGeometry) {\n        const pickingMesh = new THREE.Mesh(geometry, this.renderer.matlib.pickingPolygonMaterial);\n        this.renderer.pickingScene.add(pickingMesh);\n        this.pickingMesh = pickingMesh;\n    }\n\n    private createMesh(geometry: THREE.BufferGeometry) {\n        const material = this.renderer.matlib.polygonMaterial;\n        const mesh = new THREE.Mesh(geometry, material);\n        mesh.receiveShadow = true;\n        mesh.castShadow = true;\n        this.renderer.scene.add(mesh);\n        this.mesh = mesh;\n    }\n\n    private createGeometry(vertices: Float32Array, objectid: Uint8Array) {\n        const geometry = new THREE.BufferGeometry();\n        geometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n        geometry.setAttribute('objectID', new THREE.BufferAttribute(objectid, 4, true));\n        geometry.setAttribute('color', new THREE.BufferAttribute(this.baseColors(vertices.length), 3, true));\n        geometry.computeVertexNormals();\n        return geometry;\n    }\n}\n\n\nexport class PolygonalProxyModel extends ModelProxy {\n    constructor(data: IModel, tile: Tile, callback: CallableFunction, abort: CallableFunction) {\n        super(tile.renderer);\n        const offset_source = tile.renderer.picker.offsetForLayer((tile.layer as Overlay).source);\n        //const offset_target = tile.renderer.picker.offsetForLayer((tile.layer as Overlay).target);\n\n        Decoders.Instance.process([{\n                datatype: DecoderQueryType.float32,\n                buffer: data.vertices\n            }, {\n                datatype: DecoderQueryType.int32,\n                buffer: data.attributes.source_oid.data,\n                offset: offset_source\n            }], (vertices: Float32Array, objectid: Uint8Array) => {\n                this.init(vertices, objectid, tile);\n                callback(this);\n            });\n    }\n\n    private init(vertices: Float32Array, objectid: Uint8Array, tile: Tile) {\n        const geometry = this.createGeometry(vertices, objectid);\n        this.createMesh(geometry);\n        this.createPickingMesh(geometry);\n        this.visible = tile.visible;\n        this.renderer.changed = true;\n    }\n\n\n    private createPickingMesh(geometry: THREE.BufferGeometry) {\n        const pickingMesh = new THREE.Mesh(geometry, this.renderer.matlib.pickingPolygonMaterial);\n        this.renderer.pickingScene.add(pickingMesh);\n        this.pickingMesh = pickingMesh;\n    }\n\n    private createMesh(geometry: THREE.BufferGeometry) {\n        const material = this.renderer.matlib.polygonMaterial;\n        const mesh = new THREE.Mesh(geometry, material);\n        mesh.receiveShadow = true;\n        mesh.castShadow = true;\n        this.renderer.scene.add(mesh);\n        this.mesh = mesh;\n    }\n\n    private createGeometry(vertices: Float32Array, objectid: Uint8Array) {\n        const geometry = new THREE.BufferGeometry();\n        geometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n        geometry.setAttribute('objectID', new THREE.BufferAttribute(objectid, 4, true));\n        geometry.setAttribute('color', new THREE.BufferAttribute(this.baseColors(vertices.length), 3, true));\n        geometry.computeVertexNormals();\n        return geometry;\n    }\n}","\n\nfunction capLeft(resolution: number) {\n    let vertices = [];\n    const shift = Math.PI / 2;\n    const step = Math.PI / resolution;\n\n    for (let i = 0; i < resolution; ++i) {\n        vertices.push(0, 0, 0);\n        vertices.push(Math.cos(shift + step * i), Math.sin(shift + step * i), 0);\n        vertices.push(Math.cos(shift + step * (i + 1)), Math.sin(shift + step * (i + 1)), 0);\n\n    }\n\n    return vertices\n}\n\nfunction capRight(resolution: number) {\n    let vertices = [];\n    const shift = Math.PI / 2;\n    const step = Math.PI / resolution;\n\n    for (let i = 0; i < resolution; ++i) {\n        vertices.push(1, 0, 0);\n        vertices.push(1 - Math.cos(shift + step * i), Math.sin(shift + step * i), 0);\n        vertices.push(1 - Math.cos(shift + step * (i + 1)), Math.sin(shift + step * (i + 1)), 0);\n    }\n\n    return vertices;\n}\n\nexport function segment(resolution: number = 5) {\n    let geometry = [\n        0, -1, 0,\n        1, -1, 0,\n        1, 1, 0,\n        0, -1, 0,\n        1, 1, 0,\n        0, 1, 0\n    ];\n\n    geometry = geometry.concat(capLeft(resolution));\n    geometry = geometry.concat(capRight(resolution));\n    return geometry;\n}\n","import { IModel } from \"../types\";\nimport * as THREE from \"three\";\n//import { Decoder } from \"../utils/decoder\";\nimport { Decoders, DecoderQueryType } from \"../utils/workers\";\nimport { segment } from \"./geometry\";\nimport { Tile } from \"../datamodel/tile\";\nimport { Model, ModelProxy } from \"./base\";\nimport { Overlay } from \"../datamodel/layer\";\n\n\nexport class LineModel extends Model {\n    constructor(data: IModel, tile: Tile, callback: CallableFunction, abort: CallableFunction) {\n        super(tile.renderer);\n        const offset = tile.renderer.picker.offsetForLayer(tile.layer.name);\n\n        Decoders.Instance.process([{\n                datatype: DecoderQueryType.float32,\n                buffer: data.vertices\n            }, {\n                datatype: DecoderQueryType.int32,\n                buffer: data.attributes.oid.data,\n                offset: offset\n            }], (vertices: Float32Array, objectid: Uint8Array) => {\n                this.init(vertices, objectid, tile);\n                callback(this);\n            });\n    }\n\n    private init(vertices: Float32Array, objectid: Uint8Array, tile: Tile) {\n        const geometry = this.createGeometry(vertices, objectid); //offset\n        this.createMesh(geometry);\n        this.createPickingMesh(geometry);\n\n        this.visible = tile.visible;\n        this.renderer.changed = true;\n    }\n\n    private createPickingMesh(geometry: THREE.BufferGeometry) {\n        const pickingMesh = new THREE.Mesh(geometry, this.renderer.matlib.pickingLineMaterial);\n        pickingMesh.frustumCulled = false;\n        this.renderer.pickingScene.add(pickingMesh);\n        this.pickingMesh = pickingMesh;\n    }\n\n    private createMesh(geometry: THREE.InstancedBufferGeometry) {\n        const mesh = new THREE.Mesh(geometry, this.renderer.matlib.lineMaterial);\n        mesh.frustumCulled = false; //this one was a big pain to figure out...\n        this.renderer.scene.add(mesh);\n        this.mesh = mesh;\n    }\n\n    private createGeometry(vertices: Float32Array, objectID: Uint8Array) {\n        const geometry = new THREE.InstancedBufferGeometry();\n        geometry.instanceCount = vertices.length / 3;\n        geometry.setAttribute('position', new THREE.BufferAttribute(new Float32Array(segment()), 3));\n        geometry.setAttribute('lineStart', new THREE.InterleavedBufferAttribute(\n            new THREE.InstancedInterleavedBuffer(vertices, 6, 1), 3, 0));\n\n        geometry.setAttribute('lineEnd', new THREE.InterleavedBufferAttribute(\n            new THREE.InstancedInterleavedBuffer(vertices, 6, 1), 3, 3));\n\n        geometry.setAttribute('objectID', new THREE.InstancedBufferAttribute(objectID, 4, true, 1));\n        geometry.setAttribute('color', new THREE.InstancedBufferAttribute(this.baseColors(vertices.length), 3, true, 1));\n\n        return geometry;\n    }\n}\n\nexport class LineProxyModel extends ModelProxy {\n    constructor(data: IModel, tile: Tile, callback: CallableFunction, abort: CallableFunction) {\n        super(tile.renderer);\n\n        const offset_source = tile.renderer.picker.offsetForLayer((tile.layer as Overlay).source);\n        //const offset_target = tile.renderer.picker.offsetForLayer((tile.layer as Overlay).target);\n\n        Decoders.Instance.process(\n            [{\n                datatype: DecoderQueryType.float32,\n                buffer: data.vertices\n            }, {\n                datatype: DecoderQueryType.int32,\n                buffer: data.attributes.source_oid.data,\n                offset: offset_source\n            }], (vertices: Float32Array, objectid: Uint8Array) => {\n                this.init(vertices, objectid, tile);\n                callback(this);\n            });\n    }\n\n    private init(vertices: Float32Array, objectid: Uint8Array, tile: Tile) {\n        const geometry = this.createGeometry(vertices, objectid); //offset\n        this.createMesh(geometry);\n        this.createPickingMesh(geometry);\n\n        this.visible = tile.visible;\n        this.renderer.changed = true;\n    }\n\n    private createPickingMesh(geometry: THREE.BufferGeometry) {\n        const pickingMesh = new THREE.Mesh(geometry, this.renderer.matlib.pickingLineMaterial);\n        pickingMesh.frustumCulled = false;\n        this.renderer.pickingScene.add(pickingMesh);\n        this.pickingMesh = pickingMesh;\n    }\n\n    private createMesh(geometry: THREE.InstancedBufferGeometry) {\n        const mesh = new THREE.Mesh(geometry, this.renderer.matlib.lineMaterial);\n        mesh.frustumCulled = false; //this one was a big pain to figure out...\n        this.renderer.scene.add(mesh);\n        this.mesh = mesh;\n    }\n\n    private createGeometry(vertices: Float32Array, objectID: Uint8Array) {\n        const geometry = new THREE.InstancedBufferGeometry();\n        geometry.instanceCount = vertices.length / 3;\n        geometry.setAttribute('position', new THREE.BufferAttribute(new Float32Array(segment()), 3));\n        geometry.setAttribute('lineStart', new THREE.InterleavedBufferAttribute(\n            new THREE.InstancedInterleavedBuffer(vertices, 6, 1), 3, 0));\n\n        geometry.setAttribute('lineEnd', new THREE.InterleavedBufferAttribute(\n            new THREE.InstancedInterleavedBuffer(vertices, 6, 1), 3, 3));\n        \n        geometry.setAttribute('objectID', new THREE.InstancedBufferAttribute(objectID, 4, true, 1));\n        geometry.setAttribute('color', new THREE.InstancedBufferAttribute(this.baseColors(vertices.length), 3, true, 1));\n\n        return geometry;\n    }\n}\n","import { IModel } from \"../types\";\nimport * as THREE from \"three\";\n//import { Decoder } from \"../utils/decoder\";\nimport { Decoders, DecoderQueryType } from \"../utils/workers\";\nimport { Tile } from \"../datamodel/tile\";\nimport { Model, ModelProxy } from \"./base\";\nimport { Overlay } from \"../datamodel/layer\";\n\n\nexport class PointModel extends Model {\n    constructor(data: IModel, tile: Tile, callback: CallableFunction, abort: CallableFunction) {\n        super(tile.renderer);\n        const offset = tile.renderer.picker.offsetForLayer(tile.layer.name);\n\n        Decoders.Instance.process(\n            [{\n                datatype: DecoderQueryType.float32,\n                buffer: data.vertices\n            }, {\n                datatype: DecoderQueryType.int32,\n                buffer: data.attributes.oid.data,\n                offset: offset\n            }],\n            (vertices: Float32Array, objectid: Uint8Array) => {\n                this.init(vertices, objectid, tile);\n                callback(this);\n            });\n\n    }\n\n    private init(vertices: Float32Array, objectid: Uint8Array, tile: Tile) {\n        const geometry = this.createGeometry(vertices, objectid);\n        this.createMesh(geometry);\n        this.createPickingMesh(geometry);\n        this.visible = tile.visible;\n        this.renderer.changed = true;\n    }\n\n\n    private createPickingMesh(geometry: THREE.BufferGeometry) {\n        const pickingMesh = new THREE.Mesh(geometry, this.renderer.matlib.pickingPointMaterial);\n        pickingMesh.frustumCulled = false;\n        this.renderer.pickingScene.add(pickingMesh);\n        this.pickingMesh = pickingMesh;\n    }\n\n    private createMesh(geometry: THREE.BufferGeometry) {\n        const material = this.renderer.matlib.pointMaterial;\n        const mesh = new THREE.Mesh(geometry, material);\n        mesh.frustumCulled = false;\n        //mesh.receiveShadow = true;\n        //mesh.castShadow = true;\n        this.renderer.scene.add(mesh);\n        this.mesh = mesh;\n    }\n\n    private createGeometry(vertices: Float32Array, objectid: Uint8Array) {\n        const symbol = new THREE.OctahedronGeometry(5, 0);\n        const symbolGeometry = new Float32Array(symbol.attributes.position.array);\n        symbol.dispose();\n\n        const geometry = new THREE.InstancedBufferGeometry();\n        geometry.instanceCount = vertices.length / 3;\n        geometry.setAttribute('position', new THREE.BufferAttribute(symbolGeometry, 3));\n        geometry.setAttribute('location', new THREE.InstancedBufferAttribute(vertices, 3, false, 1));\n        geometry.setAttribute('objectID', new THREE.InstancedBufferAttribute(objectid, 4, true, 1));\n        geometry.setAttribute('color', new THREE.InstancedBufferAttribute(this.baseColors(vertices.length), 3, true, 1));\n        geometry.computeVertexNormals();\n        return geometry;\n    }\n}\n\n\nexport class PointProxyModel extends ModelProxy {\n    constructor(data: IModel, tile: Tile, callback: CallableFunction, abort: CallableFunction) {\n        super(tile.renderer);\n        const offset_source = tile.renderer.picker.offsetForLayer((tile.layer as Overlay).source);\n        //const offset_target = tile.renderer.picker.offsetForLayer((tile.layer as Overlay).target);\n\n        Decoders.Instance.process(\n            [{\n                datatype: DecoderQueryType.float32,\n                buffer: data.vertices\n            }, {\n                datatype: DecoderQueryType.int32,\n                buffer: data.attributes.source_oid.data,\n                offset: offset_source\n            }], \n            (vertices: Float32Array, objectid: Uint8Array) => {\n                this.init(vertices, objectid, tile);\n                callback(this);\n            });\n\n    }\n\n    private init(vertices: Float32Array, objectid: Uint8Array, tile: Tile) {\n        const geometry = this.createGeometry(vertices, objectid);\n        this.createMesh(geometry);\n        this.createPickingMesh(geometry);\n        this.visible = tile.visible;\n        this.renderer.changed = true;\n    }\n\n\n    private createPickingMesh(geometry: THREE.BufferGeometry) {\n        const pickingMesh = new THREE.Mesh(geometry, this.renderer.matlib.pickingPointMaterial);\n        pickingMesh.frustumCulled = false;\n        this.renderer.pickingScene.add(pickingMesh);\n        this.pickingMesh = pickingMesh;\n    }\n\n    private createMesh(geometry: THREE.BufferGeometry) {\n        const material = this.renderer.matlib.pointMaterial;\n        const mesh = new THREE.Mesh(geometry, material);\n        mesh.frustumCulled = false;\n        //mesh.receiveShadow = true;\n        //mesh.castShadow = true;\n        this.renderer.scene.add(mesh);\n        this.mesh = mesh;\n    }\n\n    private createGeometry(vertices: Float32Array, objectid: Uint8Array) {\n        const symbol = new THREE.OctahedronGeometry(5, 0);\n        const symbolGeometry = new Float32Array(symbol.attributes.position.array);\n        symbol.dispose();\n\n        const geometry = new THREE.InstancedBufferGeometry();\n        geometry.instanceCount = vertices.length / 3;\n        geometry.setAttribute('position', new THREE.BufferAttribute(symbolGeometry, 3));\n        geometry.setAttribute('location', new THREE.InstancedBufferAttribute(vertices, 3, false, 1));\n        geometry.setAttribute('objectID', new THREE.InstancedBufferAttribute(objectid, 4, true, 1));\n        geometry.setAttribute('color', new THREE.InstancedBufferAttribute(this.baseColors(vertices.length), 3, true, 1));\n        geometry.computeVertexNormals();\n        return geometry;\n    }\n}\n","import { IMove } from \"../types\";\nimport * as THREE from \"three\";\nimport { Decoders, DecoderQueryType } from \"../utils/workers\";\nimport { Interval } from \"../datamodel/interval\";\nimport { Model } from \"./base\";\n\n\nexport class Move extends Model {\n    time: number;\n\n    constructor(data: IMove, interval: Interval, callback: CallableFunction, abort: CallableFunction) {\n        super(interval.renderer);\n        this.time = data.time;\n        const offset = interval.layer.getOffset();\n\n        Decoders.Instance.process([\n            {\n                datatype: DecoderQueryType.float32,\n                buffer: data.from\n            }, {\n                datatype: DecoderQueryType.float32,\n                buffer: data.to\n            }, {\n                datatype: DecoderQueryType.int32,\n                buffer: data.oid,\n                offset: offset\n            }, {\n                datatype: DecoderQueryType.float32,\n                buffer: data.from_speed,\n            },{\n                datatype: DecoderQueryType.float32,\n                buffer: data.to_speed,\n            }], \n            (from: Float32Array, to: Float32Array, objectid: Uint8Array, from_speed: Float32Array, to_speed: Float32Array) => {\n                    this.init(from, to, objectid, from_speed, to_speed);\n                    callback(this);\n            });\n        }\n\n    private init(from: Float32Array, to: Float32Array, objectid: Uint8Array, from_speed: Float32Array, to_speed: Float32Array) {\n        const geometry = this.createGeometry(from, to, objectid, from_speed, to_speed);\n        this.createMesh(geometry);\n        this.createPickingMesh(geometry);\n        this.visible = true;\n        this.renderer.changed = true;\n    }\n\n    private createMesh(geometry: THREE.BufferGeometry) {\n        const material = this.renderer.matlib.agentMaterial;\n        const mesh = new THREE.Mesh(geometry, material);\n        mesh.frustumCulled = false;\n        //mesh.receiveShadow = true;\n        //mesh.castShadow = true;\n        this.renderer.scene.add(mesh);\n        this.mesh = mesh;\n    }\n\n    private createPickingMesh(geometry: THREE.BufferGeometry) {\n        const material = this.renderer.matlib.pickingAgentMaterial;\n        const pickingMesh = new THREE.Mesh(geometry, material);\n        pickingMesh.frustumCulled = false;\n        this.renderer.pickingScene.add(pickingMesh);\n        //this.renderer.scene.add(pickingMesh);\n        this.pickingMesh = pickingMesh;\n    }\n\n    private createGeometry(from: Float32Array, to: Float32Array, objectid: Uint8Array, from_speed: Float32Array, to_speed: Float32Array) {\n        const symbol = new THREE.OctahedronGeometry(35, 0);\n        const symbolGeometry = new Float32Array(symbol.attributes.position.array);\n        symbol.dispose();\n\n        const geometry = new THREE.InstancedBufferGeometry();\n        geometry.instanceCount = from.length / 3;\n        geometry.setAttribute('position', new THREE.BufferAttribute(symbolGeometry, 3));\n        geometry.setAttribute('from', new THREE.InstancedBufferAttribute(from, 3, false, 1));\n        geometry.setAttribute('from_speed', new THREE.InstancedBufferAttribute(from_speed, 1, false, 1));\n        geometry.setAttribute('to', new THREE.InstancedBufferAttribute(to, 3, false, 1));\n        geometry.setAttribute('to_speed', new THREE.InstancedBufferAttribute(to_speed, 1, false, 1));\n        geometry.setAttribute('objectID', new THREE.InstancedBufferAttribute(objectid, 4, true, 1));\n        geometry.setAttribute('color', new THREE.InstancedBufferAttribute(this.baseColors(from.length), 3, true, 1));\n        geometry.computeVertexNormals();\n        return geometry;\n    }\n}\n\n\n","import { PolygonalModel, PolygonalProxyModel } from \"../geometry/polygons\"\nimport { LineModel, LineProxyModel } from \"../geometry/lines\"\nimport { PointModel, PointProxyModel } from \"../geometry/points\"\nimport { Tile } from \"../datamodel/tile\";\nimport { IModel, IMovement } from \"../types\";\nimport { Model } from \"./base\"\nimport { Interval } from \"../datamodel/interval\";\nimport { Move } from \"./movement\";\n\n\nconst registeredModels: {[name: string]: {[name: string]: new(data: IModel, tile: Tile, callback: CallableFunction, abort: CallableFunction) => Model }} = {\n    model: {\n        simplepolygon: PolygonalModel,\n        simpleline: LineModel,\n        simplepoint: PointModel,\n    },\n    proxy: {\n        simpleline: LineProxyModel,\n        simplepolygon: PolygonalProxyModel,\n        simplepoint: PointProxyModel,\n    }\n};\n\nconst modelTypes = Object.keys(registeredModels.model);\nconst proxyTypes = Object.keys(registeredModels.proxy);\n\n\nexport function deserializeModel(data: IModel, tile: Tile, callback: CallableFunction = () => {}, abort: CallableFunction = () => false) {\n    if (data.tags && data.tags.proxy === true) {\n        if (proxyTypes.includes(data.type)) \n            return new (registeredModels.proxy[data.type])(data, tile, callback, abort);\n        throw new Error(`Proxy type ${data.type} is not registered`);\n    } else {\n        if (modelTypes.includes(data.type))\n            return new registeredModels.model[data.type](data, tile, callback, abort);\n        throw new Error(`Model type ${data.type} is not registered`);\n    }\n}\n\nexport function deserializeMovement(data: IMovement, interval: Interval, callback: CallableFunction, abort: CallableFunction) {\n    for (let i = 0; i < data.length; ++i) {\n        new Move({ from: data.from[i], to: data.to[i], oid: data.oid[i], time: data.start_time + i, from_speed: data.from_speed[i], to_speed: data.to_speed[i] }, interval, callback, abort);\n    }\n}","import { ITile } from \"../types\";\nimport { Layer, Overlay } from \"./layer\";\nimport { Renderer } from \"../renderer/renderer\"\nimport { Vector2, Vector3 } from \"three\";\nimport iaxios from \"../../axios\";\nimport axios from \"axios\";\nimport { Model } from \"../geometry/base\"\nimport { deserializeModel } from \"../geometry/deserialize\"\nimport { host } from \"../engine\"\nimport { apiurl } from \"../../url\";\n\nclass TileLoader {\n    //axios stop request\n    stopFlag: any;\n    loaded: boolean;\n\n    constructor() {\n        this.loaded = false;\n    }\n\n    get(tile: Tile, callback: CallableFunction) {\n        this.stopFlag = axios.CancelToken.source();\n        tile.renderer.status.actions.loadingGeometry.start();\n\n        const prefix = (Math.abs(tile.x) + Math.abs(tile.y)) % 6;\n\n        iaxios.get(`${apiurl.PROJECTDATA}${tile.layer.project}/${tile.layer.name}/grid/stream/${tile.sourceFile}`, {\n            cancelToken: this.stopFlag.token,\n            baseURL: `http://static${prefix}.${host}`,\n        }).then(\n            (response) => {\n                tile.renderer.status.actions.loadingGeometry.stop();\n\n                if (this.loaded) //to avoid race conditions\n                    return;\n\n                this.loaded = true;\n                this.stopFlag = null;\n                callback(response.data);\n            }\n        ).catch((reject) => {\n            tile.renderer.status.actions.loadingGeometry.stop();\n            this.stopFlag = null;\n        });\n    }\n\n    abort() {\n        if (this.stopFlag)\n            this.stopFlag.cancel();\n        this.stopFlag = null;\n    }\n}\n\n\nexport class Tile {\n    bbox: [Vector3, Vector3];\n    brect: [Vector2, Vector2];\n    x: number;\n    y: number;\n    renderer: Renderer;\n    layer: Layer | Overlay;\n    sourceFile: string;\n    models: Model[];\n    private isVisible: boolean;\n    private loader: TileLoader;\n    private caching: boolean; \n\n\n    constructor(data: ITile, renderer: Renderer, layer: Layer | Overlay) {\n        this.bbox = [new Vector3(...data.box[0]), new Vector3(...data.box[1])];\n        this.brect = [new Vector2(this.bbox[0].x, this.bbox[0].y), new Vector2(this.bbox[1].x, this.bbox[1].y)];\n        this.x = data.x;\n        this.y = data.y;\n        this.sourceFile = data.file;\n        this.layer = layer;\n        this.renderer = renderer;\n        this.isVisible = false;\n        this.models = [];\n        this.loader = new TileLoader();\n        this.caching = false;\n    }\n\n    set visible(isVisible: boolean) {\n        if (this.isVisible === isVisible)\n            return;\n\n        this.isVisible = isVisible;\n\n        if (isVisible)\n            this.show();\n        else\n            this.hide();\n    }\n\n    get visible() {\n        return this.isVisible;\n    }\n\n    show() {\n        if (!this.loader.loaded) {\n            this.loader.get(this, (models: Array<any>) => {\n\n                if (!this.isVisible && !this.caching)\n                    return this.disposeCache();\n\n\n                for (let modeldata of models) {\n\n                    this.renderer.status.actions.parsingGeometry.start();\n                    deserializeModel(modeldata, this, (model: Model) => {\n                        this.renderer.status.actions.parsingGeometry.stop();\n                        this.models.push(model);\n\n                        if (!this.isVisible && !this.caching)\n                            return this.disposeCache();\n\n                        this.layer.applyStyleToModels(this.models);\n\n                        if (!this.isVisible && !this.caching)\n                        return this.disposeCache();\n\n                    }, () => {\n                        if (!this.isVisible)\n                        {\n                            this.renderer.status.actions.parsingGeometry.stop();\n                            this.disposeCache();\n                        }\n                        \n                        return !this.isVisible;}\n                    );\n                }\n            });\n        }\n\n        if (this.caching) {\n            for (const m of this.models)\n                m.visible = true;\n        }\n    }\n\n    hide() {\n        if (!this.loader.loaded) {\n            this.loader.abort();\n        }\n        \n        if (!this.caching) {\n            this.disposeCache();\n        } else {\n            for (const m of this.models)\n                m.visible = false;\n        }\n    }\n\n    remove() {\n        if (this.models.length > 0) {\n            for (const m of this.models)\n                m.remove();\n            this.models = [];\n        }\n    }\n\n    enableCache() {\n        this.caching = true;\n    }\n\n    disableCache() {\n        this.caching = false;\n\n        if (!this.isVisible) {\n            this.disposeCache();\n        }\n    }\n    \n    disposeCache() {\n        console.log(\"dispose cache\");\n        for (const m of this.models)\n            m.remove();\n\n        this.models = [];\n        this.loader.loaded = false;\n    }\n}","import { Vector2, Vector3 } from \"three\";\nimport { Renderer } from \"../renderer/renderer\";\nimport { Tile } from \"./tile\";\nimport { IVecBBox, IGrid } from \"../types\";\nimport { Layer, Overlay } from \"./layer\";\n\n\nfunction getNthTriangularNumber(n: number) {\n    return (n * (n + 1)) / 2;\n}\n\n\nfunction toSpiral(x: number, y: number) {\n    let level = Math.max(Math.abs(x), Math.abs(y))\n\n    if (x === 0 && y === 0) {\n        return 0\n    }\n\n    let base = getNthTriangularNumber(level - 1) * 8;\n\n    if ((x > Math.abs(y)) || (x === y && x > 0)) {\n        return base + level + y;\n    } else if (((y > Math.abs(x)) || (y === -x)) && (y > 0)) {\n        return base + (level * 4) - (level) - x;\n    } else if ((x < y) || ((x === y) && (x < 0))) {\n        return base + (level * 5) - y;\n    } else if ((y < x) || ((-y === x) && (y < 0))) {\n        return base + (level * 7) + x;\n    }\n    throw new Error(\"Cannot covert to 1D\");\n}\n\nfunction extend(a: IVecBBox, b: IVecBBox) {\n    a[0].min(b[0]);\n    a[1].max(b[1]);\n}\n\nfunction center(b: IVecBBox) {\n    return new Vector2((b[0].x + b[1].x) * 0.5, (b[0].y + b[1].y) * 0.5);\n}\n\n\nexport class Grid {\n    bbox: IVecBBox;\n    brect: [Vector2, Vector2];\n    focusPoint: Vector2;\n    renderer: Renderer;\n    tileSize: number;\n\n    tiles: Map<number, Tile>;\n    visible_radius: number;\n    visible: Set<Tile>;\n    visibleSwap: Set<Tile>;\n    readonly zero2: Vector2;\n    layer: Layer | Overlay;\n    \n    constructor(data: IGrid, renderer: Renderer, layer: Layer | Overlay) {\n        this.tileSize = data.tile_size;\n        this.renderer = renderer;\n        this.layer = layer;\n\n        this.bbox = [new Vector3(Infinity, Infinity, Infinity), new Vector3(-Infinity, -Infinity, -Infinity)];\n        this.tiles = new Map<number, Tile>();\n        \n        this.createTiles(data, renderer, layer);\n        \n        this.brect = [new Vector2(this.bbox[0].x, this.bbox[0].y), new Vector2(this.bbox[1].x, this.bbox[1].y)];\n        this.focusPoint = new Vector2(Infinity, Infinity);\n        \n        this.visible_radius = 2000;\n        this.visibleSwap = new Set<Tile>();\n        this.visible = new Set<Tile>();\n        \n        this.zero2 = new Vector2();\n    }\n\n    get center() {\n        return center(this.bbox);\n    }\n\n    hide() {\n        for (const tile of this.visible.values()) {\n            tile.visible = false;\n        }\n    }\n\n    show() {\n        for (const tile of this.visible.values()) {\n            tile.visible = true;\n        }\n    }\n    \n    private createTiles(data: IGrid, renderer: Renderer, layer: Layer | Overlay) {\n        for (const tiledata of data.tiles) {\n            let idx = toSpiral(tiledata.x, tiledata.y);\n            const tile = new Tile(tiledata, renderer, layer);\n            extend(this.bbox, tile.bbox);\n            this.tiles.set(idx, tile);\n        }\n    }\n\n    updateVisibleTiles(fp: Vector3) {\n        const visibleTile = this.focusPoint.clone().divideScalar(this.tileSize).floor()\n        const nvisibleTile = new Vector2(fp.x, fp.y).divideScalar(this.tileSize).floor();\n\n        if (!visibleTile.equals(nvisibleTile)) {\n            this.focusPoint.set(fp.x, fp.y);\n            this.updateVisibility(nvisibleTile)\n        } \n    }\n\n    reloadVisibility() {\n        this.updateVisibility(this.focusPoint.clone().divideScalar(this.tileSize).floor());\n    }\n\n    updateVisibility(visibleTile: Vector2) {\n        const tmpVisible = this.visible;\n        this.visible = this.visibleSwap;\n        this.visibleSwap = tmpVisible;\n\n        const trad = Math.ceil(this.visible_radius / this.tileSize);\n        const sid = visibleTile.clone().subScalar(trad);\n        const eid = visibleTile.clone().addScalar(trad + 1);\n\n        this.visible.clear();\n\n        for (let x = sid.x; x < eid.x; ++x) {\n            for (let y = sid.y; y < eid.y; ++y) {\n                let idx = toSpiral(x, y);\n                const tile = this.tiles.get(idx);\n                if (tile)\n                {\n                    tile.visible = true;\n                    this.visible.add(tile);\n                }\n            }\n        }\n\n        this.visibleSwap.forEach((tile: Tile) => {\n            if (!this.visible.has(tile)) {\n                tile.visible = false;\n            }\n        });\n    }\n}","import { Renderer } from \"../renderer/renderer\";\nimport { ITimeline } from \"../types\";\nimport { Layer, Overlay } from \"./layer\";\nimport { Interval } from \"./interval\"\nimport { le } from \"binary-search-bounds\"\n\nconst MINPRELOAD = 2;\nconst PRELOADI = 5;\n\nenum LoadStatus {\n    loading,\n    wontload,\n    loaded\n};\n\nexport class Timeline {\n    intervals: Interval[];\n    intervalLength: number;\n    isVisible: boolean;\n    active: number;\n    start: number;\n    end: number;\n    fillingBuffer: boolean;\n\n    loaded: Map<number, LoadStatus>;\n\n    constructor(data: ITimeline, renderer: Renderer, layer: Layer | Overlay) {\n        this.intervals = [];\n        this.intervalLength = data.interval_length;\n        this.active = -1;\n        this.isVisible = true;\n\n        this.fillingBuffer = true;\n        this.loaded = new Map();\n\n        for (const idata of data.intervals)\n            this.intervals.push(new Interval(idata, this.intervalLength, renderer, layer));\n\n        this.intervals.sort((a, b) => a.start - b.start)\n        this.start = this.intervals[0].start;\n        this.end = this.intervals[this.intervals.length - 1].start + this.intervalLength;\n\n        renderer.timeline.addTimeline(this);\n    }\n\n    set visible(isVisible: boolean) {\n        if (this.isVisible === isVisible)\n            return;\n\n        this.isVisible = isVisible;\n\n        if (isVisible)\n            this.show();\n        else\n            this.hide();\n    }\n\n    get countLoaded() {\n        let count = 0;\n        for (const status of this.loaded.values())\n            if (status !== LoadStatus.loading)\n                count++;\n        return count;\n    }\n\n    get ready() {\n        const cl = this.countLoaded;\n\n        if (this.fillingBuffer){\n            if (cl >= MINPRELOAD)\n            {\n                this.fillingBuffer = false;\n                return true;\n            }\n            return false;\n        }\n        return cl >= MINPRELOAD;\n    }\n\n    render(time: number) {\n        if (!this.isVisible)\n            return;\n\n        this.updateLoaded(time);  \n\n        if (!this.intervals[this.active] || !this.intervals[this.active].contains(time))\n            this.swapActive(time);\n\n        if (this.active !== -1)\n            this.intervals[this.active].render(time);\n    }\n\n\n    updateLoaded(time: number) {\n        const current = this.current(time);\n        for (let i = current; i < current + PRELOADI; i++)\n            this.loadInterval(i);\n        this.discard(current);\n    }\n\n    swapActive(time: number) {\n        const i = this.current(time);\n        this.active = -1;\n        if (this.intervals[i].init) {\n            this.active = i;\n        }\n    }\n\n    private current(time: number) {\n        const interval: number = le(this.intervals, {start: time} as Interval, (a, b) => a.start - b.start);\n        return interval;\n    }\n\n    private loadInterval(index: number) {\n        const interval = this.intervals[index];\n\n        if (!interval) {\n            this.loaded.set(index, LoadStatus.wontload);\n            return;\n        }\n        \n        if (interval.init || interval.loading){\n            return;\n        }\n\n        this.loaded.set(index, LoadStatus.loading);\n        \n        interval.load(() => {\n            this.loaded.set(index, LoadStatus.loaded);\n        });\n    }\n\n    private discard(nowIndex: number) {        \n        for (const index of this.loaded.keys()) {\n            if (index < nowIndex || index >= nowIndex + PRELOADI)\n                this.unloadInterval(index);\n        }\n    }\n\n    private unloadInterval(index: number) {\n        if (this.loaded.get(index) !== LoadStatus.wontload)\n            this.intervals[index].remove();\n        this.loaded.delete(index);\n    }\n\n    hide() {\n        this.visible = false;\n\n        if (this.active === -1)\n            return;\n\n        this.intervals[this.active].hide();\n    }\n\n    show() {\n        this.visible = true;\n\n        if (this.active === -1)\n            return;\n\n        this.intervals[this.active].show();\n    }\n}","import iaxios from \"../../axios\";\nimport { Renderer } from \"../renderer/renderer\";\nimport { IInterval } from \"../types\";\nimport { Layer, Overlay } from \"./layer\";\nimport { Move } from \"../geometry/movement\"\nimport { deserializeMovement } from \"../geometry/deserialize\";\nimport { apiurl } from \"../../url\";\n\nexport class Interval {\n    start: number;\n    end: number;\n    length: number;\n    file: string;\n    renderer: Renderer;\n    layer: Layer | Overlay;\n    moves: Move[];\n    loading: boolean;\n    init: boolean;\n    acitve: number;\n    delayedCall?: NodeJS.Timeout;\n\n    constructor(data: IInterval, length: number, renderer: Renderer, layer: Layer | Overlay) {\n        this.start = data.start_time;\n        this.length = length;\n        this.end = this.start + length;\n        this.file = data.file;\n        this.renderer = renderer;\n        this.layer = layer;\n        this.loading = false;\n        this.init = false;\n        this.delayedCall = undefined;\n        this.acitve = -1;\n        this.moves = []\n    }\n\n    load(callback: () => void) {\n        if (this.loading || this.init)\n            return false;\n            \n        this.loading = true;\n        this.delayedCall = setTimeout(() => {\n            this.delayedCall = undefined;\n            this.renderer.status.actions.loadingGeometry.start();\n            iaxios.get(`${apiurl.PROJECTDATA}${this.layer.project}/${this.layer.name}/timeline/stream/${this.file}`).then(\n                (response) => {\n                    const data = response.data;\n                    this.renderer.status.actions.loadingGeometry.stop();\n                    this.renderer.status.actions.parsingGeometry.start();\n                    deserializeMovement(data, this, (move: Move) => {\n                        this.moves.push(move);\n                        move.visible = false;\n                        if (this.moves.length === this.length)\n                        {\n                            this.renderer.status.actions.parsingGeometry.stop();\n                            this.finalizeInit();\n                            callback();\n                        }\n                    }, () => false);\n                }\n            )    \n        }, 1000);\n\n        return true;\n    }\n\n    finalizeInit() {\n        this.moves.sort((a, b) => a.time - b.time);\n        this.init = true;\n        this.loading = false;\n    }\n\n    render(time: number) {\n        if (!this.init)\n            return;\n\n        const current = Math.floor(time) - this.start;\n        if (this.acitve === current)\n            return;\n\n        //do swap\n        if (this.acitve !== -1)\n            this.moves[this.acitve].visible = false;\n\n        if (current >= this.moves.length)\n            return;\n            \n        this.moves[current].visible = true;\n        this.acitve = current;\n    }\n\n    contains(time: number) {\n        return time >= this.start && time < this.end; \n    }\n\n    remove() {\n        for(const move of this.moves)\n            move.remove();\n\n        if (this.delayedCall)\n            clearTimeout(this.delayedCall);\n        \n        this.loading = false;\n        this.init = false;\n        this.moves = [];\n    }\n\n    hide() {\n        if (this.acitve === -1)\n            return;\n\n        this.moves[this.acitve].visible = false;\n    }\n\n    show() {\n        if (this.acitve === -1)\n            return;\n\n        this.moves[this.acitve].visible = true;\n    }\n}","import { Renderer } from \"../renderer/renderer\";\nimport { Grid } from \"./grid\";\nimport { Timeline } from \"./timeline\";\nimport { ILayerData, IOverlayData, ILayerBaseData } from \"../types\";\nimport * as THREE from \"three\";\nimport { LayerStyle } from \"../renderer/style\";\nimport iaxios from \"../../axios\";\nimport { Model } from \"../geometry/base\";\nimport { apiurl } from \"../../url\";\n\n\nabstract class LayerBase {\n    name: string;\n    project: string;\n    renderer: Renderer;\n    grid?: Grid; //undefined if the layer is not visible\n    timeline?: Timeline; \n    style?: LayerStyle;\n    visibility: boolean;\n\n\n    constructor(renderer: Renderer, project: string, data: ILayerBaseData, style_names: string[]) {\n        this.name = data.name;\n        this.project = project;\n        this.renderer = renderer;\n        this.visibility = true;\n    }\n\n    set visible(v: boolean) {\n        if (v === this.visibility)\n            return;\n\n        this.visibility = v;\n        if (this.visibility)\n            this.show();\n        else\n            this.hide();\n    }\n\n    get visible() {\n        return this.visibility;\n    }\n    \n    init(data: ILayerBaseData) {\n        if (data.grid)\n        {\n            this.grid = new Grid(data.grid, this.renderer, this as any);\n            this.renderer.controls.focus(this.grid.center);\n            this.grid.updateVisibleTiles(this.renderer.controls.target);\n            this.renderer.changed = true;\n        }\n\n        if (data.timeline)\n        {  \n            this.timeline = new Timeline(data.timeline, this.renderer, this as any);\n            this.renderer.changed = true;\n        }\n    }\n\n    updateVisibleRadius(point: THREE.Vector3) {\n        if (!this.visibility)\n            return;\n\n        if (this.grid)\n            this.grid.updateVisibleTiles(point);\n    }\n\n    hide() {\n        if (this.grid)\n            this.grid.hide();\n        if (this.timeline)\n            this.timeline.hide();\n        this.renderer.changed = true;\n    }\n    \n    show() {\n        if (this.grid)\n            this.grid.reloadVisibility();\n        if (this.timeline)\n            this.timeline.show();\n        this.renderer.changed = true;\n    }\n\n    setVisibleRadius(radius: number) {\n        if (this.grid)\n        {\n            this.grid.visible_radius = radius;\n            if (this.visible)\n                this.grid.reloadVisibility();\n        }\n\n        this.renderer.changed = true;\n    }\n\n    applyStyle(style: string) {\n        iaxios.get(`${apiurl.PROJECTDATA}${this.project}/styles/${style}/${this.name}.json`, {\n            headers: {\n                'Cache-Control': 'no-cache',\n                'Pragma': 'no-cache',\n                'Expires': '0'\n            }\n        }).then((response) => {\n            new LayerStyle(response.data, (lstyle: LayerStyle) => {\n                this.style = lstyle;\n\n                if (this.grid)\n                {\n                    for (let tile of this.grid.tiles.values()) {\n                        this.applyStyleToModels(tile.models);\n                    }\n                }\n            });\n        }).catch(() => {\n            this.clearStyle();\n        });\n    }\n\n    abstract applyStyleToModels(models: Model[]): void;\n    abstract getOffset(): number;\n\n    clearStyle() {\n        this.style = undefined;\n        if (this.grid)\n            for (let tile of this.grid.tiles.values()) {\n                this.applyStyleToModels(tile.models);\n            }\n    }\n\n    enableCache() {\n        if (this.grid)\n            for (let tile of this.grid.tiles.values()) {\n                tile.enableCache();\n            }\n    }\n\n    disableCache() {\n        if (this.grid)\n            for (let tile of this.grid.tiles.values()) {\n                tile.disableCache();\n            }\n    }\n}\n\n\nexport class Layer extends LayerBase {\n    size: number;\n\n    constructor(renderer: Renderer, project: string, data: ILayerData, style_names: string[]) {\n        super(renderer, project, data, style_names);\n        this.size = data.size;\n        this.renderer.picker.offsetForLayer(this.name, this.size);\n        this.init(data);\n    }\n\n    applyStyleToModels(models: Model[]) {\n        const offset = this.renderer.picker.offsetForLayer(this.name);\n        for (let model of models) {\n            model.applyStyle(offset, this.style);\n        }\n    }\n\n    getOffset() {\n        return this.renderer.picker.offsetForLayer(this.name);\n    }\n}\n\nexport class Overlay extends LayerBase {\n    source: string;\n    target: string;\n    size: [number, number];\n\n    constructor(renderer: Renderer, project: string, data: IOverlayData, style_names: string[]) {\n        super(renderer, project, data, style_names);\n        this.source = data.source;\n        this.target = data.target;\n        this.size = data.size;\n        this.renderer.picker.offsetForLayer(this.source, this.size[0]);\n        this.renderer.picker.offsetForLayer(this.target, this.size[1]);\n        this.init(data);\n    }\n\n    applyStyleToModels(models: Model[]) {\n        const offset = this.renderer.picker.offsetForLayer(this.source);\n        \n        for (let model of models) {\n            model.applyStyle(offset, this.style);\n        }\n    }\n\n    getOffset() {\n        return this.renderer.picker.offsetForLayer(this.source);\n    }\n}\n\n","\nimport { Renderer } from '../renderer/renderer'\nimport iaxios from '../../axios'\nimport { Layer, Overlay } from './layer'\nimport { apiurl } from '../../url'\n\n\nexport class Project {\n    name: string;\n    renderer: Renderer;\n    layers: (Layer | Overlay)[];\n    styles: string[];\n    usedStyle?: string;\n\n    constructor(name: string, renderer: Renderer) {\n        this.name = name;\n        this.renderer = renderer;\n        this.layers = [];\n        this.styles = [];\n\n        iaxios.get(`${apiurl.PROJECTDATA}${this.name}/layout.json`, {\n            headers: {\n                'Cache-Control': 'no-cache',\n                'Pragma': 'no-cache',\n                'Expires': '0'\n            }\n        }).then((response) => {\n            const styles = response.data.styles;\n            this.styles = styles;\n            for (const layer of response.data.layers)\n            {\n                if(layer.disabled || !(layer.grid || layer.timeline))\n                    continue;\n                \n                if (layer.type === \"layer\")\n                    this.layers.push(new Layer(this.renderer, this.name, layer, styles));   \n            }\n\n            for (const overlay of response.data.layers)\n            {\n                if(overlay.disabled || !(overlay.grid || overlay.timeline))\n                    continue;\n                \n                if (overlay.type === \"overlay\")\n                    this.layers.push(new Overlay(this.renderer, this.name, overlay, styles));   \n            }\n        });\n    }\n\n    updateVisibleRadius(target: THREE.Vector3) {\n        for (const layer of this.layers){\n            layer.updateVisibleRadius(target);\n        }\n    }\n\n    setVisibleRadius(radius: number) {\n        for(let layer of this.layers)\n            layer.setVisibleRadius(radius);\n    }\n\n    useCache(enable: boolean){\n        for(let layer of this.layers)\n            enable? layer.enableCache() : layer.disableCache();\n    }\n\n    applyStyle(style: string){\n        if(this.styles.indexOf(style) === -1){\n            return;\n        }\n\n        this.usedStyle = style;\n        for(const layer of this.layers){\n            layer.applyStyle(style);\n        }\n    }\n\n    clearStyle(){\n        this.usedStyle = undefined;\n        for(const layer of this.layers){\n            layer.clearStyle();\n        }\n    }\n}","import { Renderer } from \"./renderer/renderer\";\nimport { Selector } from \"./renderer/selector\";\nimport { Project } from \"./datamodel/project\";\nimport iaxios from \"../axios\";\nimport { apiurl } from \"../url\";\n\nexport let host = window.location.host;\n\nif (process.env.NODE_ENV !== 'production') {\n    host = \"localhost:5000\"\n}\n\n\nexport class EngineControls {\n    renderer: Renderer;\n    project: Project;\n    keymap: {[key: string]: boolean};\n\n    showMetaCallback?: (meta: {[name: string]: any}) => void;\n    closeMetaCallback?: () => void;\n    updateCompasCallback?: (angle: number) => void;\n    updateTimeCallback?: (time: number, start: number, end: number) => void;\n\n    clickTime: number;\n    selectingRegion: boolean;\n    selectingRegionDown: boolean;\n\n    constructor(renderer: Renderer, project: Project) {\n        this.renderer = renderer;\n        this.project = project;\n        this.keymap = {};\n        this.clickTime = 0;\n        this.selectingRegion = false;\n        this.selectingRegionDown = false;\n    }\n\n    select(oid: number) {\n        this.renderer.select(oid);\n    }\n\n    selectCoord(x: number, y: number) {\n        const selected = this.renderer.click(x, y);\n\n        if (!selected)\n            return;\n\n        iaxios.post(apiurl.GETMETA, {\n            project: this.project.name,\n            layer: selected.layer,\n            oid: selected.oid\n        }).then(res => {\n            console.log(res.data);\n            const data = res.data;\n            data['oid'] = selected.oid;\n            data['layer'] = selected.layer;\n\n            if (this.showMetaCallback)\n                this.showMetaCallback(res.data);\n        });\n    }\n\n    mouseDown(x: number, y: number, time: number, button: number) {\n        this.clickTime = time;\n        if (this.selectingRegion)\n        {\n            this.renderer.selector.clear();\n            this.renderer.selector.select(x, y);\n            this.selectingRegionDown = true;\n            this.renderer.changed = true;\n        }\n    }\n\n    mouseOver(x: number, y: number) {\n        if (this.selectingRegion && this.selectingRegionDown)\n        {\n            this.renderer.selector.select(x, y);\n            this.renderer.changed = true;\n        }\n    }\n\n    mouseUp(x: number, y: number, time: number, button: number) {\n        const duration = time - this.clickTime;\n\n        if (duration < 200)\n        {\n            if (button === 0)\n                this.selectCoord(x, y);\n            else if (button === 2 && this.closeMetaCallback)\n                this.closeMetaCallback();\n        }\n            \n        if (this.selectingRegion)\n            this.selectingRegionDown = false;\n\n        this.clickTime = time;\n    }\n\n    keyDown(key: string) {\n        console.log('key down', key);\n        this.keymap[key] = true;\n    }\n\n    keyUp(key: string) {\n        console.log('key up', key);\n        this.keymap[key] = false;\n    }\n\n    actions() {\n        if (this.keymap['KeyU'])\n        {\n            this.renderer.updateHelper();\n            this.keymap['KeyU'] = false;\n        }\n    \n        if (this.updateTimeCallback){\n            this.updateTimeCallback(this.renderer.timeline.time, this.renderer.timeline.start, this.renderer.timeline.end);\n        }\n    }\n\n    swapCamera() {\n        this.renderer.controls.swap();\n        this.renderer.changed = true;\n    }\n\n    disableCamera() {\n        this.renderer.controls.controls.enabled = false;\n        this.renderer.controls.controls.update();\n    }\n    \n    enableCamera() {\n        this.renderer.controls.controls.enabled = true;\n        this.renderer.controls.controls.update();\n    }\n\n    startSelectingRegion() {\n        this.selectingRegion = true;\n    }\n    \n    endSelectingRegion() {\n        this.selectingRegion = false;\n        this.renderer.selector.clear();\n    }\n\n    useOrthogonalProjection() {\n        this.renderer.controls.useOrtho();\n        this.renderer.changed = true;\n    }\n\n    resize(x: number, y: number) {\n        this.renderer.resize(x, y);\n    }\n\n    zoomIn() {\n        this.renderer.controls.zoomIn(10);\n        this.renderer.changed = true;\n    }\n\n    zoomOut() {\n        this.renderer.controls.zoomOut(10);\n        this.renderer.changed = true;\n    }\n\n    setPointSize(size: number){\n        this.renderer.setPointSize(size);\n    }\n\n    setLineWidth(size: number){\n        this.renderer.setLineWidth(size);\n    }\n\n    updateVisibleRadius(target: THREE.Vector3) {\n        this.project.updateVisibleRadius(target);\n    }\n\n    setVisibleRadius(radius: number) {\n        this.project.setVisibleRadius(radius);\n    }\n\n    useCache(enable: boolean){\n        this.project.useCache(enable);\n    }\n\n    applyStyle(style: string){\n        this.project.applyStyle(style);\n    }\n\n    useShadows(enable: boolean){\n        if (enable)\n            this.renderer.enableShadows();\n        else\n            this.renderer.disableShadows();\n    }\n\n    setTime(time: number){\n        this.renderer.timeline.time = time;\n    }\n\n    setPlay(play: boolean){\n        this.renderer.timeline.play = play;\n    }\n\n    getPlay(){\n        return this.renderer.timeline.play;\n    }\n\n    setSpeed(speed: number){\n        this.renderer.timeline.speed = speed;\n    }\n    \n    getSpeed(){\n        return this.renderer.timeline.speed;\n    }\n}\n\n\nexport class MetacityEngine {\n    project_name: string;\n    canvas: HTMLCanvasElement;\n    \n    renderer: Renderer;\n    selector: Selector;\n    project!: Project;\n\n    controls?: EngineControls;\n\n    constructor(project_name: string, canvas: HTMLCanvasElement) {\n        this.project_name = project_name;\n        this.canvas = canvas;\n        \n        this.renderer = new Renderer(this.canvas,  () => {\n            if (this.controls)\n                this.controls.actions();\n        });\n\n        this.selector = new Selector(this.renderer);\n    }\n\n    init() {\n        this.project = new Project(this.project_name, this.renderer);\n        this.controls = new EngineControls(this.renderer, this.project);\n        this.renderer.controls.controls.addEventListener('change', () => this.moved())\n    }\n\n    moved() {\n        this.project.updateVisibleRadius(this.renderer.controls.target);        \n        this.renderer.compas.update(this.controls?.updateCompasCallback);\n        this.renderer.changed = true;\n    }\n\n    exit() {\n        \n    }\n}","import { Button, SelectIcon, CompassIcon, EyeOffIcon, EyeOpenIcon, Heading, Icon, IconButton, LayersIcon, MinusIcon, Pane, PlusIcon, SettingsIcon, StyleIcon, Switch, TimeIcon, Tooltip, PlayIcon, PauseIcon, SelectMenu  } from \"evergreen-ui\";\nimport { useEffect, useRef, useState } from \"react\"\nimport { MetacityEngine } from \"../../engine/engine\"\n\n\nfunction SideMenu(props: {children: any, isShown: boolean, onClose: () => void}) {\n    const { children, isShown } = props;\n\n    //<IconButton className=\"closeViewMenu\" appearance=\"minimal\" icon={CrossIcon} onClick={onClose}/>\n    return (\n        <Pane className=\"viewMenu\" display={isShown? \"block\" : \"none\"}>\n            {children}\n        </Pane>\n    );\n}\n\n\nfunction StyleMenu(props: { engine: MetacityEngine | undefined, visible: boolean }) {\n    const { engine, visible } = props;\n    const [selected, setSelected] = useState<string | undefined>(undefined);\n\n    const applyStyle = (style?: string) => {\n        if (engine == null)\n            return;\n\n        setSelected(style);\n\n        if (style)\n            engine.project.applyStyle(style);\n        else\n            engine.project.clearStyle();\n    };\n\n    useEffect(() => {\n        if (!engine)\n            return;\n\n        setSelected(engine.project.usedStyle);\n\n    }, [engine]);\n\n    return (\n        <>\n            {visible &&\n                <>\n            <Heading size={300} className=\"title\">Styles</Heading>\n            <Pane className=\"styles\">\n                {engine?.project.styles.map(style => (\n                    <Pane key={style} onClick={() => applyStyle(style)} className={`style ${selected === style ? \"selected\" : \"\"}`}>\n                        {style}\n                    </Pane>\n                ))}\n                <Pane onClick={() => applyStyle()} className={`style ${selected === undefined ? \"selected\" : \"\"}`}>\n                    No Style\n                </Pane>\n            </Pane>\n        </>\n                    }\n                    </>\n    )\n\n\n}\n\n\nfunction LayerMenu(props: { engine: MetacityEngine | undefined, visible: boolean }) {\n    const { engine, visible } = props;\n    const [visibility, setVisibility] = useState<boolean[]>([]);\n\n\n    useEffect(() => {\n        if (!engine)\n            return;\n        setVisibility(engine.project.layers.map((layer) => layer.visible));\n    }, [engine, visible]);\n\n    const toggleVisibility = (index: number) => {\n        if (!engine)\n            return;\n        engine.project.layers[index].visible = !visibility[index];\n        setVisibility(visibility.map((v, i) => i === index ? !v : v));\n    };\n\n\n    return (\n        <>\n            {visible &&\n                <>\n                    <Heading size={300} className=\"title\">Layers</Heading>\n                    <Pane className=\"layers\">\n                        {engine?.project.layers.map((layer, i) => (\n                            <Pane key={layer.name} className=\"layer\" onClick={() => toggleVisibility(i)}>\n                                {visibility[i] ? <Icon icon={EyeOpenIcon} /> : <Icon icon={EyeOffIcon} />}\n                                <Pane className=\"layerName\">{layer.name}</Pane>\n                            </Pane>\n                        ))}\n                    </Pane>\n                </>\n            }\n        </>\n    )\n}\n\n\nfunction SelectorMenu(props: { engine: MetacityEngine | undefined, visible: boolean}) {\n    const { engine, visible } = props;\n\n    useEffect(() => {\n        if (!engine)\n            return;\n    }, [engine, visible]);\n\n    return (\n        <>\n            {visible &&\n                <>\n                    <Heading size={300} className=\"title\">Selection</Heading>\n                    <Pane className=\"layers\">\n                        Please select a region in the map\n                    </Pane>\n                </>\n            }\n        </>\n    )\n}\n\n\nfunction TimelineMenu(props: { engine: MetacityEngine | undefined, visible: boolean }) {\n    const { engine, visible } = props;\n    const [time, setTime] = useState<number>(0);\n    const [start, setStart] = useState<number>(0);\n    const [play, setPlay] = useState<boolean>(false);\n    const [end, setEnd] = useState<number>(0);\n    const [speed, setSpeed] = useState<number>(1);\n    const timeRef = useRef<HTMLInputElement>(null);\n\n    const speedOptions = [0.25, 0.5, 1, 2, 5, 10, 20, 30, 60];\n\n\n    const timing = (time: number, start: number, end: number) => {\n        setTime(Math.floor(time));\n\n        setStart(start);\n        setEnd(end);\n    }\n\n    const togglePlay = () => {\n        if (!engine || !engine.controls)\n            return;\n        \n        engine.controls.setPlay(!play);\n        setPlay(!play);\n    }\n\n    const setupTime = () => {\n        const time = timeRef.current?.value;\n        \n        if (!engine || !engine.controls || !time)\n            return;\n        \n        const t = parseFloat(time);\n        if (isNaN(t))\n            return;\n\n        engine.controls.setTime(t);\n    }\n\n    useEffect(() => {\n        if (!engine || !engine.controls)\n            return;\n\n        engine.controls.setSpeed(speed);\n    }, [speed, engine]);\n\n    useEffect(() => {\n        if (!engine || !engine.controls)\n            return;\n\n        engine.controls.updateTimeCallback = timing;\n        setPlay(engine.controls.getPlay());\n        setSpeed(engine.controls.getSpeed());\n    }, [engine]);\n        \n    const pad = (n: number) => {\n        return n.toString().padStart(2, '0');\n    }\n\n    const formatedTime = () => {\n       return pad(Math.floor(time / 3600)) + ':' + pad(Math.floor((time % 3600) / 60)) + ':' + pad(Math.floor(time % 60));\n    }\n    \n    return (\n        <>\n            {visible &&\n                <>\n                    <Heading size={300} className=\"title\">Timeline</Heading>\n                    <Pane className=\"timeline\">\n                        <Pane className=\"setting\">\n                            <Pane display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\n                                <Pane flexGrow=\"1\">\n                                    <Heading size={100}>Time</Heading>\n                                    <Heading size={400}>{formatedTime()}</Heading>\n                                </Pane>\n                                <Pane>\n                                    <IconButton icon={play ? PauseIcon : PlayIcon} appearance=\"minimal\" onClick={togglePlay} /> \n                                    <SelectMenu\n                                        title=\"Select speed\"\n                                        options={speedOptions.map((value) => ({ label: `${value}\\u00D7` , value: value }))}\n                                        selected={`${speed}\\u00D7`}\n                                        hasFilter={false}\n                                        onSelect={(item) => setSpeed(item.value as number)}>\n                                        <Button appearance=\"minimal\">{`Speed ${speed}\\u00D7`}</Button>\n                                    </SelectMenu>\n                                </Pane>\n                            </Pane>\n                            <Pane className=\"controls\">\n                                <Pane className=\"timescroll\">\n                                    <input             \n                                        ref={timeRef} \n                                        type=\"range\" \n                                        min={start} \n                                        max={end} \n                                        step={1} \n                                        value={time} \n                                        onChange={() => setupTime()}\n                                    />\n                                </Pane>\n                            </Pane>\n                        </Pane>\n                    </Pane>\n                </>\n            }\n        </>\n    )\n}\n\nfunction SettingsMenu(props: { engine: MetacityEngine | undefined, visible: boolean }) {\n    const { engine, visible } = props;\n    const [radius, setRadius] = useState<number>(2000);\n    const [pointSize, setPointSize] = useState<number>(1);\n    const [lineWidth, setLineWidth] = useState<number>(5);\n    const [shadows, setShadows] = useState<boolean>(false);\n    const [cache, setCache] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (!engine)\n            return;\n        Promise.resolve(1).then(() => engine.controls?.setVisibleRadius(radius));\n    }, [engine, radius]);\n\n\n    useEffect(() => {\n        if (!engine)\n            return;\n        Promise.resolve(1).then(() => {\n            engine.controls?.useShadows(shadows);\n        });\n    }, [engine, shadows]);\n\n    useEffect(() => {\n        if (!engine)\n            return;\n        Promise.resolve(1).then(() => {\n            engine.controls?.useCache(cache);\n        });\n    }, [engine, cache]);\n\n    useEffect(() => {\n        if (!engine)\n            return;\n        Promise.resolve(1).then(() => engine.controls?.setPointSize(pointSize));\n    }, [engine, pointSize]);\n\n    useEffect(() => {\n        if (!engine)\n            return;\n        Promise.resolve(1).then(() => engine.controls?.setLineWidth(lineWidth));\n    }, [engine, lineWidth]);\n\n    const updateRadius = (value: string) => {\n        const v = parseInt(value);\n        if (v !== radius) {\n            setRadius(v);\n        }\n    }\n\n    const updatePointSize = (value: string) => {\n        const v = parseFloat(value);\n        if (v !== pointSize) {\n            setPointSize(v);\n        }\n    }\n\n    const updateLineWidth = (value: string) => {\n        const v = parseFloat(value);\n        if (v !== pointSize) {\n            setLineWidth(v);\n        }\n    }\n\n    const toggleShadows = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (!engine)\n            return;\n\n        setShadows(e.target.checked);\n    }\n\n    const toggleCache = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (!engine)\n            return;\n\n        setCache(e.target.checked);\n    }\n\n\n    return (\n        <>\n            {visible &&\n                <>\n                    <Heading size={300} className=\"title\">Settings</Heading>\n                    <Pane className=\"settings\">\n                        <Pane className=\"setting\">\n                            <Heading size={100}>Visible Radius: {radius}</Heading>\n                            <Pane className=\"controls\">\n                                <input type=\"range\" min={0} max={20000} step={1000} defaultValue={radius} onChange={(e) => updateRadius(e.target.value)} />\n                            </Pane>\n                        </Pane>\n                        <Pane className=\"setting\">\n                            <Heading size={100}>Point Size: {pointSize}</Heading>\n                            <Pane className=\"controls\">\n                                <input type=\"range\" min={0} max={5} step={0.1} defaultValue={pointSize} onChange={(e) => updatePointSize(e.target.value)} />\n                            </Pane>\n                        </Pane>\n                        <Pane className=\"setting\">\n                            <Heading size={100}>Line width: {lineWidth}</Heading>\n                            <Pane className=\"controls\">\n                                <input type=\"range\" min={0} max={10} step={0.1} defaultValue={lineWidth} onChange={(e) => updateLineWidth(e.target.value)} />\n                            </Pane>\n                        </Pane>\n                        <Pane className=\"setting\">\n                            <Pane className=\"inlineControls\">\n                                <Heading size={100}>Shadows: {shadows ? \"on\" : \"off\"}</Heading>\n                                <Switch checked={shadows} onChange={(e) => toggleShadows(e)} />\n                            </Pane>\n                        </Pane>\n                        <Pane className=\"setting\">\n                            <Pane className=\"inlineControls\">\n                                <Heading size={100}>Caching Data: {cache ? \"on\" : \"off\"}</Heading>\n                                <Switch checked={cache} onChange={(e) => toggleCache(e)} />\n                            </Pane>\n                        </Pane>\n                    </Pane>\n                </>\n            }\n        </>\n    )\n}\n\nenum Menu {\n    None,\n    Layers,\n    Styles,\n    Settings,\n    Timeline,\n    Selector\n}\n\nenum CameraType {\n    D2,\n    D3\n}\n\nexport function Compas(props: {engine: MetacityEngine | undefined}) {\n    const { engine } = props;\n    const [angle, setAngle] = useState<number>(0);\n\n    const rotate = (angleInRadians: number) => {\n        const angleInDegrees = - (angleInRadians * 180 / Math.PI);\n        setAngle(angleInDegrees);\n    }\n\n    useEffect(() => {\n        if (!engine || !engine.controls)\n            return;\n\n        engine.controls.updateCompasCallback = rotate;\n    }, [engine]);\n\n    const resetRotation = () => {\n        engine?.renderer.controls.topView();\n    }\n\n    return (\n        <Tooltip content=\"Reset view rotation\">\n            <IconButton icon={<CompassIcon  style={{ transform: `rotate(${angle}deg)` }}/>} appearance=\"minimal\" onClick={resetRotation} />\n        </Tooltip>\n    );\n}\n\n\nexport function ViewMenu(props: { engine: MetacityEngine | undefined }) {\n    const { engine } = props;\n    const [menuShown, setMenuShown] = useState<boolean>(false);\n    const [camera, setCamera] = useState<CameraType>(CameraType.D2);\n    const [menu, setMenu] = useState<number>(Menu.None);\n\n    const toggleMenu = (kind: number) => {\n        if (menuShown && kind === menu)\n        {\n            setMenu(-1);\n            setMenuShown(false);\n        }\n        else {\n            setMenu(kind);\n            setMenuShown(true);\n        }\n    };\n\n    const swapCamera = () => {\n        if (!engine)\n            return;\n\n        if (menu === Menu.Selector)\n            return;\n\n        engine.controls?.swapCamera();\n        setCamera(camera === CameraType.D2 ? CameraType.D3 : CameraType.D2);\n    };\n\n    useEffect(() => {\n        if (!engine)\n            return;\n\n        if (menu === Menu.Selector)\n        {\n            engine.controls?.useOrthogonalProjection();\n            setCamera(CameraType.D2);\n            engine.controls?.disableCamera();\n            engine.controls?.startSelectingRegion();\n        }\n\n        if (menu !== Menu.Selector)\n        {\n            engine.controls?.enableCamera();\n            engine.controls?.endSelectingRegion();\n        }\n\n    }, [menu]);\n\n\n    return (\n        <Pane className=\"viewControls\">\n            <Pane className=\"controlBar\">\n                <Tooltip content=\"Layers\" >\n                    <IconButton icon={LayersIcon} className={menu === Menu.Layers && menuShown ? \"active\" : \"\"} appearance=\"minimal\" onClick={() => toggleMenu(Menu.Layers)} />\n                </Tooltip>\n                <Tooltip content=\"Styles\">\n                    <IconButton icon={StyleIcon} className={menu === Menu.Styles && menuShown ? \"active\" : \"\"} appearance=\"minimal\" onClick={() => toggleMenu(Menu.Styles)} />\n                </Tooltip>\n                <Tooltip content=\"Settings\">\n                    <IconButton icon={SettingsIcon} className={menu === Menu.Settings && menuShown ? \"active\" : \"\"} appearance=\"minimal\" onClick={() => toggleMenu(Menu.Settings)} />\n                </Tooltip>\n                <Tooltip content=\"Timeline\">\n                    <IconButton icon={TimeIcon} className={menu === Menu.Timeline && menuShown ? \"active\" : \"\"} appearance=\"minimal\" onClick={() => toggleMenu(Menu.Timeline)}  />\n                </Tooltip>\n                <Tooltip content=\"Export region\">\n                    <IconButton icon={SelectIcon} className={menu === Menu.Selector && menuShown ? \"active\" : \"\"} appearance=\"minimal\" onClick={() => toggleMenu(Menu.Selector)}  />\n                </Tooltip>\n                <Tooltip content=\"Switch between 2D/3D view\">\n                    <Button appearance=\"minimal\" id=\"perspectiveControl\" onClick={swapCamera} disabled={menu===Menu.Selector}>\n                        {camera === CameraType.D2 ? \"3D\" : \"2D\"}\n                    </Button>\n                </Tooltip>\n                <Tooltip content=\"Zoom in\">\n                    <IconButton icon={PlusIcon} appearance=\"minimal\" onClick={() => { engine?.controls?.zoomIn()}} />\n                </Tooltip>\n                <Tooltip content=\"Zoom out\">\n                    <IconButton icon={MinusIcon} appearance=\"minimal\" onClick={() => { engine?.controls?.zoomOut()}} />\n                </Tooltip>\n                <Compas engine={engine}/>\n            </Pane>\n            <SideMenu isShown={menuShown} onClose={() => toggleMenu(menu)}>\n                <LayerMenu engine={engine}    visible={menu === Menu.Layers}/>\n                <StyleMenu engine={engine}    visible={menu === Menu.Styles}/>\n                <SettingsMenu engine={engine} visible={menu === Menu.Settings}/>\n                <TimelineMenu engine={engine} visible={menu === Menu.Timeline}/>\n                <SelectorMenu engine={engine} visible={menu === Menu.Selector}/>\n            </SideMenu>\n        </Pane>\n    )\n}","import { CornerDialog, Pane, Text } from \"evergreen-ui\";\nimport { useEffect, useState, useCallback } from \"react\"\nimport { MetacityEngine } from \"../../engine/engine\"\n\n\nexport function MetaDialog(props: {engine: MetacityEngine | undefined}) {\n    const {engine} = props;\n\n    const [meta, setMeta] = useState<{[name: string]: any}>({});\n    const [metaIsShown, setMetaIsShown] = useState(false);\n\n\n    const showMeta = (data: {[name: string]: any}) => {\n        setMeta(data);\n        setMetaIsShown(true);\n    }\n\n    const closeMeta = useCallback(() => {\n        engine?.controls?.select(-1);\n        setMetaIsShown(false);\n    }, [engine?.controls]);\n\n\n    useEffect(() => {\n        if (engine && engine.controls)\n        {\n            engine.controls.showMetaCallback = showMeta;\n            engine.controls.closeMetaCallback = closeMeta;\n        }\n    }, [engine, engine?.controls, closeMeta]);\n\n\n    return (\n        <CornerDialog\n            title=\"Metadata\"\n            hasCancel={false}\n            hasFooter={false}\n            width=\"auto\"\n            isShown={metaIsShown}\n            onCloseComplete={closeMeta}\n            onCancel={closeMeta}\n        >\n            <Pane className=\"meta\">\n                {\n                    Object.keys(meta).map(key => (\n                        <Pane key={key} className=\"attribute\">\n                            <Text className=\"key\">{key}:</Text> <Text className=\"value\">{meta[key]}</Text>\n                        </Pane>\n                    ))\n                }\n            </Pane>\n        </CornerDialog>\n    )\n}","import { Pane } from \"evergreen-ui\";\nimport { useEffect, createRef, useState, useLayoutEffect } from \"react\"\nimport { useParams } from \"react-router\"\nimport { MetacityEngine } from \"../engine/engine\"\nimport { ViewMenu } from \"./elements/viewmenu\"\nimport { MetaDialog } from \"./elements/metadialog\"\n\n\nfunction useWindowSize() {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n        function updateSize() {\n            setSize([window.innerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    }, []);\n    return size;\n}\n\nexport function View() {\n    const { project_name } = useParams<{ project_name: string }>();\n    const [width, height] = useWindowSize();\n    const [engine, setEngine] = useState<MetacityEngine | undefined>(undefined);\n    const canvas = createRef<HTMLCanvasElement>();\n\n    useEffect(() => {\n        if (canvas.current == null)\n            return;\n\n        const engine = new MetacityEngine(project_name, canvas.current as HTMLCanvasElement);\n        engine.init();\n        setEngine(engine);\n        engine.renderer.frame();\n        \n        return () => {\n            window.location.reload();\n        };\n        \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [project_name]);\n\n\n    useEffect(() => {\n        if (engine == null)\n            return;\n\n        engine.controls?.resize(width, height);\n    }, [width, height, engine]);\n\n    return (\n        <Pane className=\"canvasAnchor\">\n            <MetaDialog engine={engine} />\n            <ViewMenu engine={engine} />\n            <canvas\n                ref={canvas}\n                onMouseDown={(event) => {if (!engine) return; engine.controls?.mouseDown(event.clientX, event.clientY, event.timeStamp, event.button); }}\n                onMouseUp={(event) => { if (!engine) return; engine.controls?.mouseUp(event.clientX, event.clientY, event.timeStamp, event.button); }}\n                onMouseMove={(event) => { if (!engine) return; engine.controls?.mouseOver(event.clientX, event.clientY); }}\n                onKeyDown={(event) => { if (event.repeat || !engine) return; engine.controls?.keyDown(event.code); }}\n                onKeyUp={(event) => { if (event.repeat || !engine) return; engine.controls?.keyUp(event.code); }}\n                tabIndex={0}\n            >\n                Your browser does not support HTML5 canvas\n            </canvas>\n            <Pane id=\"viewStatusBar\">\n                Status\n            </Pane>\n        </Pane>\n    )\n}","import { Button, CubeIcon, Heading, Pane, UpdatedIcon, ProjectsIcon, CodeIcon, CornerDialog, Pre } from 'evergreen-ui'\nimport { useHistory, useParams } from 'react-router';\nimport { Header } from './elements/header';\n\nimport Editor, { Monaco } from \"@monaco-editor/react\";\nimport * as monaco from \"monaco-editor/esm/vs/editor/editor.api\";\nimport { TextDialog } from './elements/dialog';\nimport { apiurl, url } from '../url';\nimport { toast } from 'react-toastify';\nimport { useEffect, useState } from 'react';\nimport iaxios from '../axios';\n\n\n\n/* eslint-disable quotes */\n\n// This config defines the editor's view.\nexport const options = {\n    lineNumbers: false,\n    scrollBeyondLastLine: false,\n    readOnly: false,\n    fontSize: 12,\n}\n\n// This config defines how the language is displayed in the editor.\nexport const languageDef = {\n    defaultToken: \"\",\n    number: /\\d+(\\.\\d+)?/,\n\n    //here is the list of all the tokens \n    //it as adressed as @keywords in the tokenizer\n    keywords: [\n        \"@layer\",\n        \"@target\",\n        \"@source\",\n        \"@meta\"\n    ],\n    \n    typeKeywords: [\n        \"@default\",\n        \"@color\",\n        \"@visible\",\n    ],\n\n    // we include these common regular expressions\n    //eslint-disable-next-line\n\tsymbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n\tescapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n\tdigits: /\\d+(_+\\d+)*/,\n\toctaldigits: /[0-7]+(_+[0-7]+)*/,\n\tbinarydigits: /[0-1]+(_+[0-1]+)*/,\n\thexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n\n    //eslint-disable-next-line\n\tregexpctl: /[(){}\\[\\]\\$\\^|\\-*+?\\.]/,\n    //eslint-disable-next-line\n\tregexpesc: /\\\\(?:[bBdDfnrstvwWn0\\\\\\/]|@regexpctl|c[A-Z]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})/,\n\n\n    tokenizer: {\n        root: [\n\t\t\t[/[{}]/, 'delimiter.bracket'],\n\t\t\t{ include: 'common' }\n\t\t],\n\n\t\tcommon: [\n\t\t\t// identifiers and keywords\n\t\t\t[/@[a-z_$][\\w$]*/, {\n\t\t\t\tcases: {\n\t\t\t\t\t'@typeKeywords': 'keyword',\n\t\t\t\t\t'@keywords': 'type.identifier',\n\t\t\t\t\t'@default': 'identifier'\n\t\t\t\t}\n\t\t\t}],\n\t\t\t//[/[A-Z][\\w\\$]*/, 'type.identifier'],  // to show class names nicely\n\t\t\t// [/[A-Z][\\w\\$]*/, 'identifier'],\n\n\t\t\t// whitespace\n\t\t\t{ include: '@whitespace' },\n\n\t\t\t// regular expression: ensure it is terminated before beginning (otherwise it is an opeator)\n\t\t\t//eslint-disable-next-line\n            [/\\/(?=([^\\\\\\/]|\\\\.)+\\/([gimsuy]*)(\\s*)(\\.|;|\\/|,|\\)|\\]|\\}|$))/, { token: 'regexp', bracket: '@open', next: '@regexp' }],\n\n\t\t\t// delimiters and operators\n            //eslint-disable-next-line\n\t\t\t[/[()\\[\\]]/, '@brackets'],\n\t\t\t[/[<>](?!@symbols)/, '@brackets'],\n\t\t\t[/@symbols/, {\n\t\t\t\tcases: {\n\t\t\t\t\t'@default': ''\n\t\t\t\t}\n\t\t\t}],\n\n\t\t\t// numbers\n            //eslint-disable-next-line\n\t\t\t[/(@digits)[eE]([\\-+]?(@digits))?/, 'number.float'],\n            //eslint-disable-next-line\n\t\t\t[/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?/, 'number.float'],\n\t\t\t[/0[xX](@hexdigits)/, 'number.hex'],\n\t\t\t[/#(@hexdigits)/, 'number.hex'],\n\t\t\t[/0[oO]?(@octaldigits)/, 'number.octal'],\n\t\t\t[/0[bB](@binarydigits)/, 'number.binary'],\n\t\t\t[/(@digits)/, 'number'],\n\n\t\t\t// delimiter: after number because of .\\d floats\n\t\t\t[/[;,.]/, 'delimiter'],\n\n\t\t\t// strings\n\t\t\t[/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],  // non-teminated string\n\t\t\t[/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],  // non-teminated string\n\t\t\t[/\"/, 'string', '@string_double'],\n\t\t\t[/'/, 'string', '@string_single'],\n\t\t\t[/`/, 'string', '@string_backtick'],\n\t\t],\n\n\t\twhitespace: [\n\t\t\t[/[ \\t\\r\\n]+/, ''],\n\t\t],\n\n\n\t\t// We match regular expression quite precisely\n\t\tregexp: [\n            //eslint-disable-next-line\n\t\t\t[/(\\{)(\\d+(?:,\\d*)?)(\\})/, ['regexp.escape.control', 'regexp.escape.control', 'regexp.escape.control']],\n\t\t\t//eslint-disable-next-line\n            [/(\\[)(\\^?)(?=(?:[^\\]\\\\\\/]|\\\\.)+)/, ['regexp.escape.control', { token: 'regexp.escape.control', next: '@regexrange' }]],\n\t\t\t[/(\\()(\\?:|\\?=|\\?!)/, ['regexp.escape.control', 'regexp.escape.control']],\n\t\t\t[/[()]/, 'regexp.escape.control'],\n\t\t\t[/@regexpctl/, 'regexp.escape.control'],\n\t\t\t//eslint-disable-next-line\n            [/[^\\\\\\/]/, 'regexp'],\n\t\t\t[/@regexpesc/, 'regexp.escape'],\n\t\t\t[/\\\\\\./, 'regexp.invalid'],\n\t\t\t[/(\\/)([gimsuy]*)/, [{ token: 'regexp', bracket: '@close', next: '@pop' }, 'keyword.other']],\n\t\t],\n\n\t\tregexrange: [\n\t\t\t[/-/, 'regexp.escape.control'],\n\t\t\t[/\\^/, 'regexp.invalid'],\n\t\t\t[/@regexpesc/, 'regexp.escape'],\n\t\t\t[/[^\\]]/, 'regexp'],\n\t\t\t[/\\]/, { token: 'regexp.escape.control', next: '@pop', bracket: '@close' }],\n\t\t],\n\n\t\tstring_double: [\n\t\t\t[/[^\\\\\"]+/, 'string'],\n\t\t\t[/@escapes/, 'string.escape'],\n\t\t\t[/\\\\./, 'string.escape.invalid'],\n\t\t\t[/\"/, 'string', '@pop']\n\t\t],\n\n\t\tstring_single: [\n\t\t\t[/[^\\\\']+/, 'string'],\n\t\t\t[/@escapes/, 'string.escape'],\n\t\t\t[/\\\\./, 'string.escape.invalid'],\n\t\t\t[/'/, 'string', '@pop']\n\t\t],\n\n\t\tstring_backtick: [\n\t\t\t[/\\$\\{/, { token: 'delimiter.bracket', next: '@bracketCounting' }],\n\t\t\t[/[^\\\\`$]+/, 'string'],\n\t\t\t[/@escapes/, 'string.escape'],\n\t\t\t[/\\\\./, 'string.escape.invalid'],\n\t\t\t[/`/, 'string', '@pop']\n\t\t],\n\n\t\tbracketCounting: [\n\t\t\t[/\\{/, 'delimiter.bracket', '@bracketCounting'],\n\t\t\t[/\\}/, 'delimiter.bracket', '@pop'],\n\t\t\t{ include: 'common' }\n\t\t],\n    },\n}\n\n// This config defines the editor's behavior.\nexport const configuration = {\n    brackets: [\n        [\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"],\n    ],\n}\n\ninterface IStyle {\n    name: string;\n    style: string;\n}\n\nfunction createDependencyProposals(range: any) {\n    // returning a static list of proposals, not even looking at the prefix (filtering is done by the Monaco editor),\n    // here you could do a server side lookup\n    return [\n        {\n            label: 'Layer class',\n            kind: monaco.languages.CompletionItemKind.Class,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            documentation: \"Layer style class\",\n            //eslint-disable-next-line\n            insertText: 'layer (${1:layer-key}) {\\n    ${2:@properties}\\n}',\n            range: range\n        },\n        {\n            label: 'Target styles',\n            kind: monaco.languages.CompletionItemKind.Class,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            documentation: \"Styles based on metadata of the overlay source layer\",\n            //eslint-disable-next-line\n            insertText: 'target {\\n    ${1:value}\\n}',\n            range: range\n        },\n        {\n            label: 'Source styles',\n            kind: monaco.languages.CompletionItemKind.Class,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            documentation: \"Styles based on metadata of the overlay target layer\",\n            //eslint-disable-next-line\n            insertText: 'source {\\n    ${1:value}\\n}',\n            range: range\n        },\n        {\n            label: 'Meta class',\n            kind: monaco.languages.CompletionItemKind.Class,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            documentation: \"Styles based on metadata of the layer\",\n            //eslint-disable-next-line\n            insertText: 'meta (${1:identifier}) {\\n    ${2:value}\\n}',\n            range: range\n        },\n        {\n            label: 'Color value',\n            kind: monaco.languages.CompletionItemKind.Value,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            documentation: \"Color style class\",\n            //eslint-disable-next-line\n            insertText: 'color: #${1:color};',\n            range: range\n        },\n        {\n            label: 'Visibility value',\n            kind: monaco.languages.CompletionItemKind.Value,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            documentation: \"Visibility style class\",\n            //eslint-disable-next-line\n            insertText: 'visible: ${1:boolean};',\n            range: range\n        },\n        {\n            label: 'Default value',\n            kind: monaco.languages.CompletionItemKind.Value,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            documentation: \"Default style class\",\n            //eslint-disable-next-line\n            insertText: 'default: ${1:value};',\n            range: range\n        },\n    ];\n}\n\nconst headingSpace = /^(\\s*)/;\nconst trailingSpace = /(\\s*)$/;\n//eslint-disable-next-line\nconst nothing = /(\\s*|$)/;\n//eslint-disable-next-line\nconst key = /\\(([^)]+)\\)/;\nconst proptag = /@[a-zA-Z]+/;\n\n\nconst matchTag = new RegExp(headingSpace.source + proptag.source + trailingSpace.source, 'mg');\n\n\nexport function StyleEditor() {\n    const { project_name, style_name } = useParams<{ project_name: string, style_name: string }>();\n    const history = useHistory();\n\n    const beforMountEditor = (monaco: Monaco) => {\n        if (!monaco.languages.getLanguages().some(({ id }) => id === 'estimatemd')) {\n            // Register a new language\n            monaco.languages.register({ id: 'estimatemd' })\n            // Register a tokens provider for the language\n            monaco.languages.setMonarchTokensProvider('estimatemd', languageDef as any)\n            // Set the editing configuration for the language\n            monaco.languages.setLanguageConfiguration('estimatemd', configuration as any)\n\n            monaco.languages.registerCompletionItemProvider('estimatemd', {\n                provideCompletionItems: function (model, position) {\n\n                    var textUntilPosition = model.getValueInRange({ startLineNumber: 0, startColumn: 0, endLineNumber: position.lineNumber, endColumn: position.column });\n                    var match = textUntilPosition.match(matchTag);\n\n                    if (!match) {\n                        return { suggestions: [] };\n                    }\n\n                    var word = model.getWordUntilPosition(position);\n\n                    var range = {\n                        startLineNumber: position.lineNumber,\n                        endLineNumber: position.lineNumber,\n                        startColumn: word.startColumn,\n                        endColumn: word.endColumn\n                    };\n\n                    return {\n                        suggestions: createDependencyProposals(range)\n                    };\n                }\n            });\n        }\n    }\n\n    \n    const [editor, setEditor] = useState<monaco.editor.IStandaloneCodeEditor|undefined>(undefined)\n    \n    useEffect(() => {\n        if(!editor)\n            return;\n        \n        iaxios.post(apiurl.GETSTYLE, { project: project_name, name: style_name }).then((response) => {\n            const data: IStyle = response.data;\n            editor.setValue(data.style);\n        }).catch((reject) => {\n            console.error(reject);\n        });\n\n    }, [editor, project_name, style_name]);\n\n    const [isParsedShown, setParsedIsShown] = useState(false);\n    const [parsed, setParsed] = useState(\"\");\n\n    const parse = () => {\n        if(!editor)\n            return;\n\n        const style = editor.getValue();\n        iaxios.post(apiurl.PARSESTYLE, { project: project_name, name: style_name, styles: style }).then((response) => {\n            if (response.data.status === \"error\")\n            {\n                setParsed(response.data.error);\n                setParsedIsShown(true);\n            } else {\n                setParsed(\"Style parsed successfuly\");\n                setParsedIsShown(true);\n            }\n        }).catch((reject) => {\n            console.error(reject);\n        });        \n    }\n\n\n    return (\n        <Pane>\n            <Header projects />\n            <Pane className=\"stylesHeader\">\n                <Heading className=\"wide\">Style {style_name}</Heading>\n                <Button marginRight={12} appearance=\"minimal\" iconBefore={ProjectsIcon} onClick={() => { history.push(url.PROJECTS + project_name) }}>\n                    Back to Project {project_name}\n                </Button>\n                <CornerDialog\n                    title=\"Style Parsed\"\n                    hasCancel={false}\n                    hasFooter={false}\n                    width=\"auto\"\n                    isShown={isParsedShown}\n                    onCloseComplete={() => setParsedIsShown(false)}\n                >\n                <Pre className=\"parsedMessage\">{parsed}</Pre>\n                </CornerDialog>\n                <Button marginRight={12} appearance=\"minimal\" iconBefore={CodeIcon} onClick={parse}>\n                    Parse\n                </Button>\n                <TextDialog\n                    submitUrl={apiurl.UPDATESTYLE}\n                    title={`Save style ${style_name}`}\n                    label={`Are you sure you want to save style ${style_name}? Your previously compiled styles will be overwriten.`}\n                    confirmLabel=\"Overwrite\"\n                    method=\"post\"\n                    submitBody={() => { \n                        if (!editor)\n                            throw new Error('Error occured while saving the style.'); \n\n                        return { project: project_name, name: style_name, styles: editor.getValue()} \n                    }}\n                    onSubmit={() => {\n                        console.log(`Style ${style_name} saved`);\n                    }}\n\n                    onError={(reject) => {return \"Style could not be saved\"}} \n                    tooltip=\"Saves the new configuration and overwrites previously saved styles.\"\n                >\n                    <Button marginRight={12} appearance=\"minimal\" iconBefore={UpdatedIcon}>\n                        Save\n                    </Button>\n                </TextDialog>\n                <TextDialog\n                    submitUrl={apiurl.UPDATESTYLE}\n                    title={`Apply style ${style_name}`}\n                    label={`Are you sure you want to recompile style ${style_name}?  Your previously compiled styles will be overwriten.`}\n                    confirmLabel=\"Compile\"\n                    method=\"post\"\n                    submitBody={() => { \n                        if (!editor)\n                            throw new Error('Error occured while saving the style.'); \n\n                        return { project: project_name, name: style_name, styles: editor.getValue()} \n                    }}\n                    onSubmit={() => {\n                        iaxios.post(apiurl.APPLYSTYLE, { project: project_name, name: style_name }).then((response) => {\n                            toast('Compilation job submitted');\n                        }).catch((reject) => {\n                            toast('Job could not be submitted');\n                        })\n                    }}\n                    onError={(reject) => {return \"Style could not be recompiled\"}} \n                    tooltip=\"Recompile styles after updating to view the changes in the visualization\"\n                >\n                    <Button appearance=\"minimal\" iconBefore={CubeIcon}>\n                        Save and Compile\n                    </Button>\n                </TextDialog>\n            </Pane>\n\n            <Pane className=\"styleView\">\n                <Editor\n                    beforeMount={beforMountEditor}\n                    onMount={(editor, monaco) => {\n                        setEditor(editor);\n                    }}\n                    className=\"editor\"\n                    height=\"100%\"\n                    defaultLanguage=\"estimatemd\"\n                />\n            </Pane>\n        </Pane>\n    )\n}\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\"\nimport './style.css'\nimport 'react-toastify/dist/ReactToastify.css';\nimport { url } from './url'\nimport { Home } from './screens/home'\nimport { Projects } from './screens/projects'\nimport { Login } from './screens/login'\nimport { UploadLayer } from './screens/upload'\nimport { Jobs } from './screens/jobs'\nimport { Mapping } from './screens/mapping'\nimport { View } from './screens/view'\nimport { ToastContainer } from 'react-toastify';\nimport { StyleEditor } from './screens/style';\n\nexport function App() {\n  return (\n    <Router>\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        //draggable\n        //pauseOnHover\n      />\n      <Switch>\n        <Route exact path={[\"/\"]}>\n          <Redirect to=\"/app\" />\n        </Route>\n        <Route path={url.LOGIN}>\n          <Login />\n        </Route>\n        <Route path={url.MAPPINGTEMPLATE}>\n          <Mapping />\n        </Route>\n        <Route path={url.UPLOADLAYERTEMPLATE}>\n          <UploadLayer />\n        </Route>\n        <Route path={url.PROJECTSTEMPLATE}>\n          <Projects />\n        </Route>\n        <Route path={url.STYLETEMPLATE}>\n          <StyleEditor />\n        </Route>\n        <Route path={url.JOBS}>\n          <Jobs />\n        </Route>\n        <Route path={url.VIEWTEMPLATE}>\n          <View />\n        </Route>\n        <Route path={url.HOME}>\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { IconContext } from 'react-icons/lib'\nimport { App } from './app'\n\nReactDOM.render(\n  <React.StrictMode>\n    <IconContext.Provider value={{ className: 'react-icons' }}>\n      <App /> \n      </IconContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}