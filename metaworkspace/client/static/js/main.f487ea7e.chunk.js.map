{"version":3,"sources":["axios.tsx","url.tsx","engine/renderer/controls.tsx","screens/exports/lego.tsx","screens/exports/export.tsx","screens/exports/obj.tsx","screens/elements/formater.tsx","screens/jobs/list.tsx","screens/elements/header.tsx","screens/home/home.tsx","screens/login/gate.tsx","screens/login/login.tsx","screens/mapping/mapping.tsx","screens/elements/dialog.tsx","screens/projects/actions.tsx","screens/projects/layers.tsx","screens/projects/styles.tsx","screens/projects/project.tsx","screens/projects/projectlist.tsx","screens/projects/projects.tsx","screens/style/style.tsx","screens/upload/upload.tsx","engine/utils/workers.tsx","engine/renderer/style.tsx","engine/utils/indexing.tsx","engine/geometry/base.tsx","engine/geometry/polygons.tsx","engine/geometry/geometry.tsx","engine/geometry/lines.tsx","engine/geometry/points.tsx","engine/geometry/movement.tsx","engine/geometry/deserialize.tsx","engine/datamodel/tile.tsx","engine/datamodel/grid.tsx","engine/datamodel/timeline.tsx","engine/datamodel/interval.tsx","engine/datamodel/layer.tsx","engine/datamodel/project.tsx","engine/datamodel/maintimeline.tsx","engine/utils/status.tsx","engine/renderer/camera.tsx","engine/renderer/compas.tsx","engine/renderer/csm/Frustum.js","engine/renderer/csm/CSMShader.js","engine/renderer/csm/CSM.js","engine/renderer/csm/CSMHelper.js","engine/renderer/picker.tsx","engine/renderer/placeholders.tsx","engine/renderer/selector.tsx","engine/renderer/shaders.tsx","engine/renderer/renderer.tsx","engine/engine.tsx","screens/view/menucompas.tsx","screens/view/menulayer.tsx","screens/view/menuselector.tsx","screens/view/menusettings.tsx","screens/view/menustyle.tsx","screens/view/menu.tsx","screens/view/menutimeline.tsx","screens/view/metadialog.tsx","screens/view/view.tsx","app.tsx","index.tsx"],"names":["iaxios","axios","create","authToken","localStorage","getItem","defaults","headers","common","Authorization","url","apiurl","MapControls","camera","domElement","up","THREE","screenSpacePanning","mouseButtons","LEFT","PAN","MIDDLE","ROTATE","RIGHT","DOLLY","touches","ONE","TWO","DOLLY_ROTATE","zoomSpeed","minDistance","minPolarAngle","maxPolarAngle","Math","PI","update","OrbitControls","CANVASMARGIN","ExportStatus","LegoEngine","canvas","renderer","composer","scene","controls","layers","shader","changed","this","window","innerWidth","innerHeight","antialias","shadowMap","enabled","type","setClearColor","hemilight","dirlight","position","set","add","customUniforms","merge","phong","uniforms","vertical_dim","value","max_layer","top_layer","vertexShader","fragmentShader","lights","side","name","legoShader","setSize","EffectComposer","renderPass","RenderPass","addPass","addEventListener","animate","render","setAnimationLoop","aspect","updateProjectionMatrix","heightmap","tileSize","tileSpacing","topLayer","map","setupCamera","round2Darray","maxLayer","max2Darray","i","initLayer","setCamera","showLayer","needsUpdate","instanceCount","model","loader","OBJLoader","parse","material","geometry","children","clone","remove","arr","reduce","acc","cur","max","row","val","round","layer","xgroupoff","ygroupoff","positions","length","j","floor","push","z","y","x","target","generatePositionsForLayer","instanceModel","getInstancedUnitModel","dummy","copy","updateMatrix","setMatrixAt","matrix","instanceMatrix","castShadow","receiveShadow","index","visible","getLayout","exportID","box_size","callback","get","then","res","data","ExportLego","props","start","end","project","unit_precision","box_filter_size_range","box_filter_step","canvasRef","useRef","boxFilterOptions","Array","from","useState","boxFilter","setBoxFilter","verticalResolutionOptions","verticalResolution","setVerticalResolution","setTileSpacing","setTileSize","setMaxLayer","setTopLayer","engine","setEngine","history","useHistory","legoResolution","setLegoResolution","modelSize","setModelSize","useEffect","current","layout","ml","generateLegoModel","lego_size","model_size_mm","format","num","decimals","toFixed","Pane","className","Heading","marginBottom","Paragraph","Button","appearance","intent","onClick","delete","toast","success","catch","err","error","marginTop","size","SelectMenu","title","options","label","selected","hasFilter","onSelect","item","disabled","concat","ref","ExportOBJ","downloading","setDownloading","onDownloadProgress","progressEvent","bytes","k","dm","sizes","log","parseFloat","pow","formatBytes","loaded","blob","Blob","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","marginRight","Export","export_name","useParams","undefined","setData","PROCESSING","status","setStatus","refresh","useCallback","info","autoClose","SUCCESS","response","NOTFOUND","EmptyState","background","orientation","icon","Spinner","iconBgColor","description","anchorCta","LinkButton","is","CrossIcon","color","JobList","jobs","setJobs","detailIsShown","setDetailIsShown","logName","setLogName","updatingLog","setUpdatingLog","logContents","setLogContents","clearTimeout","setTimeout","loadLog","post","loadJobs","SideSheet","isShown","onCloseComplete","preventBodyScrolling","margin","Table","Head","TextHeaderCell","Body","job","Row","paddingY","height","TextCell","job_id","ConsoleIcon","SearchInput","placeholder","width","onChange","e","Pre","split","line","iconBefore","EvergreenReactRouterLink","Link","ReactRouterLink","Header","to","flexGrow","GitBranchIcon","Home","projects","setProjects","exports","setExports","top","right","LogInIcon","exp","src","alt","LoginState","Login","onLogin","createRef","pass","onSubmit","event","preventDefault","formData","FormData","append","setItem","access_token","reject","console","TextInput","LoginGate","AUTHENTICATING","isLoggedIn","setIsLoggedIn","callbackAuth","callbackNoAuth","LOGGED_IN","LOGGED_OUT","Mapping","project_name","setLayers","selectedSource","setSelectedSource","selectedTarget","setSelectedTarget","filter","MergeColumnsIcon","padding","borderRadius","overlay_name","source","overlay","id","Code","Tooltip","content","ArrowRightIcon","form","InputDialog","nameref","setShown","invalid","setInvalid","setError","submit","submitBody","method","submitUrl","onError","Dialog","onConfirm","confirmLabel","TextInputField","isInvalid","validationMessage","cloneElement","TextDialog","InlineAlert","tooltip","ProjectActions","AddToArtifactIcon","style","StyleIcon","CubeIcon","PresentationIcon","new","old","showProject","EditIcon","TrashIcon","Layers","loadLayers","changeDisabled","IconButton","TickIcon","LayersIcon","Styles","styles","setStyles","getStyles","Project","ProjectList","AddIcon","Tablist","Tab","isSelected","currentProject","Projects","setCurrentProject","getProjects","lurl","justifyContent","alignItems","indexOf","ProjectsIcon","languageDef","defaultToken","number","keywords","typeKeywords","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","regexpctl","regexpesc","tokenizer","root","include","cases","token","bracket","next","whitespace","regexp","regexrange","string_double","string_single","string_backtick","bracketCounting","configuration","brackets","createDependencyProposals","range","kind","monaco","CompletionItemKind","Class","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","documentation","insertText","Value","matchTag","RegExp","StyleEditor","style_name","editor","setEditor","setValue","isParsedShown","setParsedIsShown","parsed","setParsed","CornerDialog","hasCancel","hasFooter","CodeIcon","getValue","Error","UpdatedIcon","beforeMount","languages","getLanguages","some","register","setMonarchTokensProvider","setLanguageConfiguration","registerCompletionItemProvider","provideCompletionItems","getValueInRange","startLineNumber","startColumn","endLineNumber","lineNumber","endColumn","column","match","suggestions","word","getWordUntilPosition","onMount","defaultLanguage","Dropzone","useDropzone","acceptedFiles","getRootProps","getInputProps","files","file","UploadLayer","progress","setProgress","uploading","setUploading","Text","layer_name","forEach","dataset","onUploadProgress","total","DecoderQueryType","Decoder","self","onmessage","message","jobID","resID","datatype","buffer","s","atob","Float32Array","Uint8Array","c","charCodeAt","base64tofloat32","offset","Int32Array","base64toint32","base64touint8","postMessage","Decoders","workers","worker_busy","queue","jobIDs","resultMap","Map","worker","code","toString","Worker","buildWorker","recieved","expected","apply","shift","_instance","LayerStyle","Instance","process","uint8","buffer_source","buffer_target","sbuffer","tbuffer","pickable","oid_offset","oids","outputbuffer","ci","it","total_stop","Uint32Array","BYTES_PER_ELEMENT","view","DataView","iteration","oid","step_stop","stop","min","getUint32","color_default","oid_length","toSpiral","level","abs","n","base","OIDType","Model","mesh","pickingMesh","visibility","v","removeFrom","pickingScene","dispose","threeVertLength","colors","actions","applyingStyles","attributes","objectID","array","out","color_buffer","afterApplyStyle","bind","ModelProxy","color_buffer_source","color_buffer_target","PolygonalModel","tile","abort","picker","offsetForLayer","float32","vertices","int32","objectid","init","createGeometry","createMesh","createPickingMesh","matlib","pickingPolygonMaterial","polygonMaterial","baseColors","computeVertexNormals","PolygonalProxyModel","offset_source","source_oid","capLeft","resolution","step","cos","sin","capRight","segment","LineModel","pickingLineMaterial","frustumCulled","lineMaterial","LineProxyModel","PointModel","pickingPointMaterial","pointMaterial","symbol","symbolGeometry","PointProxyModel","Move","interval","time","getOffset","from_speed","to_speed","agentMaterial","pickingAgentMaterial","registeredModels","simplepolygon","simpleline","simplepoint","proxy","modelTypes","Object","keys","proxyTypes","deserializeModel","tags","includes","TileLoader","stopFlag","CancelToken","loadingGeometry","prefix","sourceFile","cancelToken","baseURL","host","cancel","Tile","bbox","brect","models","isVisible","caching","Vector3","box","Vector2","placeholders","addPlaceholder","show","hide","hidePlaceholder","disposeCache","modeldata","parsingGeometry","applyStyleToModels","showPlaceholder","LoadStatus","Grid","focusPoint","tiles","visible_radius","visibleSwap","zero2","tile_size","Infinity","createTiles","Set","b","values","a","tiledata","idx","fp","visibleTile","divideScalar","nvisibleTile","equals","updateVisibility","tmpVisible","trad","ceil","sid","subScalar","eid","addScalar","clear","has","Interval","moves","loading","acitve","delayedCall","start_time","deserializeMovement","move","finalizeInit","sort","Timeline","intervals","intervalLength","active","fillingBuffer","interval_length","idata","timeline","addTimeline","count","cl","countLoaded","updateLoaded","contains","swapActive","loadInterval","discard","le","load","wontload","nowIndex","unloadInterval","LayerBase","style_names","grid","focus","center","updateVisibleTiles","point","reloadVisibility","radius","loadingStyles","lstyle","clearStyle","enableCache","disableCache","Layer","applyStyle","Overlay","usedStyle","updateVisibleRadius","setVisibleRadius","enable","MainTimeline","timelines","play","speed","ready","delta","setTime","Action","manager","counter","StatusManager","bar","getElementById","action","isRunning","innerHTML","PerspectiveControls","distance","updateMatrixWorld","enableRotate","maxDistance","OrthographicControls","csm","distanceTo","object","left","bottom","updateFrustums","CameraControls","perspective","orthographic","resize","pos","dir","subVectors","normalize","multiplyScalar","sub","isOrthographicCamera","topView","swap","usingOrtho","vector","near","far","unproject","Compas","camDirection3","camDirection2","north","angle","acos","dot","inverseProjectionMatrix","Matrix4","Frustum","projectionMatrix","setFromProjectionMatrix","maxFar","isOrthographic","elements","invert","applyMatrix4","absZ","breaks","cascade","lerpVectors","cameraMatrix","CSMShader","lights_fragment_begin","lights_pars_begin","ShaderChunk","_cameraToLightMatrix","_lightSpaceFrustum","_center","_bbox","Box3","_uniformArray","_logArray","CSM","parent","cascades","mode","shadowMapSize","shadowBias","lightDirection","lightIntensity","lightNear","lightFar","lightMargin","customSplitsCallback","fade","mainFrustum","frustums","shaders","createLights","injectInclude","light","DirectionalLight","shadow","mapSize","bias","shadowCam","frustum","nearVerts","farVerts","point1","point2","squaredBBWidth","linearDepth","uniformSplit","logarithmicSplit","amount","lambda","MathUtils","lerp","practicalSplit","texelWidth","texelHeight","multiplyMatrices","matrixWorldInverse","matrixWorld","toSpace","makeEmpty","expandByPoint","getCenter","defines","USE_CSM","CSM_CASCADES","CSM_FADE","breaksVec2","scope","onBeforeCompile","getExtendedBreaks","CSM_cascades","cameraNear","shadowFar","prev","getBreaks","initCascades","updateShadowBounds","updateUniforms","CSMHelper","displayFrustum","displayPlanes","displayShadowBounds","indices","Uint16Array","frustumGeometry","BufferGeometry","setIndex","BufferAttribute","frustumLines","LineSegments","LineBasicMaterial","cascadeLines","cascadePlanes","shadowLines","l","cascadeLine","cascadePlane","shadowLineGroup","frustumLinePositions","getAttribute","quaternion","scale","pop","Box3Helper","planeMat","MeshBasicMaterial","transparent","opacity","depthWrite","DoubleSide","Mesh","PlaneGeometry","Group","shadowLine","addVectors","attach","setXYZ","GPUPickHelper","pickingTexture","pixelBuffer","offsets","maxOffest","entries","oid_array","oid_view","getUint8","pixelRatio","getPixelRatio","setViewOffset","getContext","drawingBufferWidth","drawingBufferHeight","setRenderTarget","clearViewOffset","readRenderTargetPixels","GridPlaceholders","visibilityMap","letters","random","getRandomColor","parseInt","xdim","ydim","genPlaceholder","Selector","cube","ends","region","screenToWorldOrthographic","initCube","transformCube","tmp","MaterialLibrary","selectedID","polygonSelectMaterial","setupMaterial","zoffset","thickness","pointSize","pointSelectMaterial","agentSelectMaterial","pickingMaterial","uniformsNeedUpdate","Renderer","preRenderActionsCall","postRenderActionsCall","helper","compas","stats1","stats2","updateShadows","selector","setupRenderer","setupLightsAndShadows","initOrthographic","useOrtho","hemisphere","autoUpdateHelper","setPixelRatio","devicePixelRatio","autoUpdate","frame","getRenderTarget","tick","pick","select","layerAndOidForId","setSelectedID","setPointSize","setLineWidth","location","EngineControls","keymap","savescreen","showMetaCallback","closeMetaCallback","updateCompasCallback","updateTimeCallback","updateSelection","clickTime","selectingRegion","selectingRegionDown","button","selectCoord","hasData","key","toBlob","navigator","msSaveOrOpenBlob","download","removeChild","revokeObjectURL","updateHelper","snapshot","zoomIn","zoomOut","useCache","enableShadows","disableShadows","MetacityEngine","preRenderActions","postRenderActions","moved","setAngle","rotate","angleInRadians","angleInDegrees","CompassIcon","transform","LayerMenu","setVisibility","EyeOpenIcon","EyeOffIcon","SelectorMenu","selection","setSelection","open","SettingsMenu","setRadius","lineWidth","shadows","setShadows","cache","setCache","Promise","resolve","useShadows","defaultValue","updateRadius","updatePointSize","updateLineWidth","Switch","checked","toggleShadows","toggleCache","StyleMenu","setSelected","legend","setLegend","backgroundImage","join","backgroundColor","Menu","CameraType","TimelineMenu","setStart","setPlay","setEnd","setSpeed","timeRef","timing","getPlay","getSpeed","pad","padStart","hasTimeData","display","flexDirection","PauseIcon","PlayIcon","t","isNaN","setupTime","paddingBottom","SideMenu","ViewMenu","menuShown","setMenuShown","D2","None","menu","setMenu","toggleMenu","useOrthogonalProjection","disableCamera","startSelectingRegion","enableCamera","endSelectingRegion","SettingsIcon","Settings","TimeIcon","SelectIcon","CameraIcon","takeScreenshot","swapCamera","D3","PlusIcon","MinusIcon","onClose","MetaDialog","meta","setMeta","metaIsShown","setMetaIsShown","showMeta","closeMeta","onCancel","View","useLayoutEffect","updateSize","removeEventListener","useWindowSize","reload","onMouseDown","mouseDown","clientX","clientY","timeStamp","onMouseUp","mouseUp","onMouseMove","mouseOver","onKeyDown","repeat","keyDown","onKeyUp","keyUp","tabIndex","App","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","exact","path","ReactDOM","StrictMode","Provider"],"mappings":"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","file":"static/js/main.f487ea7e.chunk.js","sourcesContent":["import axios from \"axios\";\n\nlet config = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  config = {\n    baseURL: \"http://localhost:5000\" // leave unset if you are using the production server\n  };\n}\n\nconst iaxios = axios.create(config);\n\n(function() { \n  let authToken = localStorage.getItem(\"JWT\");\n  if (authToken === null) {\n      // This means that there ISN'T JWT and no user is logged in.\n      iaxios.defaults.headers.common.Authorization = null;\n  } else {\n      // This means that there IS a JWT so someone must be logged in.\n      iaxios.defaults.headers.common.Authorization = `Bearer ${authToken}`;\n  }\n})();\n\n\n\n\nexport default iaxios;","\n\n\nexport const url = {\n    HOME: '/app',\n    VIEWTEMPLATE: '/app/view/:project_name',\n    VIEW: '/app/view/',\n    PROJECTSTEMPLATE: '/app/projects/:project_name?',\n    PROJECTS: '/app/projects/',\n    UPLOADLAYERTEMPLATE: '/app/upload/:project_name',\n    UPLOADLAYER: '/app/upload/',\n    STYLETEMPLATE: '/app/style/:project_name/:style_name',\n    STYLE: '/app/style/',\n    MAPPINGTEMPLATE: '/app/mapping/:project_name',\n    MAPPING: '/app/mapping/',\n    EXPORTTEMPLATE: '/app/exports/:export_name',\n    EXPORT: '/app/exports/',\n};\n\nexport const apiurl = {\n    LISTPROJECT: '/api/projects',\n    ADDPROJECT: '/api/project',\n    EXISTSPROJECT: '/api/project/exists',\n    RENAMEPROJECT: '/api/project/rename',\n    DELETEPROJECT: '/api/project',\n    BUILDPROJECT: '/api/project/build',\n    GETMETA: '/api/project/meta',\n    \n    LISTLAYER: '/api/layers',\n    ADDLAYER: '/api/layer',\n    RENAMELAYER: '/api/layer/rename',\n    DELETELAYER: '/api/layer',\n    ENABLELAYER: '/api/layer/enable',\n    DISABLELAYER: '/api/layer/disable',\n    MAPLAYERS: '/api/layer/map',\n    \n    LISTJOBS: '/api/jobs',\n    LISTLOGS: '/api/logs',\n    LOG: '/api/log',\n    \n    AUTHUSER: '/auth/user',\n    TOKEN: '/auth/token',\n\n    LISTSTYLES: '/api/styles',\n    GETSTYLE: '/api/style',\n    CREATESTYLE: '/api/style/create',\n    UPDATESTYLE: '/api/style/update',\n    DELETESTYLE: '/api/style',\n    RENAMESTYLE: '/api/style/rename',\n    APPLYSTYLE: '/api/style/apply',\n    PARSESTYLE: '/api/style/parse',\n\n    PROJECTDATA: '/api/data/',\n    EXPORTDATA: '/api/exports/',\n\n    LISTEXPORTS: '/api/exports',\n    EXPORT: '/api/export/',\n    EXPORTOBJ: '/api/export/obj',\n    EXPORTLEGO: '/api/export/lego',\n};\n","import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\n\nexport class MapControls extends OrbitControls {\n\n    constructor(camera: THREE.Camera, domElement: HTMLCanvasElement) {\n\n        camera.up = new THREE.Vector3(0, 0, 1);\n        super(camera, domElement);\n\n        this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n        this.mouseButtons.LEFT = THREE.MOUSE.PAN;\n        this.mouseButtons.MIDDLE = THREE.MOUSE.ROTATE;\n        this.mouseButtons.RIGHT = THREE.MOUSE.DOLLY;\n\n        this.touches.ONE = THREE.TOUCH.PAN;\n        this.touches.TWO = THREE.TOUCH.DOLLY_ROTATE;\n\n\n        this.zoomSpeed = 1.0;\n        //this.dampingFactor = 0.1;\n        //this.enableDamping = true;\n        this.minDistance = 400;\n        this.minPolarAngle = 0.001;\n        this.maxPolarAngle = Math.PI * 0.4;\n        this.update();\n    }\n}","import { Button, Heading, Pane, Paragraph, SelectMenu } from 'evergreen-ui';\nimport { useEffect, useRef, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { toast } from 'react-toastify';\nimport * as THREE from 'three';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport iaxios from '../../axios';\nimport { MapControls } from '../../engine/renderer/controls';\nimport { apiurl } from '../../url';\n\nconst CANVASMARGIN = 100;\n\nconst legoHIGH = `\n# Blender v2.93.5 OBJ File: ''\n# www.blender.org\no pCylinder6_Mesh\nv 0.057064 0.061065 -0.000001\nv 7.942935 0.061065 -0.000001\nv 0.057064 7.946936 0.000001\nv 7.942935 7.946936 0.000001\nv 6.305408 4.965252 9.599999\nv 6.489283 4.003999 9.599999\nv 6.305408 3.042744 9.599999\nv 4.961254 1.698590 9.599999\nv 3.038745 1.698590 9.599999\nv 2.218222 2.222222 9.599999\nv 1.694591 3.042745 9.599999\nv 1.510716 4.004000 9.599999\nv 1.694591 4.965254 9.599999\nv 3.038746 6.309407 9.599999\nv 4.000000 6.493282 9.599999\nv 4.961255 6.309406 9.599999\nv 5.781777 5.785775 9.599999\nv 5.697057 5.701054 9.677279\nv 4.918441 6.221309 9.677279\nv 3.081560 6.221310 9.677279\nv 1.782689 4.922440 9.677279\nv 1.600000 4.003999 9.677279\nv 1.782688 3.085559 9.677279\nv 2.302943 2.306943 9.677279\nv 3.081559 1.786688 9.677279\nv 4.918439 1.786688 9.677279\nv 6.217310 3.085558 9.677279\nv 6.399999 4.003999 9.677279\nv 6.217310 4.922438 9.677279\nv 7.899988 0.102690 9.599998\nv 7.948085 5.975600 9.599999\nv 7.941407 7.945406 9.600000\nv 4.000000 7.954429 9.600000\nv 0.058592 7.945406 9.600000\nv 0.058592 0.062591 9.599998\nv 6.399999 4.003998 11.116522\nv 6.217310 3.085558 11.116522\nv 4.918439 1.786687 11.116522\nv 3.999999 1.603998 11.116522\nv 3.081559 1.786688 11.116522\nv 2.302943 2.306942 11.116522\nv 1.782688 3.085559 11.116522\nv 1.600000 4.003999 11.116522\nv 1.782689 4.922440 11.116522\nv 3.081560 6.221310 11.116522\nv 4.918441 6.221309 11.116522\nv 5.697057 5.701054 11.116522\nv 5.636730 5.640727 11.200000\nv 4.885792 6.142488 11.200000\nv 3.114209 6.142488 11.200000\nv 1.861510 4.889791 11.200000\nv 1.861509 3.118207 11.200000\nv 2.363270 2.367270 11.200000\nv 3.999999 1.689313 11.200000\nv 4.885791 1.865508 11.200000\nv 6.138489 3.118207 11.200000\nv 6.314684 4.003998 11.200000\nv 0.128480 8.003999 9.475410\nv 7.871519 8.003999 9.475410\nv 0.128480 8.004000 0.075381\nv 7.871519 8.004000 0.075381\nv -0.000001 7.888550 0.075381\nv -0.000001 0.119451 0.075380\nv -0.000001 7.888548 9.475410\nv -0.000001 0.119449 9.475408\nv 0.081614 0.004000 0.075380\nv 7.918385 0.004000 0.075380\nv 0.081614 0.003999 9.475408\nv 7.918385 0.003999 9.475408\nv 8.000000 7.923712 0.075381\nv 8.000000 7.923710 9.475410\nv 8.000000 0.084287 9.475408\nv 8.000000 0.084289 0.075380\ns 1\nf 46 20 45\nf 44 20 21\nf 46 50 49\nf 2 66 1\nf 53 40 54\nf 36 27 28\nf 40 24 25\nf 43 21 22\nf 31 30 72\nf 26 39 25\nf 46 18 19\nf 63 64 62\nf 27 7 6\nf 19 16 15\nf 17 18 5\nf 21 13 12\nf 14 21 20\nf 30 68 69\nf 16 17 32\nf 37 26 27\nf 43 42 52\nf 56 36 57\nf 55 39 38\nf 58 61 60\nf 51 45 44\nf 53 42 41\nf 1 62 3\nf 9 26 25\nf 64 35 34\nf 67 68 66\nf 72 30 69\nf 73 4 70\nf 67 2 73\nf 62 64 60\nf 58 34 33\nf 23 24 41\nf 71 70 59\nf 24 11 10\nf 7 26 8\nf 66 68 63\nf 29 18 47\nf 51 55 57\nf 35 9 10\nf 55 37 56\nf 48 46 49\nf 61 3 60\nf 71 73 70\nf 57 47 48\nf 46 19 20\nf 44 45 20\nf 46 45 50\nf 2 67 66\nf 41 40 53\nf 40 39 54\nf 36 37 27\nf 40 41 24\nf 43 44 21\nf 72 71 31\nf 71 32 31\nf 38 39 26\nf 39 40 25\nf 46 47 18\nf 63 65 64\nf 5 29 6\nf 29 28 6\nf 28 27 6\nf 14 20 15\nf 20 19 15\nf 17 16 18\nf 16 19 18\nf 18 29 5\nf 11 23 12\nf 23 22 12\nf 22 21 12\nf 14 13 21\nf 30 35 68\nf 31 32 17\nf 32 33 16\nf 33 15 16\nf 37 38 26\nf 52 51 43\nf 51 44 43\nf 56 37 36\nf 55 54 39\nf 58 59 61\nf 51 50 45\nf 53 52 42\nf 1 63 62\nf 9 8 26\nf 64 65 35\nf 67 69 68\nf 73 2 4\nf 73 72 69\nf 69 67 73\nf 34 58 64\nf 58 60 64\nf 60 3 62\nf 33 32 59\nf 59 58 33\nf 41 42 23\nf 42 43 23\nf 43 22 23\nf 4 61 70\nf 61 59 70\nf 59 32 71\nf 24 23 11\nf 10 9 24\nf 9 25 24\nf 7 27 26\nf 35 65 68\nf 65 63 68\nf 63 1 66\nf 47 36 29\nf 36 28 29\nf 57 48 49\nf 49 50 51\nf 51 52 53\nf 53 54 55\nf 55 56 57\nf 57 49 51\nf 51 53 55\nf 14 15 33\nf 31 17 5\nf 31 5 6\nf 14 33 34\nf 13 14 34\nf 30 31 6\nf 30 6 7\nf 13 34 12\nf 34 35 12\nf 30 7 8\nf 30 8 9\nf 11 12 35\nf 10 11 35\nf 35 30 9\nf 55 38 37\nf 48 47 46\nf 61 4 3\nf 71 72 73\nf 57 36 47\n`;\n\nconst legoLOW = `\n# Blender v2.93.5 OBJ File: ''\n# www.blender.org\no pCylinder6_Mesh\nv 0.057064 0.061065 -0.000001\nv 7.942935 0.061065 -0.000001\nv 0.057064 7.946936 0.000001\nv 7.942935 7.946936 0.000001\nv 6.305408 4.965252 3.200000\nv 6.489283 4.003999 3.199999\nv 6.305408 3.042744 3.199999\nv 4.961254 1.698590 3.199999\nv 3.038745 1.698590 3.199999\nv 2.218222 2.222222 3.199999\nv 1.694591 3.042745 3.199999\nv 1.510716 4.004000 3.199999\nv 1.694591 4.965254 3.200000\nv 3.038746 6.309408 3.200000\nv 4.000000 6.493282 3.200000\nv 4.961255 6.309407 3.200000\nv 5.781777 5.785775 3.200000\nv 5.697057 5.701054 3.277279\nv 4.918441 6.221309 3.277279\nv 3.081560 6.221310 3.277279\nv 1.782689 4.922440 3.277279\nv 1.600000 4.003999 3.277278\nv 1.782688 3.085559 3.277278\nv 2.302943 2.306943 3.277278\nv 3.081559 1.786688 3.277278\nv 4.918439 1.786688 3.277278\nv 6.217310 3.085558 3.277278\nv 6.399999 4.003999 3.277278\nv 6.217310 4.922438 3.277279\nv 7.899988 0.102690 3.199999\nv 7.948085 5.975600 3.200000\nv 7.941407 7.945406 3.200000\nv 4.000000 7.954429 3.200000\nv 0.058592 7.945406 3.200000\nv 0.058592 0.062591 3.199999\nv 6.399999 4.003998 4.716522\nv 6.217310 3.085558 4.716522\nv 4.918439 1.786688 4.716521\nv 3.999999 1.603999 4.716521\nv 3.081559 1.786688 4.716521\nv 2.302943 2.306942 4.716521\nv 1.782688 3.085559 4.716522\nv 1.600000 4.003999 4.716522\nv 1.782689 4.922440 4.716522\nv 3.081560 6.221310 4.716522\nv 4.918441 6.221309 4.716522\nv 5.697057 5.701054 4.716522\nv 5.636730 5.640727 4.800000\nv 4.885792 6.142488 4.800000\nv 3.114209 6.142488 4.800000\nv 1.861510 4.889791 4.800000\nv 1.861509 3.118207 4.800000\nv 2.363270 2.367270 4.799999\nv 3.999999 1.689314 4.799999\nv 4.885791 1.865509 4.799999\nv 6.138489 3.118207 4.800000\nv 6.314684 4.003998 4.800000\nv 0.128480 8.003999 3.075409\nv 7.871519 8.003999 3.075409\nv 0.128480 8.004000 0.075381\nv 7.871519 8.004000 0.075381\nv -0.000001 7.888550 0.075381\nv -0.000001 0.119451 0.075380\nv -0.000001 7.888548 3.075409\nv -0.000001 0.119449 3.075408\nv 0.081614 0.004000 0.075380\nv 7.918385 0.004000 0.075380\nv 0.081614 0.003999 3.075408\nv 7.918385 0.003999 3.075408\nv 8.000000 7.923712 0.075381\nv 8.000000 7.923710 3.075409\nv 8.000000 0.084287 3.075408\nv 8.000000 0.084289 0.075380\ns 1\nf 46 20 45\nf 44 20 21\nf 46 50 49\nf 2 66 1\nf 53 40 54\nf 36 27 28\nf 40 24 25\nf 43 21 22\nf 31 30 72\nf 26 39 25\nf 46 18 19\nf 63 64 62\nf 27 7 6\nf 19 16 15\nf 17 18 5\nf 21 13 12\nf 14 21 20\nf 30 68 69\nf 16 17 32\nf 37 26 27\nf 43 42 52\nf 56 36 57\nf 55 39 38\nf 58 61 60\nf 51 45 44\nf 53 42 41\nf 1 62 3\nf 9 26 25\nf 64 35 34\nf 67 68 66\nf 72 30 69\nf 73 4 70\nf 67 2 73\nf 62 64 60\nf 58 34 33\nf 23 24 41\nf 71 70 59\nf 24 11 10\nf 7 26 8\nf 66 68 63\nf 29 18 47\nf 51 55 57\nf 35 9 10\nf 55 37 56\nf 48 46 49\nf 61 3 60\nf 71 73 70\nf 57 47 48\nf 46 19 20\nf 44 45 20\nf 46 45 50\nf 2 67 66\nf 41 40 53\nf 40 39 54\nf 36 37 27\nf 40 41 24\nf 43 44 21\nf 72 71 31\nf 71 32 31\nf 38 39 26\nf 39 40 25\nf 46 47 18\nf 63 65 64\nf 5 29 6\nf 29 28 6\nf 28 27 6\nf 14 20 15\nf 20 19 15\nf 17 16 18\nf 16 19 18\nf 18 29 5\nf 11 23 12\nf 23 22 12\nf 22 21 12\nf 14 13 21\nf 30 35 68\nf 31 32 17\nf 32 33 16\nf 33 15 16\nf 37 38 26\nf 52 51 43\nf 51 44 43\nf 56 37 36\nf 55 54 39\nf 58 59 61\nf 51 50 45\nf 53 52 42\nf 1 63 62\nf 9 8 26\nf 64 65 35\nf 67 69 68\nf 73 2 4\nf 73 72 69\nf 69 67 73\nf 34 58 64\nf 58 60 64\nf 60 3 62\nf 33 32 59\nf 59 58 33\nf 41 42 23\nf 42 43 23\nf 43 22 23\nf 4 61 70\nf 61 59 70\nf 59 32 71\nf 24 23 11\nf 10 9 24\nf 9 25 24\nf 7 27 26\nf 35 65 68\nf 65 63 68\nf 63 1 66\nf 47 36 29\nf 36 28 29\nf 57 48 49\nf 49 50 51\nf 51 52 53\nf 53 54 55\nf 55 56 57\nf 57 49 51\nf 51 53 55\nf 14 15 33\nf 31 17 5\nf 31 5 6\nf 14 33 34\nf 13 14 34\nf 30 31 6\nf 30 6 7\nf 13 34 12\nf 34 35 12\nf 30 7 8\nf 30 8 9\nf 11 12 35\nf 10 11 35\nf 35 30 9\nf 55 38 37\nf 48 47 46\nf 61 4 3\nf 71 72 73\nf 57 36 47\n`;\n\nconst horizontal_dim = 8;\n\nexport const vertex = /* glsl */`\n#define PHONG\n\nvarying vec3 vViewPosition;\nvarying float topLayer;\nvarying float height_color;\n\nuniform float vertical_dim;\nuniform float max_layer;\nuniform float top_layer;\n\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\n    vec4 mvPosition = vec4( transformed, 1.0 );\n\n    #ifdef USE_INSTANCING\n\n        mvPosition = instanceMatrix * mvPosition;\n        height_color = min(float(int(abs(mvPosition.z + vertical_dim / 3.0) * 10.0) / int(vertical_dim * 10.0)) / top_layer + 0.3, 1.0);\n        topLayer = float(int(abs(mvPosition.z + vertical_dim / 3.0) * 10.0) / int(vertical_dim * 10.0) / int(top_layer));\n\n    #endif\n\n    mvPosition = modelViewMatrix * mvPosition;\n\n    gl_Position = projectionMatrix * mvPosition;\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n\nexport const fragment = /* glsl */`\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\nvarying float height_color;\nvarying float topLayer;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\n\tvec4 diffuseColor = vec4( diffuse * vec3(height_color, height_color, height_color), opacity );\n    if (topLayer > 0.1) {\n        diffuseColor = vec4(vec3(0.9, 1.0, 1.0), 1.0);\n    }\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n`;\n\n\nexport function legoShader() {\n\n\tconst customUniforms = THREE.UniformsUtils.merge([\n\t\tTHREE.ShaderLib.phong.uniforms,\n        {\n            vertical_dim: { value: 3.2 },\n            max_layer: { value: 4 },\n            top_layer: { value: 4 },\n        }\n\t]);\n\n\treturn new THREE.ShaderMaterial({\n\t\tuniforms: customUniforms,\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment,\n\t\tlights: true,\n\t\tside: THREE.DoubleSide,\n\t\tname: 'custom-lego-material'\n\t});\n}\n\n\n\nclass LegoEngine {\n    renderer: THREE.WebGLRenderer;\n    composer: EffectComposer;\n    scene: THREE.Scene;\n    camera: THREE.PerspectiveCamera;\n    controls: MapControls;\n    //csm: CSM;\n    layers: THREE.InstancedMesh[];\n    shader: THREE.ShaderMaterial;\n    changed = false;\n\n    constructor(canvas: HTMLCanvasElement) {\n        this.scene = new THREE.Scene();\n        this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / (window.innerHeight - CANVASMARGIN), 0.1, 2000);\n        this.renderer = new THREE.WebGLRenderer({ canvas: canvas, antialias: true });\n        this.renderer.shadowMap.enabled = true;\n        this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n        this.renderer.setClearColor(0xeeeeee, 1);\n        this.controls = new MapControls(this.camera, this.renderer.domElement);\n        this.controls.minDistance = 10;\n        this.controls.update();\n        const hemilight = new THREE.HemisphereLight(0xffffff, 0xEEEEFF, 0.7);\n        const dirlight = new THREE.DirectionalLight(0xffffff, 0.2);\n        dirlight.position.set(1, 1, 1);\n        this.scene.add(dirlight);\n        this.scene.add(hemilight);\n        \n        this.shader = legoShader();\n        this.renderer.setSize(window.innerWidth, window.innerHeight - CANVASMARGIN);\n        this.composer = new EffectComposer( this.renderer );\n        const renderPass = new RenderPass( this.scene, this.camera );\n        this.composer.addPass( renderPass );\n        this.layers = [];\n\n\n        this.controls.addEventListener('change', () => {\n            this.changed = true;\n        });\n\n        const animate = () => {\n            if (!this.changed)\n                return;\n            \n            this.controls.update();\n            this.renderer.render(this.scene, this.camera);\n            this.changed = false;\n        }\n\n        this.renderer.setAnimationLoop(animate);\n\n        window.addEventListener('resize', () => {\n            this.camera.aspect = window.innerWidth / (window.innerHeight - CANVASMARGIN);\n            this.camera.updateProjectionMatrix();\n            this.renderer.setSize(window.innerWidth, window.innerHeight - CANVASMARGIN);\n        }, false);\n\n\n\n        animate();\n    }\n\n    generateLegoModel(heightmap: number[][], vertical_dim: number, tileSize: number, tileSpacing: number, topLayer: number, setupCamera: boolean = false) {\n        let map;\n        if (vertical_dim > 3.2) {\n            map = this.round2Darray(heightmap);\n        } else {\n            map = heightmap;\n        }\n        \n        const maxLayer = this.max2Darray(map);\n        for (let i = 0; i < maxLayer; i++)\n            this.initLayer(map, i, vertical_dim, tileSize, tileSpacing);\n\n        if (setupCamera)\n            this.setCamera(map, maxLayer, vertical_dim);\n\n        this.showLayer(topLayer);\n        this.shader.uniforms.vertical_dim.value = vertical_dim;\n        this.shader.uniforms.max_layer.value = maxLayer;\n        this.shader.needsUpdate = true;\n        this.changed = true;\n        return maxLayer;\n    }\n\n    private getInstancedUnitModel(instanceCount: number, vertical_dim: number) {\n        //const geometry = new THREE.BoxGeometry(horizontal_dim, horizontal_dim, vertical_dim);\n\n\n        const loader = new OBJLoader();\n        let model;\n        if (vertical_dim > 3.2) {\n            model = loader.parse(legoHIGH);\n        } else {\n            model = loader.parse(legoLOW);    \n        }\n\n        const material = this.shader;\n        const geometry = (model.children[0] as any).geometry.clone();\n\n        model.remove();\n        \n        const cube = new THREE.InstancedMesh(geometry, material, instanceCount);\n        return cube;\n    }\n\n    private max2Darray(arr: number[][]) {\n        return arr.reduce((acc, cur) => Math.max(acc, cur.reduce((acc, cur) => Math.max(acc, cur), 0)), 0);\n    }\n\n    private round2Darray(arr: number[][]) {\n        return arr.map(row => row.map(val => Math.round(val / 3)));\n    }\n\n    private generatePositionsForLayer(heightmap: number[][], layer: number, vertical_dim: number, tileSize: number, tileSpacing: number) {\n        const positions: THREE.Vector3[] = [];\n        let xgroupoff, ygroupoff;\n        for (let i = 0; i < heightmap.length; i++) {\n            for (let j = 0; j < heightmap[i].length; j++) {\n                if (heightmap[i][j] >= layer) {\n                    xgroupoff = Math.floor(i / tileSize) * tileSpacing * horizontal_dim;\n                    ygroupoff = Math.floor(j / tileSize) * tileSpacing * horizontal_dim;\n                    positions.push(new THREE.Vector3(j * horizontal_dim + ygroupoff, -i * horizontal_dim - xgroupoff, layer * vertical_dim));\n                } \n            }\n        }\n        return positions;\n    }\n\n    private setCamera(heightmap: number[][], maxLayer: number, vertical_dim: number, ) {\n        this.camera.position.z = maxLayer * vertical_dim + 100;\n        this.camera.position.y = -heightmap.length * horizontal_dim / 2;\n        this.camera.position.x = heightmap[0].length * horizontal_dim / 2;\n        this.controls.target.set(heightmap[0].length * horizontal_dim / 2, -heightmap.length * horizontal_dim / 2, 0);\n    }\n\n\n    private initLayer(heightmap: number[][], layer: number, vertical_dim: number, tileSize: number, tileSpacing: number) {\n        const positions = this.generatePositionsForLayer(heightmap, layer, vertical_dim, tileSize, tileSpacing);\n        const instanceModel = this.getInstancedUnitModel(positions.length, vertical_dim);\n        this.layers.push(instanceModel);\n\n        var dummy = new THREE.Object3D();\n        for (var i = 0; i < positions.length; i++) { // Iterate and offset x pos\n            dummy.position.copy(positions[i]);\n            dummy.updateMatrix();\n            instanceModel.setMatrixAt(i, dummy.matrix);\n        }\n\n        instanceModel.instanceMatrix.needsUpdate = true;\n        instanceModel.castShadow = true;\n        instanceModel.receiveShadow = true;\n        this.scene.add(instanceModel);\n    }\n\n    showLayer(index: number) {\n        for (let i = 0; i < this.layers.length; i++) {\n            if (i >= index) {\n                this.layers[i].visible = false;\n            } else {\n                this.layers[i].visible = true;\n            }\n        }\n\n        this.shader.uniforms.top_layer.value = index;\n        this.shader.needsUpdate = true;\n        this.changed = true;\n    }\n\n    remove() {\n        for (let i = 0; i < this.layers.length; i++) {\n            this.scene.remove(this.layers[i]);\n        }\n        this.layers = [];\n        this.changed = true;\n    }\n}\n\n\nfunction getLayout(exportID: string, box_size: number, callback: (layout: any) => void) {\n    iaxios.get(`${apiurl.EXPORTDATA}${exportID}/lego${box_size}.json`).then(res => {\n        callback(res.data);\n    });\n}\n\nexport function ExportLego(props: { start: [number, number], end: [number, number], project: string, exportID: string, unit_precision: number, box_filter_size_range: [number, number], box_filter_step: number }) {\n    const { start, end, project, exportID, unit_precision, box_filter_size_range, box_filter_step } = props;\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    const boxFilterOptions = Array.from(Array(Math.floor((box_filter_size_range[1] - box_filter_size_range[0]) / box_filter_step)), (x, i) => box_filter_size_range[0] + i * box_filter_step);\n    const [boxFilter, setBoxFilter] = useState(boxFilterOptions[boxFilterOptions.length - 1]);\n    const verticalResolutionOptions = [3.2, 9.6];\n    const [verticalResolution, setVerticalResolution] = useState(verticalResolutionOptions[0]);\n    const tileSpacingOptions = [0, 1, 2, 4, 8, 16, 32];\n    const [tileSpacing, setTileSpacing] = useState(0);\n    const tileSizeOptions = [4, 8, 16, 32];\n    const [tileSize, setTileSize] = useState(8);\n    const [maxLayer, setMaxLayer] = useState(0);\n    const [topLayer, setTopLayer] = useState(0);\n    const [engine, setEngine] = useState<LegoEngine>();\n    let history = useHistory();\n\n    const [legoResolution, setLegoResolution] = useState<any>();\n    const [modelSize, setModelSize] = useState<any>();\n\n\n    useEffect(() => {\n        if (canvasRef.current) {\n            const engine = new LegoEngine(canvasRef.current);\n            setEngine(engine);\n            getLayout(exportID, boxFilter, (layout) => {\n                if (engine) {\n                    engine.remove();\n                    const ml = engine.generateLegoModel(layout.map, verticalResolution, tileSize, tileSpacing, topLayer, true);\n                    setMaxLayer(ml);\n                    setTopLayer(ml + 1);\n                    setLegoResolution(layout.lego_size);\n                    setModelSize(layout.model_size_mm);\n                }\n            });\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [canvasRef]);\n\n\n    useEffect(() => {\n        getLayout(exportID, boxFilter, (layout) => {\n            if (engine) {\n                engine.remove();\n                const ml = engine.generateLegoModel(layout.map, verticalResolution, tileSize, tileSpacing, topLayer);\n                setMaxLayer(ml);\n                setTopLayer(ml + 1);\n                setLegoResolution(layout.lego_size);\n                setModelSize(layout.model_size_mm);\n            }\n        });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [verticalResolution, tileSize, tileSpacing]);\n\n    useEffect(() => {\n        getLayout(exportID, boxFilter, (layout) => {\n            if (engine) {\n                engine.remove();\n                const ml = engine.generateLegoModel(layout.map, verticalResolution, tileSize, tileSpacing, topLayer);\n                setMaxLayer(ml);\n                setTopLayer(ml + 1);\n                engine.showLayer(topLayer);\n                setLegoResolution(layout.lego_size);\n                setModelSize(layout.model_size_mm);\n            }\n        });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [boxFilter]);\n\n\n    useEffect(() => {\n        if (engine) {\n            engine.showLayer(topLayer);\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [topLayer]);\n    \n    const deleteExport = () => {\n        iaxios.delete(`${apiurl.EXPORT}${exportID}`).then(res => {\n            toast.success(\"Export deleted\");\n            history.push(`/`);\n        }).catch(err => {\n            toast.error(\"Error deleting export\");\n        });\n    };\n\n    const format = (num: number, decimals=2) => {\n        return num.toFixed(decimals);\n    };\n\n    return (\n\n        <Pane className=\"lego-page\">\n            <Pane className=\"export-description page\">\n                <Heading marginBottom={16}>Lego Model {exportID}</Heading>\n                <Paragraph marginBottom={16}>Your Lego export is ready.</Paragraph>\n                <Button appearance=\"primary\" intent=\"danger\" onClick={deleteExport} marginTop={20} marginBottom={40}>\n                    Delete\n                </Button>\n                <Paragraph marginBottom={16} size={300}>You can also share this export with others, this page is publicly available. Once you don't need it anymore, please consider deleting it from the server and helping us to save disk space. The export might also get deleted after a while automatically.</Paragraph>\n                <Pane className=\"field\">\n                    <Heading size={100}>Project</Heading>\n                    <Pane className=\"values\">\n                        {project}\n                    </Pane>\n                </Pane>\n                <Pane className=\"field\">\n                    <Heading size={100}>Start coordinate</Heading>\n                    <Pane className=\"values\">\n                        {format(start[0])} {format(start[1])}\n                    </Pane>\n                </Pane>\n                <Pane className=\"field\">\n                    <Heading size={100}>End coordinate</Heading>\n                    <Pane className=\"values\">\n                        {format(end[0])} {format(end[1])}\n                    </Pane>\n                </Pane>\n\n                <Heading marginBottom={32} marginTop={32}>Current setup</Heading>\n                <Pane className=\"field\">\n                    <Heading size={100}>General</Heading>\n                    <Pane className=\"values\">\n                        1 Lego block is {boxFilter / unit_precision} units (coordinate units)\n                    </Pane>\n                </Pane>\n                <Pane className=\"field\">\n                    <Heading size={100}>Model dimensions</Heading>\n                    <Pane className=\"values\">\n                        {modelSize ? (`${format(modelSize.x)} x ${format(modelSize.y)} x ${format(maxLayer * verticalResolution)} mm`) : \"loading...\"}\n                    </Pane>\n                </Pane>\n                <Pane className=\"field\">\n                    <Heading size={100}>Lego resolution</Heading>\n                    <Pane className=\"values\">\n                        {legoResolution ? (`${format(legoResolution.x, 0)} x ${format(legoResolution.y, 0)} x ${format(maxLayer, 0)} bricks`) : \"loading...\"}\n                    </Pane>\n                </Pane>\n            </Pane>  \n\n            <Pane className=\"lego-controls\">\n                <SelectMenu\n                    title=\"Lego brick resolution\"\n                    options={boxFilterOptions.map((value) => ({ label: `1 brick is ${value / unit_precision} units`, value: value }))}\n                    selected={`1 brick is ${boxFilter / unit_precision} units`}\n                    hasFilter={false}\n                    onSelect={(item) => setBoxFilter(item.value as number)}>\n                    <Button appearance=\"minimal\">{`Horizontal step: 1 brick is ${boxFilter / unit_precision} units`}</Button>\n                </SelectMenu>\n                <SelectMenu\n                    title=\"Vertical resolution\"\n                    options={verticalResolutionOptions.map((value) => ({ label: `${value} mm bricks`, value: value }))}\n                    selected={`${verticalResolution} mm bricks`}\n                    hasFilter={false}\n                    onSelect={(item) => setVerticalResolution(item.value as number)}>\n                    <Button appearance=\"minimal\">{`Vertical step: ${verticalResolution} mm bricks`}</Button>\n                </SelectMenu>\n                <SelectMenu\n                    title=\"Tile spacing\"\n                    options={tileSpacingOptions.map((value) => ({ label: `${value} bricks`, value: value }))}\n                    selected={`${tileSpacing} bricks`}\n                    hasFilter={false}\n                    onSelect={(item) => setTileSpacing(item.value as number)}>\n                        <Button appearance=\"minimal\">{`Tile spacing: ${tileSpacing} bricks`}</Button>\n                </SelectMenu>\n                <SelectMenu\n                    title=\"Tile size\"\n                    options={tileSizeOptions.map((value) => ({ label: `${value} bricks`, value: value }))}\n                    selected={`${tileSize} bricks`}\n                    hasFilter={false}\n                    onSelect={(item) => setTileSize(item.value as number)}>\n                    <Button appearance=\"minimal\" disabled={tileSpacing === 0}>{`Tile size: ${tileSize} bricks`}</Button> \n                </SelectMenu>\n                <SelectMenu\n                    title=\"Show Layer\"\n                    options={[{label: \"All\", value: maxLayer + 1}].concat(Array.from(Array(maxLayer), (x, i) => ({ label: `${i + 1}`, value: i + 1 })))}\n                    selected={`${topLayer}`}\n                    hasFilter={false}\n                    onSelect={(item) => setTopLayer(item.value as number)}>\n                        <Button appearance=\"minimal\">{`Show layer: ${topLayer}`}</Button>\n                </SelectMenu>\n            </Pane>          \n\n            <canvas ref={canvasRef}></canvas>\n\n        </Pane>\n    )\n}\n","import { Button, CrossIcon, EmptyState, Pane, Spinner } from 'evergreen-ui';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport iaxios from '../../axios';\nimport { apiurl } from '../../url';\nimport { ExportLego } from './lego';\nimport { ExportOBJ } from './obj';\n\n\nenum ExportStatus {\n    PROCESSING,\n    SUCCESS,\n    NOTFOUND\n}\n\nexport function Export() {\n    const { export_name } = useParams<{ export_name: string | undefined }>();\n    const [data, setData] = useState<any>(undefined);\n    const [status, setStatus] = useState<ExportStatus>(ExportStatus.PROCESSING);\n\n    const refresh = useCallback(() => {\n        iaxios.get(`${apiurl.EXPORT}${export_name}`).then(res => {\n            if (res.status === 204) {\n                setStatus(ExportStatus.PROCESSING);\n                toast.info('Not yet, processing...', { autoClose: 3000 });\n            } else if (res.status === 200) {\n                setData(res.data);\n                setStatus(ExportStatus.SUCCESS);\n            }\n        }).catch(err => {\n            if (err.response.status === 404) {\n                setStatus(ExportStatus.NOTFOUND);\n            }\n        });\n    }, [export_name]);\n\n    useEffect(() => {\n        refresh();\n    }, [refresh]);\n\n\n    return (\n        <>\n            {status === ExportStatus.PROCESSING &&\n                <Pane className=\"fullScreen\">\n                    <Pane className=\"export-wait\">\n                        <EmptyState\n                            background=\"light\"\n                            title={`Export ${export_name} is still processing`}\n                            orientation=\"horizontal\"\n                            icon={<Spinner />}// <ExportIcon color=\"#C1C4D6\" />}\n                            iconBgColor=\"#EDEFF5\"\n                            description=\"Refresh the site once in a while, outputs will appear on this page when they are succesfully processed\"\n                            anchorCta={\n                                <EmptyState.LinkButton is={Button} onClick={refresh}>\n                                    Click me to refresh!\n                                </EmptyState.LinkButton>\n                            }\n                        />\n                    </Pane>\n                </Pane>}\n            {status === ExportStatus.NOTFOUND &&\n                <Pane className=\"fullScreen\">\n                    <Pane className=\"export-wait\">\n                        <EmptyState\n                            background=\"light\"\n                            title={`Export ${export_name} was not found`}\n                            orientation=\"vertical\"\n                            icon={<CrossIcon color=\"#C1C4D6\" />}\n                            iconBgColor=\"#EDEFF5\"\n                            description=\"Outputs have been deleted or are no longer available\"\n                        />\n                    </Pane>\n                </Pane>}\n            {status === ExportStatus.SUCCESS &&\n                ((data.type === 'obj' && (<ExportOBJ {...data} exportID={export_name} />)) ||\n                (data.type === 'lego' && (<ExportLego {...data} exportID={export_name} />)))\n            }\n        </>\n    );\n}\n","import { Button, Heading, Pane, Paragraph } from 'evergreen-ui';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport iaxios from '../../axios';\nimport { apiurl } from '../../url';\nimport { formatBytes } from '../elements/formater';\n\n\nexport function ExportOBJ(props: { start: [number, number], end: [number, number], project: string, exportID: string }) {\n    const { start, end, project, exportID } = props;\n    const [downloading, setDownloading] = useState(false);\n    const [size, setSize] = useState(\"0 Bytes\");\n    let history = useHistory();\n    \n    const download = () => {\n        setDownloading(true);\n        iaxios.get(`${apiurl.EXPORTDATA}${exportID}/export.obj`, {\n            onDownloadProgress: (progressEvent) => {\n                setSize(formatBytes(progressEvent.loaded));\n            }\n        }).then(res => {\n            const blob = new Blob([res.data], { type: 'application/octet-stream' });\n            const url = window.URL.createObjectURL(blob);\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download', `${exportID}.obj`);\n            document.body.appendChild(link);\n            link.click();\n        });\n    };\n\n    const deleteExport = () => {\n        iaxios.delete(`${apiurl.EXPORT}${exportID}`).then(res => {\n            toast.success(\"Export deleted\");\n            history.push(`/`);\n        }).catch(err => {\n            toast.error(\"Error deleting export\");\n        });\n    };\n\n    const format = (num: number) => {\n        return num.toFixed(2);\n    };\n\n    return (\n        <Pane className=\"fullScreen\">\n            <Pane className=\"export-description\">\n                <Heading marginBottom={16}>Export {exportID}</Heading>\n                <Paragraph marginBottom={16}>Your OBJ export is ready, please download it.</Paragraph>\n                <Paragraph marginBottom={16} size={300}>You can also share this download with others, this page is publicly available. Once you've downloaded it, please consider deleting it from the server and helping us to save disk space. The export might also get deleted after a while automatically.</Paragraph>\n                <Pane className=\"field\">\n                    <Heading size={100}>Project</Heading>\n                    <Pane className=\"values\">\n                        {project}\n                    </Pane>\n                </Pane>\n                <Pane className=\"field\">\n                    <Heading size={100}>Start coordinate</Heading>\n                    <Pane className=\"values\">\n                        {format(start[0])} {format(start[1])}\n                    </Pane>\n                </Pane>\n                <Pane className=\"field\">\n                    <Heading size={100}>End coordinate</Heading>\n                    <Pane className=\"values\">\n                        {format(end[0])} {format(end[1])}\n                    </Pane>\n                </Pane>\n                <Button appearance=\"primary\" intent=\"success\" onClick={download} marginTop={20} marginRight={10}>\n                    {downloading ? `Downloading ${size}` : 'Download'}\n                </Button>\n                <Button appearance=\"primary\" intent=\"danger\" onClick={deleteExport} marginTop={20}>\n                    Delete\n                </Button>\n                </Pane>\n        </Pane>\n    )\n}\n\n","\n\n//funciton to convert number of Bytes to KB, MB, GB, TB\nexport function formatBytes(bytes: number, decimals: number = 2) {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\n","import { Button, ConsoleIcon, EmptyState, Heading, Pane, Paragraph, Pre, SearchInput, SideSheet, Table } from 'evergreen-ui';\nimport { useEffect, useState } from 'react';\nimport iaxios from '../../axios';\nimport { apiurl } from '../../url';\n\n\ninterface IJob {\n    type: string;\n    status: number;\n    project?: string;\n    job_id: string;\n}\n\nexport function JobList() {\n    const [jobs, setJobs] = useState<IJob[]>([]);\n    const [detailIsShown, setDetailIsShown] = useState(false);\n    const [logName, setLogName] = useState<string|undefined>();\n    const [updatingLog, setUpdatingLog] = useState<NodeJS.Timeout|undefined>(undefined);\n    const [logContents, setLogContents] = useState(\"\");\n    \n    useEffect(() => {\n        let update: NodeJS.Timeout;\n\n        const loadLog = () => {\n            if (!logName || logName.length === 0) {\n                setLogContents(\"\");\n                return;\n            }\n\n            iaxios.post(apiurl.LOG, {\n                name: logName\n            }).then((response) => {\n                setLogContents(response.data);\n                update = setTimeout(loadLog, 2000);\n            })\n        }\n\n        if (updatingLog)\n            clearTimeout(updatingLog);\n        setUpdatingLog(setTimeout(loadLog, 1000));\n\n        return () => {\n            setLogContents(\"\");\n            clearTimeout(update);\n        };\n    \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [logName]);\n\n\n    useEffect(() => {\n        let update: NodeJS.Timeout;\n\n        const loadJobs = () => {\n            iaxios.get(apiurl.LISTJOBS).then((response) => {\n                setJobs(response.data);\n                update = setTimeout(loadJobs, 2000);\n            });\n        }\n\n        loadJobs();\n\n        return () => {\n            clearTimeout(update);\n            setJobs([]);\n        };\n    }, []);\n\n    return (\n        <>\n            <SideSheet\n                isShown={detailIsShown}\n                onCloseComplete={() => setDetailIsShown(false)}\n                preventBodyScrolling>\n                <Pane>\n                    <Heading margin={15}>Running Jobs</Heading>\n                    <Paragraph margin={15}>\n                        These are the jobs that are currently running or have been queued.\n                    </Paragraph>\n                    <Table margin={15}>\n                        <Table.Head className=\"row\">\n                            <Table.TextHeaderCell className=\"wide\">Job Type</Table.TextHeaderCell>\n                            <Table.TextHeaderCell className=\"wide\">Status</Table.TextHeaderCell>\n                            <Table.TextHeaderCell className=\"wide\">Project</Table.TextHeaderCell>\n                            <Table.TextHeaderCell className=\"narrow\">Log</Table.TextHeaderCell>\n                        </Table.Head>\n                        <Table.Body>\n                            {jobs.length > 0 ? jobs.map((job) => (\n                                <Table.Row key={job.job_id} paddingY={12} height=\"auto\" className=\"row\">\n                                    <Table.TextCell className=\"wide\">{job.type}</Table.TextCell>\n                                    <Table.TextCell className=\"wide\">{job.status}</Table.TextCell>\n                                    <Table.TextCell className=\"wide\">{job.project ? job.project : \"--\"}</Table.TextCell>\n                                    <Table.TextCell className=\"narrow\"><Button onClick={() => setLogName(\"worker0\")}>Log</Button></Table.TextCell>\n                                </Table.Row>\n                            )) :\n                                <EmptyState\n                                    background=\"light\"\n                                    title=\"No Running Jobs\"\n                                    orientation=\"horizontal\"\n                                    icon={<ConsoleIcon color=\"#C1C4D6\" />}\n                                    iconBgColor=\"#EDEFF5\"\n                                    description=\"Jobs run in the background and process input data into visualizable elements\"\n                                />\n                            }\n                        </Table.Body>\n                    </Table>\n                    <SearchInput placeholder='Type worker0 to see processing logs' width=\"calc(100% - 30px)\" margin={15} onChange={(e: any) => setLogName(e.target.value)} value={logName} />\n                    <Pane className=\"logContents\">\n                        { logContents && logContents.length > 0 ?\n                            <Pre className=\"logLines\">{logContents.split(/[\\r\\n]+/).map((line, index) => <span key={index}>{line}</span>)}</Pre>\n                            :\n                            <Pre>No contents or no log selected</Pre>\n                        }\n                    </Pane>\n                \n                </Pane>\n            </SideSheet>\n            <Button iconBefore={ConsoleIcon} appearance='minimal' onClick={() => setDetailIsShown(true)}>Running Tasks</Button>\n        </>\n    );\n}\n\n","import { Button, GitBranchIcon, Link, Pane } from 'evergreen-ui'\nimport React from 'react'\nimport { Link as ReactRouterLink } from 'react-router-dom'\nimport { url } from '../../url'\nimport { JobList } from '../jobs/list'\n\nexport const EvergreenReactRouterLink = (props: any) =>\n    <Link is={ReactRouterLink} {...props} />\n\n\ninterface IHeaderProps {\n    home?: boolean;\n    projects?: boolean;\n    jobs?: boolean;\n}\n\nexport function Header(props: IHeaderProps) {\n\n    return (\n        <Pane className=\"header\">\n            <Button is={EvergreenReactRouterLink} to={url.HOME} appearance='minimal'>Metacity</Button>\n            <Pane flexGrow={1}></Pane>\n            <Button is={Link} href={\"https://github.com/MetacitySuite\"} iconBefore={GitBranchIcon} appearance='minimal'>Github</Button>\n            <JobList/>\n        </Pane>\n    )\n}","import { Button, GitBranchIcon, Heading, Link, LogInIcon, Pane, Paragraph } from 'evergreen-ui';\nimport { useEffect, useState } from 'react';\nimport iaxios from '../../axios';\nimport { apiurl, url } from '../../url';\nimport { EvergreenReactRouterLink } from '../elements/header';\n\n\nexport function Home() {\n\tconst [projects, setProjects] = useState<string[]>([]);\n\tconst [exports, setExports] = useState<string[]>([]);\n\n\tconst getData = () => {\n\t\tiaxios.get(apiurl.LISTPROJECT).then((response) => {\n\t\t\tsetProjects(response.data);\n\t\t});\n\t\tiaxios.get(apiurl.LISTEXPORTS).then((response) => {\n\t\t\tsetExports(response.data);\n\t\t});\n\t}\n\n\tuseEffect(() => {\n\t\tgetData();\n\t\treturn () => {\n\t\t\tsetProjects([]);\n\t\t\tsetExports([]);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<Pane className=\"home page\">\n\t\t\t\t<Heading size={900} marginBottom={64}>Metacity</Heading>\n\t\t\t\t<Paragraph marginBottom={64}>\n\t\t\t\tMetacity is a set of tools for urban data synthesis, analysis &amp; visualization. Our goal is to create a new generation of open-source tools and services targeted at developers, urban planners and the general public. We believe that urban data visualization should make the city look like a city, not a giant spreadsheet.\n\t\t\t\t</Paragraph>\n\t\t\t\t<Pane  position=\"absolute\" top={10} right={10}>\n\t\t\t\t\t<Button is={Link} href={\"https://github.com/MetacitySuite\"} iconBefore={GitBranchIcon} appearance='minimal'>Github</Button>\n\t\t\t\t\t<Button is={EvergreenReactRouterLink} to={url.PROJECTS} iconBefore={LogInIcon} appearance='minimal'>Login</Button>\n\t\t\t\t</Pane>\n\t\t\t\t<Pane className=\"homeLists\" marginBottom={64}>\n\t\t\t\t\t<Pane className=\"homeList\">\n\t\t\t\t\t\t<Heading size={300} className=\"homeListHeading\">Projects</Heading>\n\t\t\t\t\t\t{projects.map((project, index) => (\n\t\t\t\t\t\t\t<EvergreenReactRouterLink to={url.VIEW + project} key={`project-${index}`} size={500}>\n\t\t\t\t\t\t\t\t{project}\n\t\t\t\t\t\t\t</EvergreenReactRouterLink>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t{projects.length === 0 && (\n\t\t\t\t\t\t\t<Pane>\n\t\t\t\t\t\t\t\t<Heading size={500}>No projects found</Heading>\n\t\t\t\t\t\t\t</Pane>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Pane>\n\t\t\t\t\t<Pane className=\"homeList\">\n\t\t\t\t\t\t<Heading size={300} className=\"homeListHeading\">Exports</Heading>\n\t\t\t\t\t\t{exports.map((exp, index) => (\n\t\t\t\t\t\t\t<EvergreenReactRouterLink to={url.EXPORT + exp} key={`export-${index}`}>\n\t\t\t\t\t\t\t\t{exp}\n\t\t\t\t\t\t\t</EvergreenReactRouterLink>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t{exports.length === 0 && (\n\t\t\t\t\t\t\t<Pane>\n\t\t\t\t\t\t\t\t<Heading size={300}>No exports</Heading>\n\t\t\t\t\t\t\t</Pane>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Pane>\n\t\t\t\t</Pane>\n\t\t\t\t<Heading size={300}>Partners</Heading>\n\t\t\t\t<Pane className=\"logos\">\n\t\t\t\t\t<Link href=\"http://praha.camp/\">\n\t\t\t\t\t\t<img className=\"logo\" src={'../../assets/logos/camp.png'} alt=\"CAMP\" />\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link href=\"https://iprpraha.cz/\">\n\t\t\t\t\t\t<img className=\"logo\" src={'../../assets/logos/ipr.png'} alt=\"IPR\" />\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link href=\"https://fel.cvut.cz/en/\">\n\t\t\t\t\t\t<img className=\"logo\" src={'../../assets/logos/electrical_engeneering.svg'} alt=\"FEL CTU\"/>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link href=\"https://dcgi.fel.cvut.cz/\">\n\t\t\t\t\t\t<img className=\"logo\" src={'../../assets/logos/dcgi.png'} alt=\"DCGI\"/>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link href=\"https://fit.cvut.cz/cs\">\n\t\t\t\t\t\t<img className=\"logo\" src={'../../assets/logos/information_technology.svg'} alt=\"FIT CTU\"/>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link href=\"http://www.oncue.design/\">\n\t\t\t\t\t\t<img className=\"logo\" src={'../../assets/logos/ocd_logo_2.png'} alt=\"Ira Winder\"/>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link href=\"https://www.cesnet.cz/\">\n\t\t\t\t\t\t<img className=\"logo\" src={'../../assets/logos/cesnet.svg'} alt=\"Cesnet\"/>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link href=\"https://www.fujitsu.com/\">\n\t\t\t\t\t\t<img className=\"logo\" src={'../../assets/logos/fujitsu.png'} alt=\"Fujitsu\"/>\n\t\t\t\t\t</Link>\n\t\t\t\t</Pane>\n\t\t\t</Pane>\n\t\t</>\n\t);\n}","import { Pane, Spinner } from 'evergreen-ui';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport iaxios from '../../axios';\nimport { apiurl } from '../../url';\nimport { Login } from './login';\n\n\nexport function authUser(history: any, callbackAuth: CallableFunction, callbackNoAuth: CallableFunction) {\n    iaxios.get(apiurl.AUTHUSER).then((response) => {\n        callbackAuth();\n    }).catch(() => {\n        callbackNoAuth();\n    });\n}\n\nenum LoginState {\n    LOGGED_IN,\n    LOGGED_OUT,\n    AUTHENTICATING\n}\n\n\nexport function LoginGate(props: { children: any }) {\n    const { children } = props;\n    const [isLoggedIn, setIsLoggedIn] = useState(LoginState.AUTHENTICATING);\n    const history = useHistory();\n\n    useEffect(() => {\n        authUser(history, () => {\n            setIsLoggedIn(LoginState.LOGGED_IN);\n        }, () => {\n            setIsLoggedIn(LoginState.LOGGED_OUT);\n        });\n    }, [history]);\n\n    return (\n        <>\n            {isLoggedIn === LoginState.LOGGED_IN && children}\n            {isLoggedIn === LoginState.LOGGED_OUT && <Login onLogin={() => setIsLoggedIn(LoginState.LOGGED_IN) }/>}\n            {isLoggedIn === LoginState.AUTHENTICATING && <Pane className=\"fullScreen\"><Spinner/></Pane>}\n        </>\n    );\n}\n\n\n\n\n","import { Heading, Pane, TextInput } from 'evergreen-ui';\nimport { createRef, FormEvent, useState } from 'react';\nimport iaxios from '../../axios';\nimport { apiurl } from '../../url';\n\n\nexport function Login(props: { onLogin: () => void }) {\n  const { onLogin } = props;\n  const [status, setStatus] = useState<string>(\"\");\n\n  const name = createRef<HTMLInputElement>();\n  const pass = createRef<HTMLInputElement>();\n\n  const login = (event: FormEvent) => {\n    event.preventDefault();\n\n    let formData = new FormData();\n    formData.append(\"username\", name.current?.value || \"\");\n    formData.append(\"password\", pass.current?.value || \"\");\n\n    iaxios.post(apiurl.TOKEN, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then((response) => {\n      localStorage.setItem(\"JWT\", response.data.access_token);\n      iaxios.defaults.headers.common[\"Authorization\"] = `Bearer ${response.data.access_token}`;\n      onLogin();\n    }).catch((reject) => {\n      console.error(reject);\n      setStatus(\"There was a problem with your login, check your username and password.\")\n    });\n  };\n\n  return (\n    <Pane className=\"fullScreen\">\n        <Pane>\n          <Heading is=\"h1\">Login</Heading>\n          { status.length > 0? <p>{status}</p> : \"\"}\n          <form onSubmit={login}>\n            <TextInput width=\"100%\" placeholder=\"username\" ref={name} type=\"text\" />\n            <TextInput width=\"100%\" placeholder=\"password\" ref={pass} type=\"password\" />\n            <TextInput type=\"submit\"/>\n          </form>\n        </Pane>\n    </Pane>\n  )\n}","import { ArrowRightIcon, Button, Code, Heading, Icon, MergeColumnsIcon, Pane, Paragraph, SelectMenu, TextInput, Tooltip } from 'evergreen-ui';\nimport { createRef, FormEvent, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport iaxios from '../../axios';\nimport { apiurl } from '../../url';\nimport { Header } from '../elements/header';\nimport { ILayer } from '../projects/layers';\n\n\n\nexport function Mapping() {\n    const { project_name } = useParams<{ project_name: string }>();\n    const [layers, setLayers] = useState<ILayer[]>([]);\n    const [selectedSource, setSelectedSource] = useState<string | undefined>(undefined);\n    const [selectedTarget, setSelectedTarget] = useState<string | undefined>(undefined);\n    const name = createRef<HTMLInputElement>();\n    const history = useHistory();\n\n\n    useEffect(() => {\n        iaxios.post(apiurl.LISTLAYER, { name: project_name }).then((response) => {\n            setLayers(response.data.filter((x: ILayer) => x.type === 'layer'));\n        });\n\n        return () => {\n            setLayers([]);\n        };\n    }, [project_name, history]);\n\n\n    const submit = (event: FormEvent) => {\n        event.preventDefault();\n\n        const overlay_name = name.current!.value;\n        if (overlay_name === undefined || overlay_name.length === 0)\n        {\n            toast.error('No name specified.');\n            return;\n        }\n\n        if (selectedSource === undefined || selectedTarget === undefined) {\n            toast.error('Please select source and target layer.');\n            return;\n        }\n\n        if (selectedSource === selectedTarget) {\n            toast.error('Source and target layer cannot be same.');\n            return;\n        }\n\n        iaxios.post(apiurl.MAPLAYERS, {\n                project: project_name,\n                source: selectedSource,\n                target: selectedTarget,\n                overlay: overlay_name\n            }).then(() => {\n                toast.success('Mapping layers successfully.');\n            }).catch(() => {\n                toast.error('Mapping layers failed.');\n            });\n    };\n\n\n    return (\n        <Pane>\n            <Header projects />\n            <Pane className=\"mapping\">\n                <Icon icon={MergeColumnsIcon} size={30} color=\"#C1C4D6\" background=\"#EDEFF5\" className=\"uploadIcon\" padding={20} borderRadius={40} />\n                <Heading className=\"mappingTitle\">Layer mapping in Project {project_name}</Heading>\n\n                <Pane className=\"mappingDialog\">\n                    <form onSubmit={submit} id=\"layerMappingForm\">\n                        <TextInput placeholder=\"overlay name\" ref={name} className=\"layerName\" />\n                        <Paragraph className=\"mappingDescription\">\n                            Geometry of source layer is mapped onto geometry of target layer. The output of this operation is a new layer with type <Code size={300}>overlay</Code>. The <Code size={300}>source</Code> layer can contain any geometry, the <Code size={300}>target</Code> layer must contain any <Code size={300}>polygons</Code>.\n                        </Paragraph>\n                        <Pane className=\"mappingLayerPicker\">\n                            <SelectMenu\n                                title=\"Select source layer\"\n                                options={layers.map((layer) => ({ label: layer.name, value: layer.name }))}\n                                selected={selectedSource}\n                                onSelect={(item) => setSelectedSource(item.value as string)}\n                            >\n                                <Tooltip content=\"Can contain 2D or 3D points, lines or polygons\">\n                                    <Button type=\"button\">{selectedSource || 'select source layer'}</Button>\n                                </Tooltip>\n                        </SelectMenu>\n                        <Pane className=\"dialogPart\">\n                            <Icon icon={ArrowRightIcon} color=\"#C1C4D6\"/>\n                        </Pane>\n                        <SelectMenu\n                            title=\"Select target layer\"\n                            options={layers.map((layer) => ({ label: layer.name, value: layer.name }))}\n                            selected={selectedTarget}\n                            onSelect={(item) => setSelectedTarget(item.value as string)}\n                        >\n                            <Tooltip content=\"Must contain 2D or 3D polygons\">\n                            <Button type=\"button\">{selectedTarget || 'select target layer'}</Button>\n                            </Tooltip>\n                        </SelectMenu>\n                        </Pane>\n                    </form>\n                    <Button appearance=\"primary\" type=\"submit\" form=\"layerMappingForm\">\n                        Apply Mapping\n                    </Button>\n                </Pane>\n            </Pane>\n        </Pane>\n    );\n}","import { Paragraph, Dialog, TextInputField, InlineAlert, Tooltip } from 'evergreen-ui'\nimport { useState, FormEvent, createRef, useEffect, cloneElement } from 'react'\nimport iaxios from '../../axios';\n\ninterface IInputDialogProps {\n    submitUrl: string;\n    title: string;\n    confirmLabel: string;\n    label: string;\n    description?: string;\n    placeholder?: string;\n    method: \"post\" | \"delete\";\n\n    submitBody: (input: string) => Object;\n    onSubmit: (input: string) => void;\n    onError: (reject: any, value: string) => string;\n\n    children: React.ReactElement;\n\n}\n\n\nexport function InputDialog(props: IInputDialogProps) {\n    const nameref = createRef<HTMLInputElement>();\n    const [isShown, setShown] = useState(false);\n    const [invalid, setInvalid] = useState(false);\n    const [error, setError] = useState(\"\");\n\n    const submit = (e?: FormEvent) => {\n        if (e)\n            e.preventDefault();\n\n        const value = nameref.current?.value;\n        if (!value)\n            return;\n        const body = props.submitBody(value);\n\n        iaxios[props.method](props.submitUrl, body).then(() => {\n            if (nameref.current)\n                nameref.current.value = \"\";\n            setShown(false);\n            props.onSubmit(value);\n        }).catch((reject) => {\n            const error = props.onError(reject, value);\n            setInvalid(true);\n            setError(error);\n        });\n    };\n\n    useEffect(() => {\n        setError(\"\");\n        setInvalid(false);\n    }, [isShown]);\n\n    return (\n        <>\n        <Dialog\n            isShown={isShown}\n            title={props.title}\n            onConfirm={() => submit()}\n            onCloseComplete={() => setShown(false)}\n            confirmLabel={props.confirmLabel}>\n            <form className=\"dialogForm\" onSubmit={submit}>\n                { invalid ? \n                    <TextInputField name=\"name\" \n                        label={props.label} \n                        description={props.description} \n                        placeholder={props.placeholder} \n                        ref={nameref} \n                        isInvalid={invalid} \n                        validationMessage={error}\n                    />\n                    :\n                    <TextInputField name=\"name\" \n                        label={props.label} \n                        description={props.description} \n                        placeholder={props.placeholder} \n                        ref={nameref} \n                    />\n                }\n            </form>\n        </Dialog>\n        { cloneElement(props.children, { onClick: () => setShown(true) }) }\n    </>\n    );\n}\n\n\ninterface ITextDialogProps {\n    submitUrl: string;\n    title: string;\n    confirmLabel: string;\n    label: string;\n    method: \"post\" | \"delete\";\n    tooltip?: string;\n    intent?: \"success\" | \"warning\" | \"danger\" | \"none\";\n\n    submitBody: () => Object;\n    onSubmit: () => void;\n    onError: (reject: any) => string;\n\n    children: React.ReactElement;\n}\n\n\nexport function TextDialog(props: ITextDialogProps) {\n    const [isShown, setShown] = useState(false);\n    const [invalid, setInvalid] = useState(false);\n    const [error, setError] = useState(\"\");\n\n    const submit = () => {\n        try {\n            const body = props.submitBody();\n            iaxios[props.method](props.submitUrl, body).then(() => {\n                setShown(false);\n                props.onSubmit();\n            }).catch((reject) => {\n                const error = props.onError(reject);\n                setInvalid(true);\n                setError(error);\n            });\n        } catch(error: any) {\n            setInvalid(true);\n            setError(error); \n        }\n\n    };\n\n    useEffect(() => {\n        setError(\"\");\n        setInvalid(false);\n    }, [isShown]);\n\n    return (\n        <>\n        <Dialog\n            isShown={isShown}\n            intent={props.intent ? props.intent :  \"none\"}\n            title={props.title}\n            onConfirm={submit}\n            onCloseComplete={() => setShown(false)}\n            confirmLabel={props.confirmLabel}>\n            <Paragraph>{props.label}</Paragraph>\n            { invalid ? <InlineAlert intent=\"danger\" marginTop={16}>{error}</InlineAlert> : \"\"}\n        </Dialog>\n        {props.tooltip? \n            <Tooltip content={props.tooltip}>\n                { cloneElement(props.children, { onClick: () => { setShown(true); } }) }\n            </Tooltip> :\n            cloneElement(props.children, { onClick: () => { setShown(true); } })\n    \n        }   \n        </>\n    );\n}\n\n\n","import { AddToArtifactIcon, Button, CubeIcon, EditIcon, MergeColumnsIcon, Pane, PresentationIcon, StyleIcon, TrashIcon } from 'evergreen-ui';\nimport { useHistory } from 'react-router-dom';\nimport { apiurl, url } from '../../url';\nimport { InputDialog, TextDialog } from '../elements/dialog';\n\n\ninterface IProjectProps {\n    name: string;\n    showProject: (name?: string) => void;\n\n}\n\nexport function ProjectActions(props: IProjectProps) {\n    const history = useHistory();\n\n    const recompile = () => {\n        history.push(url.PROJECTS);\n    }\n\n    return (\n        <Pane className=\"actions\">\n\n            <Button marginRight={12} marginBottom={12} appearance=\"minimal\" iconBefore={AddToArtifactIcon} onClick={() => history.push(url.UPLOADLAYER + props.name)}>\n                Add Layer\n            </Button>\n\n            <InputDialog\n                submitUrl={apiurl.CREATESTYLE}\n                title=\"Add Style\"\n                label={`Choose the name of the new style`}\n                confirmLabel=\"Create\"\n                method=\"post\"\n                submitBody={(name) => { return { project: props.name, name: name } }}\n                onSubmit={(style) => { history.push(url.STYLE + props.name + \"/\" + style) }}\n                onError={(reject, style) => {return \"Style already exists\"}} \n            >\n                <Button marginRight={12} marginBottom={12} appearance=\"minimal\" iconBefore={StyleIcon}>\n                    Add Style\n                </Button>\n            </InputDialog>\n\n            <TextDialog\n                submitUrl={apiurl.BUILDPROJECT}\n                title={`Recompile project ${props.name}`}\n                label={`Are you sure you want to recompile project ${props.name}?`}\n                confirmLabel=\"Recompile\"\n                method=\"post\"\n                submitBody={() => { return { name: props.name }}}\n                onSubmit={recompile}\n                onError={(reject) => {return \"Project could not be recompiled\"}} \n                tooltip=\"Publish selected layers and styles and compile data for visualization\"\n            >\n                <Button marginRight={12} marginBottom={12} appearance=\"minimal\" iconBefore={CubeIcon}>\n                    Publish 3D &amp; Styles\n                </Button>\n            </TextDialog>\n\n            <Button  marginBottom={12} appearance=\"minimal\" iconBefore={MergeColumnsIcon} onClick={() => { history.push(url.MAPPING + props.name) }}>\n                Map Layers\n            </Button>\n            <Button marginRight={12} marginBottom={12} appearance=\"minimal\" iconBefore={PresentationIcon} onClick={() => { history.push(url.VIEW + props.name) }}>\n                View\n            </Button>\n            <InputDialog\n                submitUrl={apiurl.RENAMEPROJECT}\n                title={`Rename project ${props.name}`}\n                label={`Choose a new name for project ${props.name}`}\n                confirmLabel=\"Rename\"\n                method=\"post\"\n                submitBody={(name) => { return {new: name, old: props.name} }}\n                onSubmit={props.showProject}\n                onError={(reject, name) => {return \"Project already exists\"}} \n            >\n                <Button marginRight={12} marginBottom={12} appearance=\"minimal\" iconBefore={EditIcon}>\n                    Rename\n                </Button>\n            </InputDialog>\n            <TextDialog\n                submitUrl={apiurl.DELETEPROJECT}\n                title={`Delete project ${props.name}`}\n                label={`Do you really want to delete project ${props.name}?`}\n                confirmLabel=\"Delete\"\n                method=\"delete\"\n                intent=\"danger\"\n                submitBody={() => { return { data: { name: props.name }}}}\n                onSubmit={() => { props.showProject() }}\n                onError={(reject) => {return \"Project could not be deleted\"}} \n            >\n                <Button  marginBottom={12} appearance=\"minimal\" iconBefore={TrashIcon} intent=\"danger\">\n                    Delete Project\n                </Button>\n            </TextDialog>\n\n        </Pane>\n    );\n}\n\n","import { CrossIcon, EditIcon, EmptyState, Heading, IconButton, LayersIcon, Pane, Table, TickIcon, TrashIcon } from 'evergreen-ui'\nimport { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport iaxios from '../../axios'\nimport { apiurl, url } from '../../url'\nimport { InputDialog, TextDialog } from '../elements/dialog'\nimport { EvergreenReactRouterLink } from '../elements/header'\n\n\ninterface ILayersProps {\n    name: string;\n}\n\nexport interface ILayer {\n    name: string;\n    size: number | [number, number];\n    type: string;\n    disabled: boolean;\n}\n\nexport function Layers(props: ILayersProps) {\n    const [layers, setLayers] = useState<ILayer[]>([]);\n    const history = useHistory();\n\n    const loadLayers = () => {\n        iaxios.post(apiurl.LISTLAYER, { name: props.name }).then((response) => {\n            setLayers(response.data);\n        });\n    }\n\n    useEffect(() => {\n        iaxios.post(apiurl.LISTLAYER, { name: props.name }).then((response) => {\n            setLayers(response.data);\n        })\n\n        return () => {\n            setLayers([]);\n        };\n    }, [props.name, history]);\n\n\n    const changeDisabled = (layer: ILayer) => {\n        if (layer.disabled) {\n            iaxios.post(apiurl.ENABLELAYER, { project: props.name, name: layer.name }).then(() => {\n                loadLayers();\n            });\n        } else {\n            iaxios.post(apiurl.DISABLELAYER, { project: props.name, name: layer.name }).then(() => {\n                loadLayers();\n            });\n        }\n    };\n\n\n    return (\n        <Pane className=\"section\">\n            <Pane className=\"projectHeader\">\n                <Heading className=\"wide\" is=\"h3\"> Layers</Heading>\n            </Pane>\n\n            <Table>\n                <Table.Head className=\"row\">\n                    <Table.TextHeaderCell className=\"wide\">Layer</Table.TextHeaderCell>\n                    <Table.TextHeaderCell className=\"wide\">Number of Objects</Table.TextHeaderCell>\n                    <Table.TextHeaderCell className=\"wide\">Type</Table.TextHeaderCell>\n                    <Table.TextHeaderCell className=\"narrow\">Public</Table.TextHeaderCell>\n                    <Table.TextHeaderCell className=\"narrow\">Rename</Table.TextHeaderCell>\n                    <Table.TextHeaderCell className=\"narrow\">Delete</Table.TextHeaderCell>\n                </Table.Head>\n                <Table.Body>\n                    {layers.length > 0 ? layers.map((layer) => (\n                        <Table.Row key={layer.name} paddingY={12} height=\"auto\" className=\"row\">\n                            <Table.TextCell className=\"wide\">{layer.name}</Table.TextCell>\n                            <Table.TextCell className=\"wide\">{typeof layer.size === 'number'? layer.size : `${layer.size[0]} x ${layer.size[1]}`}</Table.TextCell>\n                            <Table.TextCell className=\"wide\">{layer.type}</Table.TextCell>\n                            <Table.TextCell className=\"narrow\">\n                                {   layer.disabled ?\n                                        <IconButton icon={CrossIcon} appearance=\"minimal\" onClick={() => changeDisabled(layer)} />\n                                    :\n                                        <IconButton icon={TickIcon} intent=\"success\" appearance=\"minimal\" onClick={() => changeDisabled(layer)} />\n                                }\n                            </Table.TextCell>\n                            <Table.TextCell className=\"narrow\">\n                                <InputDialog\n                                    submitUrl={apiurl.RENAMELAYER}\n                                    title={`Rename layer ${layer.name}`}\n                                    label={`Choose a new name for layer ${layer.name}`}\n                                    confirmLabel=\"Rename\"\n                                    method=\"post\"\n                                    submitBody={(name) => { return { project: props.name, new: name, old: layer.name } }}\n                                    onSubmit={loadLayers}\n                                    onError={(reject, name) => { return \"Project already exists\" }}\n                                >\n                                    <IconButton icon={EditIcon} appearance=\"minimal\" />\n                                </InputDialog>\n                            </Table.TextCell>\n                            <Table.TextCell className=\"narrow\">\n                                <TextDialog\n                                    submitUrl={apiurl.DELETELAYER}\n                                    title={`Delete layer ${layer.name}`}\n                                    label={`Do you really want to delete layer ${layer.name}?`}\n                                    confirmLabel=\"Delete\"\n                                    method=\"delete\"\n                                    submitBody={() => { return { data: { project: props.name, name: layer.name } } }}\n                                    onSubmit={loadLayers}\n                                    onError={(reject) => { return \"Layer could not be deleted\" }}\n                                >\n                                    <IconButton icon={TrashIcon} intent=\"danger\" appearance=\"minimal\" />\n                                </TextDialog>\n                            </Table.TextCell>\n                        </Table.Row>\n                    )) :\n                        <EmptyState\n                            background=\"light\"\n                            title=\"No Layers in this Project\"\n                            orientation=\"horizontal\"\n                            icon={<LayersIcon color=\"#C1C4D6\" />}\n                            iconBgColor=\"#EDEFF5\"\n                            description=\"Layers apper after successfull processing of the input files.\"\n                            anchorCta={\n                                <EmptyState.LinkButton is={EvergreenReactRouterLink} to={url.UPLOADLAYER + props.name}>\n                                    Add first layer\n                                </EmptyState.LinkButton>\n                            }\n                        />\n                    }\n                </Table.Body>\n            </Table>\n        </Pane>\n    );\n}\n\n","import { Button, EditIcon, EmptyState, Heading, Pane, StyleIcon, TrashIcon } from 'evergreen-ui'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router'\nimport iaxios from '../../axios'\nimport { apiurl, url } from '../../url'\nimport { InputDialog, TextDialog } from '../elements/dialog'\n\ninterface IStyleListProps {\n    project: string;\n}\n\nexport function Styles(props: IStyleListProps) {\n    const [styles, setStyles] = useState<any[]>([]);\n    const history = useHistory();\n\n    const getStyles = useCallback(() => {\n        iaxios.post(apiurl.LISTSTYLES, { name: props.project }).then((response) => {\n            setStyles(response.data);\n        });\n    }, [props.project]);\n\n    useEffect(() => {\n        getStyles();\n    }, [props.project, history, getStyles]);\n\n    return (\n        <Pane className=\"styles\">\n            <Pane className=\"projectHeader\">\n                <Heading className=\"wide\" is=\"h3\">Styles</Heading> \n            </Pane>\n            <Pane className=\"styleList\">\n                {styles.length > 0 ? styles.map((style) => (\n                    <Pane key={style} className=\"styleItem\">\n                        <Pane className=\"styleTitle\" onClick={() => { history.push(url.STYLE + props.project + \"/\" + style) }}>\n                            {style}\n                        </Pane>\n                        <Pane>\n\n                        <InputDialog\n                            submitUrl={apiurl.RENAMESTYLE}\n                            title={`Rename style ${style}`}\n                            label={`Choose a new name for style ${style}`}\n                            confirmLabel=\"Rename\"\n                            method=\"post\"\n                            submitBody={(name) => { return {project: props.project, new: name, old: style } }}\n                            onSubmit={() => { getStyles() }}\n                            onError={(reject, name) => {return \"Project already exists\"}} \n                        >\n\n                            <Button marginRight={16} appearance=\"minimal\" iconBefore={EditIcon}>\n                                Rename\n                            </Button>\n\n                        </InputDialog>\n\n\n                        <TextDialog\n                            submitUrl={apiurl.DELETESTYLE}\n                            title={`Delete style ${style}`}\n                            label={`Do you really want to delete style ${style}?`}\n                            confirmLabel=\"Delete\"\n                            method=\"delete\"\n                            intent=\"danger\"\n                            submitBody={() => { return { data: { project: props.project, name: style }}}}\n                            onSubmit={() => { getStyles() }}\n                            onError={(reject) => {return \"Style could not be deleted\"}} \n                        >\n                            <Button appearance=\"minimal\" intent=\"danger\" iconBefore={TrashIcon}>\n                                Delete\n                            </Button>\n                        </TextDialog>\n\n                        </Pane>\n                    </Pane>\n                )) : \n                <EmptyState\n                    background=\"light\"\n                    title=\"No Styles in this Project\"\n                    orientation=\"vertical\"\n                    icon={<StyleIcon color=\"#C1C4D6\" />}\n                    iconBgColor=\"#EDEFF5\"\n                    description=\"Styles modify the appearance of the layer in the visualization according to the layer and object metadata\"\n                />\n                }\n            </Pane>\n        </Pane>\n    )\n}","import { Heading, Pane } from 'evergreen-ui'\nimport { ProjectActions } from './actions'\nimport { Layers } from './layers'\nimport { Styles } from './styles'\n\n\ninterface IProjectProps {\n    name: string;\n    showProject: (name?: string) => void;\n}\n\nexport function Project(props: IProjectProps) {\n\n    return ( \n        <Pane className=\"project\">\n            <Pane>\n                <Pane className=\"projectHeader main\">\n                    <Heading className=\"wide\">Project {props.name}</Heading> \n                </Pane>\n            </Pane>\n            <ProjectActions name={props.name} showProject={props.showProject}/>\n            <Layers name={props.name} />\n            <Styles project={props.name}/>\n        </Pane>\n    );\n}\n","import { Pane, Tablist, Tab, Heading, AddIcon } from 'evergreen-ui'\nimport { apiurl } from '../../url'\nimport { InputDialog } from '../elements/dialog';\n\ninterface IProjectListProps {\n    currentProject: string | undefined;\n    onSelect: (name: string) => void;\n    projects: string[];\n}\n\nexport function ProjectList(props: IProjectListProps) {\n\n  return (\n    <Pane className=\"list\">\n        <Heading className=\"projectList title\">Projects</Heading>\n\n        <InputDialog\n                submitUrl={apiurl.ADDPROJECT}\n                title=\"Add Project\"\n                label={`Choose the name of the new project`}\n                confirmLabel=\"Create\"\n                method=\"post\"\n                submitBody={(name) => { return { name: name } }}\n                onSubmit={(project) => { props.onSelect(project) }}\n                onError={(reject, style) => {return \"Project already exists\"}} \n            >\n              <Pane className=\"projectList action\"><AddIcon/>Add Project</Pane>\n          </InputDialog>\n\n        <Tablist className=\"projectList tabs\">\n        {props.projects.map((project) => (\n            <Tab\n            key={project}\n            id={`tab-${project}`}\n            onSelect={() => props.onSelect(project)}\n            isSelected={project === props.currentProject}>\n            {project}\n            </Tab>\n        ))}\n        </Tablist>\n    </Pane>\n  );\n}","import { EmptyState, Pane, ProjectsIcon } from 'evergreen-ui';\nimport { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport iaxios from '../../axios';\nimport { apiurl, url } from '../../url';\nimport { Header } from '../elements/header';\nimport { Project } from './project';\nimport { ProjectList } from './projectlist';\n\n\nexport function Projects() {\n    const { project_name } = useParams<{ project_name: string|undefined }>();\n    const [currentProject, setCurrentProject] = useState<string|undefined>(project_name);\n    const [projects, setProjects] = useState<string[]>([]);\n    const history = useHistory();\n\n    const getProjects = () => {\n        iaxios.get(apiurl.LISTPROJECT).then((response) => {\n            setProjects(response.data);\n        });\n    }\n\n    useEffect(() => {\n        getProjects();\n\n        return () => {\n            setProjects([]);\n        };\n    }, [history]);\n\n    const showProject = (name?: string) => {\n        getProjects();\n        setCurrentProject(name);\n\n        let lurl = url.PROJECTS;\n        if (name)\n            lurl += name;\n        history.push(lurl);\n    }\n\n    return (\n        <Pane>\n            <Header projects />\n            <Pane className=\"projects\">\n                <ProjectList\n                    currentProject={currentProject}\n                    onSelect={showProject}\n                    projects={projects}\n                />\n                <Pane className={`content ${currentProject ? \"\" : \"empty\"}`} justifyContent=\"center\" alignItems=\"center\">\n                    {currentProject ?\n                        (projects.indexOf(currentProject) > -1 ?    \n                            <Project\n                            name={currentProject} \n                            showProject={showProject}\n                            /> :\n                            <EmptyState\n                            background=\"light\"\n                            title={`Project ${currentProject} not found`}\n                            orientation=\"vertical\"\n                            icon={<ProjectsIcon color=\"#C1C4D6\" />}\n                            iconBgColor=\"#EDEFF5\"\n                        />                            \n                        ) :\n                        <EmptyState\n                            background=\"light\"\n                            title=\"No project selected\"\n                            orientation=\"vertical\"\n                            icon={<ProjectsIcon color=\"#C1C4D6\" />}\n                            iconBgColor=\"#EDEFF5\"\n                        />}\n                </Pane>\n            </Pane>\n        </Pane>\n    );\n}","import Editor, { Monaco } from \"@monaco-editor/react\";\nimport { Button, CodeIcon, CornerDialog, CubeIcon, Heading, Pane, Pre, ProjectsIcon, UpdatedIcon } from 'evergreen-ui';\nimport * as monaco from \"monaco-editor/esm/vs/editor/editor.api\";\nimport { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport iaxios from '../../axios';\nimport { apiurl, url } from '../../url';\nimport { TextDialog } from '../elements/dialog';\nimport { Header } from '../elements/header';\n\n\n\n\n/* eslint-disable quotes */\n\n// This config defines the editor's view.\nexport const options = {\n    lineNumbers: false,\n    scrollBeyondLastLine: false,\n    readOnly: false,\n    fontSize: 12,\n}\n\n// This config defines how the language is displayed in the editor.\nexport const languageDef = {\n    defaultToken: \"\",\n    number: /\\d+(\\.\\d+)?/,\n\n    //here is the list of all the tokens \n    //it as adressed as @keywords in the tokenizer\n    keywords: [\n        \"@layer\",\n        \"@target\",\n        \"@source\",\n        \"@meta\",\n        \"@legend\",\n    ],\n    \n    typeKeywords: [\n        \"@default\",\n        \"@color\",\n        \"@visible\",\n    ],\n\n    // we include these common regular expressions\n    //eslint-disable-next-line\n\tsymbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n\tescapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n\tdigits: /\\d+(_+\\d+)*/,\n\toctaldigits: /[0-7]+(_+[0-7]+)*/,\n\tbinarydigits: /[0-1]+(_+[0-1]+)*/,\n\thexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n\n    //eslint-disable-next-line\n\tregexpctl: /[(){}\\[\\]\\$\\^|\\-*+?\\.]/,\n    //eslint-disable-next-line\n\tregexpesc: /\\\\(?:[bBdDfnrstvwWn0\\\\\\/]|@regexpctl|c[A-Z]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})/,\n\n\n    tokenizer: {\n        root: [\n\t\t\t[/[{}]/, 'delimiter.bracket'],\n\t\t\t{ include: 'common' }\n\t\t],\n\n\t\tcommon: [\n\t\t\t// identifiers and keywords\n\t\t\t[/@[a-z_$][\\w$]*/, {\n\t\t\t\tcases: {\n\t\t\t\t\t'@typeKeywords': 'keyword',\n\t\t\t\t\t'@keywords': 'type.identifier',\n\t\t\t\t\t'@default': 'identifier'\n\t\t\t\t}\n\t\t\t}],\n\t\t\t//[/[A-Z][\\w\\$]*/, 'type.identifier'],  // to show class names nicely\n\t\t\t// [/[A-Z][\\w\\$]*/, 'identifier'],\n\n\t\t\t// whitespace\n\t\t\t{ include: '@whitespace' },\n\n\t\t\t// regular expression: ensure it is terminated before beginning (otherwise it is an opeator)\n\t\t\t//eslint-disable-next-line\n            [/\\/(?=([^\\\\\\/]|\\\\.)+\\/([gimsuy]*)(\\s*)(\\.|;|\\/|,|\\)|\\]|\\}|$))/, { token: 'regexp', bracket: '@open', next: '@regexp' }],\n\n\t\t\t// delimiters and operators\n            //eslint-disable-next-line\n\t\t\t[/[()\\[\\]]/, '@brackets'],\n\t\t\t[/[<>](?!@symbols)/, '@brackets'],\n\t\t\t[/@symbols/, {\n\t\t\t\tcases: {\n\t\t\t\t\t'@default': ''\n\t\t\t\t}\n\t\t\t}],\n\n\t\t\t// numbers\n            //eslint-disable-next-line\n\t\t\t[/(@digits)[eE]([\\-+]?(@digits))?/, 'number.float'],\n            //eslint-disable-next-line\n\t\t\t[/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?/, 'number.float'],\n\t\t\t[/0[xX](@hexdigits)/, 'number.hex'],\n\t\t\t[/#(@hexdigits)/, 'number.hex'],\n\t\t\t[/0[oO]?(@octaldigits)/, 'number.octal'],\n\t\t\t[/0[bB](@binarydigits)/, 'number.binary'],\n\t\t\t[/(@digits)/, 'number'],\n\n\t\t\t// delimiter: after number because of .\\d floats\n\t\t\t[/[;,.]/, 'delimiter'],\n\n\t\t\t// strings\n\t\t\t[/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],  // non-teminated string\n\t\t\t[/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],  // non-teminated string\n\t\t\t[/\"/, 'string', '@string_double'],\n\t\t\t[/'/, 'string', '@string_single'],\n\t\t\t[/`/, 'string', '@string_backtick'],\n\t\t],\n\n\t\twhitespace: [\n\t\t\t[/[ \\t\\r\\n]+/, ''],\n\t\t],\n\n\n\t\t// We match regular expression quite precisely\n\t\tregexp: [\n            //eslint-disable-next-line\n\t\t\t[/(\\{)(\\d+(?:,\\d*)?)(\\})/, ['regexp.escape.control', 'regexp.escape.control', 'regexp.escape.control']],\n\t\t\t//eslint-disable-next-line\n            [/(\\[)(\\^?)(?=(?:[^\\]\\\\\\/]|\\\\.)+)/, ['regexp.escape.control', { token: 'regexp.escape.control', next: '@regexrange' }]],\n\t\t\t[/(\\()(\\?:|\\?=|\\?!)/, ['regexp.escape.control', 'regexp.escape.control']],\n\t\t\t[/[()]/, 'regexp.escape.control'],\n\t\t\t[/@regexpctl/, 'regexp.escape.control'],\n\t\t\t//eslint-disable-next-line\n            [/[^\\\\\\/]/, 'regexp'],\n\t\t\t[/@regexpesc/, 'regexp.escape'],\n\t\t\t[/\\\\\\./, 'regexp.invalid'],\n\t\t\t[/(\\/)([gimsuy]*)/, [{ token: 'regexp', bracket: '@close', next: '@pop' }, 'keyword.other']],\n\t\t],\n\n\t\tregexrange: [\n\t\t\t[/-/, 'regexp.escape.control'],\n\t\t\t[/\\^/, 'regexp.invalid'],\n\t\t\t[/@regexpesc/, 'regexp.escape'],\n\t\t\t[/[^\\]]/, 'regexp'],\n\t\t\t[/\\]/, { token: 'regexp.escape.control', next: '@pop', bracket: '@close' }],\n\t\t],\n\n\t\tstring_double: [\n\t\t\t[/[^\\\\\"]+/, 'string'],\n\t\t\t[/@escapes/, 'string.escape'],\n\t\t\t[/\\\\./, 'string.escape.invalid'],\n\t\t\t[/\"/, 'string', '@pop']\n\t\t],\n\n\t\tstring_single: [\n\t\t\t[/[^\\\\']+/, 'string'],\n\t\t\t[/@escapes/, 'string.escape'],\n\t\t\t[/\\\\./, 'string.escape.invalid'],\n\t\t\t[/'/, 'string', '@pop']\n\t\t],\n\n\t\tstring_backtick: [\n\t\t\t[/\\$\\{/, { token: 'delimiter.bracket', next: '@bracketCounting' }],\n\t\t\t[/[^\\\\`$]+/, 'string'],\n\t\t\t[/@escapes/, 'string.escape'],\n\t\t\t[/\\\\./, 'string.escape.invalid'],\n\t\t\t[/`/, 'string', '@pop']\n\t\t],\n\n\t\tbracketCounting: [\n\t\t\t[/\\{/, 'delimiter.bracket', '@bracketCounting'],\n\t\t\t[/\\}/, 'delimiter.bracket', '@pop'],\n\t\t\t{ include: 'common' }\n\t\t],\n    },\n}\n\n// This config defines the editor's behavior.\nexport const configuration = {\n    brackets: [\n        [\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"],\n    ],\n}\n\ninterface IStyle {\n    name: string;\n    style: string;\n}\n\nfunction createDependencyProposals(range: any) {\n    // returning a static list of proposals, not even looking at the prefix (filtering is done by the Monaco editor),\n    // here you could do a server side lookup\n    return [\n        {\n            label: 'Layer class',\n            kind: monaco.languages.CompletionItemKind.Class,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            documentation: \"Layer style class\",\n            //eslint-disable-next-line\n            insertText: 'layer (${1:layer-key}) {\\n    ${2:@properties}\\n}',\n            range: range\n        },\n        {\n            label: 'Target styles',\n            kind: monaco.languages.CompletionItemKind.Class,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            documentation: \"Styles based on metadata of the overlay source layer\",\n            //eslint-disable-next-line\n            insertText: 'target {\\n    ${1:value}\\n}',\n            range: range\n        },\n        {\n            label: 'Source styles',\n            kind: monaco.languages.CompletionItemKind.Class,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            documentation: \"Styles based on metadata of the overlay target layer\",\n            //eslint-disable-next-line\n            insertText: 'source {\\n    ${1:value}\\n}',\n            range: range\n        },\n        {\n            label: 'Meta class',\n            kind: monaco.languages.CompletionItemKind.Class,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            documentation: \"Styles based on metadata of the layer\",\n            //eslint-disable-next-line\n            insertText: 'meta (${1:identifier}) {\\n    ${2:value}\\n}',\n            range: range\n        },\n        {\n            label: 'Legend class',\n            kind: monaco.languages.CompletionItemKind.Class,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            documentation: \"Legend - description of the used colors\",\n            //eslint-disable-next-line\n            insertText: 'legend {\\n    ${1:value}\\n}',\n            range: range\n        },\n        {\n            label: 'Color value',\n            kind: monaco.languages.CompletionItemKind.Value,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            documentation: \"Color style class\",\n            //eslint-disable-next-line\n            insertText: 'color: #${1:color};',\n            range: range\n        },\n        {\n            label: 'Visibility value',\n            kind: monaco.languages.CompletionItemKind.Value,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            documentation: \"Visibility style class\",\n            //eslint-disable-next-line\n            insertText: 'visible: ${1:boolean};',\n            range: range\n        },\n        {\n            label: 'Default value',\n            kind: monaco.languages.CompletionItemKind.Value,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            documentation: \"Default style class\",\n            //eslint-disable-next-line\n            insertText: 'default: ${1:value};',\n            range: range\n        },\n    ];\n}\n\nconst headingSpace = /^(\\s*)/;\nconst trailingSpace = /(\\s*)$/;\n//eslint-disable-next-line\nconst nothing = /(\\s*|$)/;\n//eslint-disable-next-line\nconst key = /\\(([^)]+)\\)/;\nconst proptag = /@[a-zA-Z]+/;\n\n\nconst matchTag = new RegExp(headingSpace.source + proptag.source + trailingSpace.source, 'mg');\n\n\nexport function StyleEditor() {\n    const { project_name, style_name } = useParams<{ project_name: string, style_name: string }>();\n    const history = useHistory();\n\n    const beforMountEditor = (monaco: Monaco) => {\n        if (!monaco.languages.getLanguages().some(({ id }) => id === 'estimatemd')) {\n            // Register a new language\n            monaco.languages.register({ id: 'estimatemd' })\n            // Register a tokens provider for the language\n            monaco.languages.setMonarchTokensProvider('estimatemd', languageDef as any)\n            // Set the editing configuration for the language\n            monaco.languages.setLanguageConfiguration('estimatemd', configuration as any)\n\n            monaco.languages.registerCompletionItemProvider('estimatemd', {\n                provideCompletionItems: function (model, position) {\n\n                    var textUntilPosition = model.getValueInRange({ startLineNumber: 0, startColumn: 0, endLineNumber: position.lineNumber, endColumn: position.column });\n                    var match = textUntilPosition.match(matchTag);\n\n                    if (!match) {\n                        return { suggestions: [] };\n                    }\n\n                    var word = model.getWordUntilPosition(position);\n\n                    var range = {\n                        startLineNumber: position.lineNumber,\n                        endLineNumber: position.lineNumber,\n                        startColumn: word.startColumn,\n                        endColumn: word.endColumn\n                    };\n\n                    return {\n                        suggestions: createDependencyProposals(range)\n                    };\n                }\n            });\n        }\n    }\n\n    \n    const [editor, setEditor] = useState<monaco.editor.IStandaloneCodeEditor|undefined>(undefined)\n    \n    useEffect(() => {\n        if(!editor)\n            return;\n        \n        iaxios.post(apiurl.GETSTYLE, { project: project_name, name: style_name }).then((response) => {\n            const data: IStyle = response.data;\n            editor.setValue(data.style);\n        }).catch((reject) => {\n            console.error(reject);\n        });\n\n    }, [editor, project_name, style_name]);\n\n    const [isParsedShown, setParsedIsShown] = useState(false);\n    const [parsed, setParsed] = useState(\"\");\n\n    const parse = () => {\n        if(!editor)\n            return;\n\n        const style = editor.getValue();\n        iaxios.post(apiurl.PARSESTYLE, { project: project_name, name: style_name, styles: style }).then((response) => {\n            if (response.data.status === \"error\")\n            {\n                setParsed(response.data.error);\n                setParsedIsShown(true);\n            } else {\n                setParsed(\"Style parsed successfuly\");\n                setParsedIsShown(true);\n            }\n        }).catch((reject) => {\n            console.error(reject);\n        });        \n    }\n\n\n    return (\n        <Pane>\n            <Header projects />\n            <Pane className=\"stylesHeader\">\n                <Heading className=\"wide\">Style {style_name}</Heading>\n                <Button marginRight={12} appearance=\"minimal\" iconBefore={ProjectsIcon} onClick={() => { history.push(url.PROJECTS + project_name) }}>\n                    Back to Project {project_name}\n                </Button>\n                <CornerDialog\n                    title=\"Style Parsed\"\n                    hasCancel={false}\n                    hasFooter={false}\n                    width=\"auto\"\n                    isShown={isParsedShown}\n                    onCloseComplete={() => setParsedIsShown(false)}\n                >\n                <Pre className=\"parsedMessage\">{parsed}</Pre>\n                </CornerDialog>\n                <Button marginRight={12} appearance=\"minimal\" iconBefore={CodeIcon} onClick={parse}>\n                    Parse\n                </Button>\n                <TextDialog\n                    submitUrl={apiurl.UPDATESTYLE}\n                    title={`Save style ${style_name}`}\n                    label={`Are you sure you want to save style ${style_name}? Your previously compiled styles will be overwriten.`}\n                    confirmLabel=\"Overwrite\"\n                    method=\"post\"\n                    submitBody={() => { \n                        if (!editor)\n                            throw new Error('Error occured while saving the style.'); \n\n                        return { project: project_name, name: style_name, styles: editor.getValue()} \n                    }}\n                    onSubmit={() => {\n                        console.log(`Style ${style_name} saved`);\n                    }}\n\n                    onError={(reject) => {return \"Style could not be saved\"}} \n                    tooltip=\"Saves the new configuration and overwrites previously saved styles.\"\n                >\n                    <Button marginRight={12} appearance=\"minimal\" iconBefore={UpdatedIcon}>\n                        Save\n                    </Button>\n                </TextDialog>\n                <TextDialog\n                    submitUrl={apiurl.UPDATESTYLE}\n                    title={`Apply style ${style_name}`}\n                    label={`Are you sure you want to recompile style ${style_name}?  Your previously compiled styles will be overwriten.`}\n                    confirmLabel=\"Compile\"\n                    method=\"post\"\n                    submitBody={() => { \n                        if (!editor)\n                            throw new Error('Error occured while saving the style.'); \n\n                        return { project: project_name, name: style_name, styles: editor.getValue()} \n                    }}\n                    onSubmit={() => {\n                        iaxios.post(apiurl.APPLYSTYLE, { project: project_name, name: style_name }).then((response) => {\n                            toast('Compilation job submitted');\n                        }).catch((reject) => {\n                            toast('Job could not be submitted');\n                        })\n                    }}\n                    onError={(reject) => {return \"Style could not be recompiled\"}} \n                    tooltip=\"Recompile styles after updating to view the changes in the visualization\"\n                >\n                    <Button appearance=\"minimal\" iconBefore={CubeIcon}>\n                        Save and Compile\n                    </Button>\n                </TextDialog>\n            </Pane>\n\n            <Pane className=\"styleView\">\n                <Editor\n                    beforeMount={beforMountEditor}\n                    onMount={(editor, monaco) => {\n                        setEditor(editor);\n                    }}\n                    className=\"editor\"\n                    height=\"100%\"\n                    defaultLanguage=\"estimatemd\"\n                />\n            </Pane>\n        </Pane>\n    )\n}\n","import { Button, Heading, Icon, LayersIcon, Pane, Spinner, Text, TextInput } from 'evergreen-ui';\nimport { createRef, FormEvent, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport iaxios from '../../axios';\nimport { apiurl, url } from '../../url';\nimport { Header } from '../elements/header';\n\n\ninterface IDropzone {\n    submit: (layer_name: string, files: File[]) => void;\n};\n\nfunction Dropzone(props: IDropzone) {\n    const { acceptedFiles, getRootProps, getInputProps } = useDropzone();\n    const name = createRef<HTMLInputElement>();\n\n    const files = acceptedFiles.map(file => (\n        <li key={file.name}>\n            <span className=\"fileName\">{file.name}</span><span className=\"fileSize\">{file.size} bytes</span>\n        </li>\n    ));\n\n    const submit = (event: FormEvent) => {\n        event.preventDefault();\n        props.submit(name.current!.value, acceptedFiles);\n    }\n\n    return (\n        <Pane className=\"dropzoneContainer\">\n            <form onSubmit={submit} id=\"layerUploadForm\">\n                <TextInput placeholder=\"layer name\" ref={name} className=\"layerName\" />\n                <div {...getRootProps({ className: \"dropzone\" })}>\n                    <input {...getInputProps()} />\n                    <p>Click or drag 'n' drop layer files here</p>\n                    <ul className=\"filelist\">{files}</ul>\n                </div>\n            </form>\n            <Button appearance=\"primary\" type=\"submit\" form=\"layerUploadForm\">\n                Upload\n            </Button>\n        </Pane>\n    );\n}\n\n\n\nexport function UploadLayer() {\n    const { project_name } = useParams<{ project_name: string }>();\n    const history = useHistory();\n\n    const [progress, setProgress] = useState<number>(0);\n    const [uploading, setUploading] = useState<boolean>(false);\n\n    const submit = (layer_name: string, files: File[]) => {\n        if (uploading)\n            return;\n\n        if (layer_name === undefined || layer_name.length === 0)\n        {\n            toast('No name specified');\n            return;\n        }\n\n        if (files === undefined || files.length === 0)\n        {\n            toast('No files provided');\n            return;\n        }\n\n        setUploading(true);\n\n        let formData = new FormData();\n        formData.append(\"project\", project_name);\n        formData.append(\"layer\", layer_name);\n        files.forEach(dataset => {\n            formData.append(\"files\", dataset)\n        });\n\n        iaxios.post(apiurl.ADDLAYER, formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            },\n            onUploadProgress: progressEvent => setProgress(progressEvent.loaded / progressEvent.total * 100)\n        }).then((response) => {\n            history.push(url.PROJECTS);\n        })\n    }\n\n\n    return (\n        <Pane>\n            <Header projects />\n            <Pane className=\"upload\">\n                { uploading ?\n                    <Spinner/>\n                    :\n                    <Icon icon={LayersIcon} size={30} color=\"#C1C4D6\" background=\"#EDEFF5\" className=\"uploadIcon\" padding={20} borderRadius={40} />\n                }\n                <Heading className=\"uploadTitle\">Uploading Layer to Project {project_name}</Heading>\n                { uploading ?\n                    <Pane className=\"progress\">\n                        <Text className=\"label\">{progress.toFixed(0)}%</Text>\n                    </Pane> \n                    :\n                    <Dropzone submit={submit} />\n                }\n            </Pane>\n\n        </Pane>\n    );\n}","\n\nexport function buildWorker(worker: any) {\n    const code = worker.toString();\n    const blob = new Blob([`(${code})()`]);\n    return new Worker(URL.createObjectURL(blob));\n}\n\n\nexport enum DecoderQueryType {\n    float32 = 0,\n    int32 = 1,\n    uint8 = 2\n}\n\n//eslint-disable-next-line\n//let self: Worker;\n\nexport const Decoder = () => {\n    const base64tofloat32 = (data: string) => {\n        const s = atob(data);\n        const buffer = new Float32Array(Uint8Array.from(s, c => c.charCodeAt(0)).buffer);\n        return buffer;\n    }\n\n    const base64toint32 = (data: string, offset: number) => {\n        const s = atob(data);\n        const buffer = new Int32Array(Uint8Array.from(s, c => c.charCodeAt(0)).buffer);\n        buffer.forEach((value, index) => buffer[index] = value + offset);\n        return new Uint8Array(buffer.buffer);\n    }\n\n    const base64touint8 = (data: string) => {\n        const s = atob(data);\n        const buffer = Uint8Array.from(s, c => c.charCodeAt(0));\n        return buffer;\n    }\n\n    //eslint-disable-next-line no-restricted-globals\n    self.onmessage = (message: MessageEvent) => {\n        const data = message.data;\n        const response: any = {\n            jobID: data.jobID,\n            resID: data.resID\n        };\n\n        switch (data.data.datatype) {\n            case 0:\n                response.buffer = base64tofloat32(data.data.buffer) as any;\n                break;\n            case 1:\n                response.buffer = base64toint32(data.data.buffer, data.data.offset) as any;\n                break;\n            case 2:\n                response.buffer = base64touint8(data.data.buffer) as any;\n                break;\n        }\n\n        postMessage(response);\n    }\n}\n\nconst POOLSIZE = 20;\n\ninterface Job {\n    data: any,\n    jobID: number,\n    resID: number\n}\n\ninterface Result {\n    data: any[];\n    recieved: number;\n    expected: number;\n    callback: CallableFunction\n}\n\nexport class Decoders {\n    private static _instance: Decoders;\n    private workers: Worker[];\n    private worker_busy: boolean[];\n    private queue: Job[];\n    private jobIDs: number;\n    private resultMap: Map<number, Result>;\n    \n    private constructor()\n    {\n        this.workers = [];\n        this.worker_busy = [];\n        this.jobIDs = 0;\n        this.resultMap = new Map();\n\n        for(let i = 0; i < POOLSIZE; ++i)\n        {\n            this.workers.push(buildWorker(Decoder));\n            this.worker_busy.push(false);\n\n            this.workers[i].onmessage = (message) => {\n                const {data} = message;\n                const {buffer, jobID, resID} = data;\n\n                const res = this.resultMap.get(jobID);\n                if (!res) \n                    return;\n                res.data[resID] = buffer;\n                res.recieved++;\n                \n                if (res.recieved === res.expected)\n                {\n                    res.callback(...res.data);\n                    this.resultMap.delete(jobID);\n                }\n\n                this.worker_busy[i] = false;\n                this.submit();\n            }\n        }\n        this.queue = [];\n    }\n\n    public static get Instance()\n    {\n        return this._instance || (this._instance = new this());\n    }\n\n    private get worker() {\n        for (let i = 0; i < POOLSIZE; ++i) {\n            if (!this.worker_busy[i])\n                return i;\n        }\n        return undefined;\n    }\n\n    process(data: any[], callback: (...output: any[]) => void) \n    {\n        const jobID = this.jobIDs++;\n        this.resultMap.set(jobID, {\n            data: Array.apply(null, Array(data.length)).map(function () { return undefined; }),\n            recieved: 0,\n            expected: data.length,\n            callback: callback\n        });\n\n        for(let i = 0; i < data.length; ++i)\n            this.queue.push({data: data[i], jobID: jobID, resID: i})\n\n        this.submit();\n    }\n\n    private submit() {\n        const i = this.worker;\n        if (i === undefined)\n            return;\n        \n        const job = this.queue.shift();\n        if (!job)\n            return;\n\n        this.worker_busy[i] = true;\n        this.workers[i].postMessage(job);\n    }\n}\n","import { ILayerStyle } from \"../types\";\nimport { DecoderQueryType, Decoders } from \"../utils/workers\";\n\n\nexport class LayerStyle {\n    styles: ILayerStyle;\n\n    constructor(styles?: ILayerStyle, callback: (style: LayerStyle) => void = () => {}) {\n        this.styles = styles || {};\n\n        if (this.styles.buffer) {\n            Decoders.Instance.process(\n                [{\n                    datatype: DecoderQueryType.uint8,\n                    buffer: this.styles.buffer\n                }], (buffer: Uint8Array) => {\n                    this.styles.buffer = buffer;\n                    callback(this);\n                });\n        }\n\n        if (this.styles.buffer_source && this.styles.buffer_target) {\n            Decoders.Instance.process(\n                [{\n                    datatype: DecoderQueryType.uint8,\n                    buffer: this.styles.buffer_source\n                }, {\n                    datatype: DecoderQueryType.uint8,\n                    buffer: this.styles.buffer_target\n                }], (sbuffer: Uint8Array, tbuffer: Uint8Array) => {\n                    this.styles.buffer_source = sbuffer;\n                    this.styles.buffer_target = tbuffer;\n                    callback(this);\n                });\n        }\n    }\n\n    get pickable() {\n        if (this.styles.pickable) {\n            return this.styles.pickable;\n        }\n        return true;\n    }\n\n    get visible() {\n        if (this.styles.visible) {\n            return this.styles.visible;\n        }\n        return true;\n    }\n\n    get color_buffer() {\n        if (this.styles.buffer)\n            return this.styles.buffer as Uint8Array;\n        throw new Error(\"No colors defined\");\n    }\n\n    get color_buffer_target() {\n        if (this.styles.buffer_target) \n            return this.styles.buffer_target as Uint8Array;\n        throw new Error(\"No target colors defined\");\n    }\n\n    get color_buffer_source() {\n        if (this.styles.buffer_source) \n            return this.styles.buffer_source as Uint8Array;\n        throw new Error(\"No source colors defined\");\n    }\n}\n\n\n\n\nexport function color(oid_offset: number, oids: Uint8Array, buffer: Uint8Array, outputbuffer: any, callback: CallableFunction) {\n    let c = {\n        i: 0,\n        ci: 0,\n        it: 1,\n        total_stop: oids.length / Uint32Array.BYTES_PER_ELEMENT,\n        view: new DataView(oids.buffer)\n    };\n\n\n    const iteration = () => {\n        const itStep = 100000;\n        const step_stop = c.it * itStep;\n        const stop = Math.min(step_stop, c.total_stop);\n\n        let oid;\n        for (; c.i < stop; c.i++) {\n            oid = (c.view.getUint32(c.i * Uint32Array.BYTES_PER_ELEMENT, true) - oid_offset) * 3;\n            outputbuffer[c.ci++] = buffer[oid];\n            outputbuffer[c.ci++] = buffer[oid + 1];\n            outputbuffer[c.ci++] = buffer[oid + 2];\n        }\n\n        if (c.i < c.total_stop) {\n            c.it++;\n            setTimeout(iteration, 4);\n        } else {\n            callback();\n            c = null as any;\n        }\n\n    }\n\n    setTimeout(iteration, 4);\n}\n\nexport function color_default(oid_length: number, outputbuffer: any, callback: CallableFunction) {    \n    let c = {\n        i: 0,\n        ci: 0,\n        it: 1,\n        total_stop: oid_length\n    };\n    \n    const iteration = () => {\n        const itStep = 100000;\n        const step_stop = c.it * itStep * Uint8Array.BYTES_PER_ELEMENT;\n        const stop = Math.min(step_stop, c.total_stop);\n\n        for (; c.i < stop; c.i++) {\n            outputbuffer[c.ci++] = 255;\n            outputbuffer[c.ci++] = 255;\n            outputbuffer[c.ci++] = 255;\n        }\n\n        if (c.i < c.total_stop) {\n            c.it++;\n            setTimeout(iteration, 4);\n        } else {\n            callback();\n            c = null as any;\n        }\n    }\n\n    setTimeout(iteration, 4);\n}","\n\n\nexport function getNthTriangularNumber(n: number) {\n    return (n * (n + 1)) / 2;\n}\n\n\nexport function toSpiral(x: number, y: number) {\n    let level = Math.max(Math.abs(x), Math.abs(y))\n\n    if (x === 0 && y === 0) {\n        return 0\n    }\n\n    let base = getNthTriangularNumber(level - 1) * 8;\n\n    if ((x > Math.abs(y)) || (x === y && x > 0)) {\n        return base + level + y;\n    } else if (((y > Math.abs(x)) || (y === -x)) && (y > 0)) {\n        return base + (level * 4) - (level) - x;\n    } else if ((x < y) || ((x === y) && (x < 0))) {\n        return base + (level * 5) - y;\n    } else if ((y < x) || ((-y === x) && (y < 0))) {\n        return base + (level * 7) + x;\n    }\n    throw new Error(\"Cannot covert to 1D\");\n}\n","import { Renderer } from \"../renderer/renderer\"\nimport * as THREE from \"three\";\nimport { color, color_default, LayerStyle } from \"../renderer/style\";\n\n\nexport enum OIDType {\n    source,\n    target,\n    object\n}\n\nexport class Model {\n    renderer: Renderer;\n    mesh?: THREE.Mesh;\n    pickingMesh?: THREE.Mesh;\n    private visibility: boolean;\n\n    constructor(renderer: Renderer) {\n        this.renderer = renderer;\n        this.visibility = true;\n    }\n\n    set visible(v: boolean) {\n        this.visibility = v;\n        if (this.mesh) {\n            this.mesh.visible = v;\n        }\n        if (this.pickingMesh) {\n            this.pickingMesh.visible = v;\n        }\n    }\n\n    remove() {\n        this.mesh = this.removeFrom(this.mesh, this.renderer.scene);\n        this.pickingMesh = this.removeFrom(this.pickingMesh, this.renderer.pickingScene);\n    }\n\n    removeFrom(mesh: THREE.Mesh | THREE.LineSegments | undefined, scene: THREE.Scene) {\n        if (mesh) {\n            scene.remove(mesh);\n            mesh.geometry.dispose();\n        }\n        return undefined;\n    }\n\n    baseColors(threeVertLength: number) {\n        const colors = new Uint8Array(threeVertLength);\n        for (let i = 0; i < threeVertLength; i++)\n            colors[i] = 255;\n        return colors;\n    }\n\n    afterApplyStyle() {\n        this.renderer.status.actions.applyingStyles.stop();\n        if (this.mesh)\n        {\n            this.mesh.geometry.attributes.color.needsUpdate = true;\n            this.renderer.changed = true;\n        }\n    }\n\n    applyStyle(offset: number, style?: LayerStyle, type?: OIDType) {\n        if (!this.mesh || !this.mesh.geometry.attributes.objectID)\n            return;\n\n        this.renderer.status.actions.applyingStyles.start();\n        const oids = this.mesh.geometry.attributes.objectID.array;\n        const out = this.mesh.geometry.attributes.color.array;\n\n        if (style) {\n            color(offset, oids as Uint8Array, style.color_buffer, out, this.afterApplyStyle.bind(this));\n        } else {\n            color_default(oids.length, out, this.afterApplyStyle.bind(this));\n        }\n    }\n\n}\n\nexport class ModelProxy extends Model {\n    applyStyle(offset: number, style?: LayerStyle, type: OIDType = OIDType.source) {\n        if (!this.mesh || !this.mesh.geometry.attributes.objectID)\n            return;\n\n        this.renderer.status.actions.applyingStyles.start();\n        const oids = this.mesh.geometry.attributes.objectID.array;\n        const out = this.mesh.geometry.attributes.color.array;\n\n        if (style) {\n            if (type === OIDType.source)\n                color(offset, oids as Uint8Array, style.color_buffer_source, out, this.afterApplyStyle.bind(this))\n            else\n                color(offset, oids as Uint8Array, style.color_buffer_target, out, this.afterApplyStyle.bind(this))\n        } else {\n            color_default(oids.length, out, this.afterApplyStyle.bind(this));\n        }\n    }\n}\n\n","import { IModel } from \"../types\";\nimport * as THREE from \"three\";\n//import { Decoder } from \"../utils/decoder\";\nimport { Tile } from \"../datamodel/tile\";\nimport { Model, ModelProxy } from \"./base\";\nimport { Overlay } from \"../datamodel/layer\";\nimport { Decoders, DecoderQueryType } from \"../utils/workers\";\n\n\n\nexport class PolygonalModel extends Model {\n    constructor(data: IModel, tile: Tile, callback: CallableFunction, abort: CallableFunction) {\n        super(tile.renderer);\n        const offset = tile.renderer.picker.offsetForLayer(tile.layer.name);\n\n        Decoders.Instance.process(\n            [{\n                datatype: DecoderQueryType.float32,\n                buffer: data.vertices\n            }, {\n                datatype: DecoderQueryType.int32,\n                buffer: data.attributes.oid.data,\n                offset: offset\n            }], (vertices: Float32Array, objectid: Uint8Array) => {\n                this.init(vertices, objectid, tile);\n                callback(this);\n            });\n    }\n\n    private init(vertices: Float32Array, objectid: Uint8Array, tile: Tile) {\n        const geometry = this.createGeometry(vertices, objectid);\n        this.createMesh(geometry);\n        this.createPickingMesh(geometry);\n        this.visible = tile.visible;\n        this.renderer.changed = true;\n    }\n\n\n    private createPickingMesh(geometry: THREE.BufferGeometry) {\n        const pickingMesh = new THREE.Mesh(geometry, this.renderer.matlib.pickingPolygonMaterial);\n        this.renderer.pickingScene.add(pickingMesh);\n        this.pickingMesh = pickingMesh;\n    }\n\n    private createMesh(geometry: THREE.BufferGeometry) {\n        const material = this.renderer.matlib.polygonMaterial;\n        const mesh = new THREE.Mesh(geometry, material);\n        mesh.receiveShadow = true;\n        mesh.castShadow = true;\n        this.renderer.scene.add(mesh);\n        this.mesh = mesh;\n    }\n\n    private createGeometry(vertices: Float32Array, objectid: Uint8Array) {\n        const geometry = new THREE.BufferGeometry();\n        geometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n        geometry.setAttribute('objectID', new THREE.BufferAttribute(objectid, 4, true));\n        geometry.setAttribute('color', new THREE.BufferAttribute(this.baseColors(vertices.length), 3, true));\n        geometry.computeVertexNormals();\n        return geometry;\n    }\n}\n\n\nexport class PolygonalProxyModel extends ModelProxy {\n    constructor(data: IModel, tile: Tile, callback: CallableFunction, abort: CallableFunction) {\n        super(tile.renderer);\n        const offset_source = tile.renderer.picker.offsetForLayer((tile.layer as Overlay).source);\n        //const offset_target = tile.renderer.picker.offsetForLayer((tile.layer as Overlay).target);\n\n        Decoders.Instance.process([{\n                datatype: DecoderQueryType.float32,\n                buffer: data.vertices\n            }, {\n                datatype: DecoderQueryType.int32,\n                buffer: data.attributes.source_oid.data,\n                offset: offset_source\n            }], (vertices: Float32Array, objectid: Uint8Array) => {\n                this.init(vertices, objectid, tile);\n                callback(this);\n            });\n    }\n\n    private init(vertices: Float32Array, objectid: Uint8Array, tile: Tile) {\n        const geometry = this.createGeometry(vertices, objectid);\n        this.createMesh(geometry);\n        this.createPickingMesh(geometry);\n        this.visible = tile.visible;\n        this.renderer.changed = true;\n    }\n\n\n    private createPickingMesh(geometry: THREE.BufferGeometry) {\n        const pickingMesh = new THREE.Mesh(geometry, this.renderer.matlib.pickingPolygonMaterial);\n        this.renderer.pickingScene.add(pickingMesh);\n        this.pickingMesh = pickingMesh;\n    }\n\n    private createMesh(geometry: THREE.BufferGeometry) {\n        const material = this.renderer.matlib.polygonMaterial;\n        const mesh = new THREE.Mesh(geometry, material);\n        mesh.receiveShadow = true;\n        mesh.castShadow = true;\n        this.renderer.scene.add(mesh);\n        this.mesh = mesh;\n    }\n\n    private createGeometry(vertices: Float32Array, objectid: Uint8Array) {\n        const geometry = new THREE.BufferGeometry();\n        geometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n        geometry.setAttribute('objectID', new THREE.BufferAttribute(objectid, 4, true));\n        geometry.setAttribute('color', new THREE.BufferAttribute(this.baseColors(vertices.length), 3, true));\n        geometry.computeVertexNormals();\n        return geometry;\n    }\n}","\n\nfunction capLeft(resolution: number) {\n    let vertices = [];\n    const shift = Math.PI / 2;\n    const step = Math.PI / resolution;\n\n    for (let i = 0; i < resolution; ++i) {\n        vertices.push(0, 0, 0);\n        vertices.push(Math.cos(shift + step * i), Math.sin(shift + step * i), 0);\n        vertices.push(Math.cos(shift + step * (i + 1)), Math.sin(shift + step * (i + 1)), 0);\n\n    }\n\n    return vertices\n}\n\nfunction capRight(resolution: number) {\n    let vertices = [];\n    const shift = Math.PI / 2;\n    const step = Math.PI / resolution;\n\n    for (let i = 0; i < resolution; ++i) {\n        vertices.push(1, 0, 0);\n        vertices.push(1 - Math.cos(shift + step * i), Math.sin(shift + step * i), 0);\n        vertices.push(1 - Math.cos(shift + step * (i + 1)), Math.sin(shift + step * (i + 1)), 0);\n    }\n\n    return vertices;\n}\n\nexport function segment(resolution: number = 5) {\n    let geometry = [\n        0, -1, 0,\n        1, -1, 0,\n        1, 1, 0,\n        0, -1, 0,\n        1, 1, 0,\n        0, 1, 0\n    ];\n\n    geometry = geometry.concat(capLeft(resolution));\n    geometry = geometry.concat(capRight(resolution));\n    return geometry;\n}\n","import { IModel } from \"../types\";\nimport * as THREE from \"three\";\n//import { Decoder } from \"../utils/decoder\";\nimport { Decoders, DecoderQueryType } from \"../utils/workers\";\nimport { segment } from \"./geometry\";\nimport { Tile } from \"../datamodel/tile\";\nimport { Model, ModelProxy } from \"./base\";\nimport { Overlay } from \"../datamodel/layer\";\n\n\nexport class LineModel extends Model {\n    constructor(data: IModel, tile: Tile, callback: CallableFunction, abort: CallableFunction) {\n        super(tile.renderer);\n        const offset = tile.renderer.picker.offsetForLayer(tile.layer.name);\n\n        Decoders.Instance.process([{\n                datatype: DecoderQueryType.float32,\n                buffer: data.vertices\n            }, {\n                datatype: DecoderQueryType.int32,\n                buffer: data.attributes.oid.data,\n                offset: offset\n            }], (vertices: Float32Array, objectid: Uint8Array) => {\n                this.init(vertices, objectid, tile);\n                callback(this);\n            });\n    }\n\n    private init(vertices: Float32Array, objectid: Uint8Array, tile: Tile) {\n        const geometry = this.createGeometry(vertices, objectid); //offset\n        this.createMesh(geometry);\n        this.createPickingMesh(geometry);\n\n        this.visible = tile.visible;\n        this.renderer.changed = true;\n    }\n\n    private createPickingMesh(geometry: THREE.BufferGeometry) {\n        const pickingMesh = new THREE.Mesh(geometry, this.renderer.matlib.pickingLineMaterial);\n        pickingMesh.frustumCulled = false;\n        this.renderer.pickingScene.add(pickingMesh);\n        this.pickingMesh = pickingMesh;\n    }\n\n    private createMesh(geometry: THREE.InstancedBufferGeometry) {\n        const mesh = new THREE.Mesh(geometry, this.renderer.matlib.lineMaterial);\n        mesh.frustumCulled = false; //this one was a big pain to figure out...\n        this.renderer.scene.add(mesh);\n        this.mesh = mesh;\n    }\n\n    private createGeometry(vertices: Float32Array, objectID: Uint8Array) {\n        const geometry = new THREE.InstancedBufferGeometry();\n        geometry.instanceCount = vertices.length / 3;\n        geometry.setAttribute('position', new THREE.BufferAttribute(new Float32Array(segment()), 3));\n        geometry.setAttribute('lineStart', new THREE.InterleavedBufferAttribute(\n            new THREE.InstancedInterleavedBuffer(vertices, 6, 1), 3, 0));\n\n        geometry.setAttribute('lineEnd', new THREE.InterleavedBufferAttribute(\n            new THREE.InstancedInterleavedBuffer(vertices, 6, 1), 3, 3));\n\n        geometry.setAttribute('objectID', new THREE.InstancedBufferAttribute(objectID, 4, true, 1));\n        geometry.setAttribute('color', new THREE.InstancedBufferAttribute(this.baseColors(vertices.length), 3, true, 1));\n\n        return geometry;\n    }\n}\n\nexport class LineProxyModel extends ModelProxy {\n    constructor(data: IModel, tile: Tile, callback: CallableFunction, abort: CallableFunction) {\n        super(tile.renderer);\n\n        const offset_source = tile.renderer.picker.offsetForLayer((tile.layer as Overlay).source);\n        //const offset_target = tile.renderer.picker.offsetForLayer((tile.layer as Overlay).target);\n\n        Decoders.Instance.process(\n            [{\n                datatype: DecoderQueryType.float32,\n                buffer: data.vertices\n            }, {\n                datatype: DecoderQueryType.int32,\n                buffer: data.attributes.source_oid.data,\n                offset: offset_source\n            }], (vertices: Float32Array, objectid: Uint8Array) => {\n                this.init(vertices, objectid, tile);\n                callback(this);\n            });\n    }\n\n    private init(vertices: Float32Array, objectid: Uint8Array, tile: Tile) {\n        const geometry = this.createGeometry(vertices, objectid); //offset\n        this.createMesh(geometry);\n        this.createPickingMesh(geometry);\n\n        this.visible = tile.visible;\n        this.renderer.changed = true;\n    }\n\n    private createPickingMesh(geometry: THREE.BufferGeometry) {\n        const pickingMesh = new THREE.Mesh(geometry, this.renderer.matlib.pickingLineMaterial);\n        pickingMesh.frustumCulled = false;\n        this.renderer.pickingScene.add(pickingMesh);\n        this.pickingMesh = pickingMesh;\n    }\n\n    private createMesh(geometry: THREE.InstancedBufferGeometry) {\n        const mesh = new THREE.Mesh(geometry, this.renderer.matlib.lineMaterial);\n        mesh.frustumCulled = false; //this one was a big pain to figure out...\n        this.renderer.scene.add(mesh);\n        this.mesh = mesh;\n    }\n\n    private createGeometry(vertices: Float32Array, objectID: Uint8Array) {\n        const geometry = new THREE.InstancedBufferGeometry();\n        geometry.instanceCount = vertices.length / 3;\n        geometry.setAttribute('position', new THREE.BufferAttribute(new Float32Array(segment()), 3));\n        geometry.setAttribute('lineStart', new THREE.InterleavedBufferAttribute(\n            new THREE.InstancedInterleavedBuffer(vertices, 6, 1), 3, 0));\n\n        geometry.setAttribute('lineEnd', new THREE.InterleavedBufferAttribute(\n            new THREE.InstancedInterleavedBuffer(vertices, 6, 1), 3, 3));\n        \n        geometry.setAttribute('objectID', new THREE.InstancedBufferAttribute(objectID, 4, true, 1));\n        geometry.setAttribute('color', new THREE.InstancedBufferAttribute(this.baseColors(vertices.length), 3, true, 1));\n\n        return geometry;\n    }\n}\n","import { IModel } from \"../types\";\nimport * as THREE from \"three\";\n//import { Decoder } from \"../utils/decoder\";\nimport { Decoders, DecoderQueryType } from \"../utils/workers\";\nimport { Tile } from \"../datamodel/tile\";\nimport { Model, ModelProxy } from \"./base\";\nimport { Overlay } from \"../datamodel/layer\";\n\n\nexport class PointModel extends Model {\n    constructor(data: IModel, tile: Tile, callback: CallableFunction, abort: CallableFunction) {\n        super(tile.renderer);\n        const offset = tile.renderer.picker.offsetForLayer(tile.layer.name);\n\n        Decoders.Instance.process(\n            [{\n                datatype: DecoderQueryType.float32,\n                buffer: data.vertices\n            }, {\n                datatype: DecoderQueryType.int32,\n                buffer: data.attributes.oid.data,\n                offset: offset\n            }],\n            (vertices: Float32Array, objectid: Uint8Array) => {\n                this.init(vertices, objectid, tile);\n                callback(this);\n            });\n\n    }\n\n    private init(vertices: Float32Array, objectid: Uint8Array, tile: Tile) {\n        const geometry = this.createGeometry(vertices, objectid);\n        this.createMesh(geometry);\n        this.createPickingMesh(geometry);\n        this.visible = tile.visible;\n        this.renderer.changed = true;\n    }\n\n\n    private createPickingMesh(geometry: THREE.BufferGeometry) {\n        const pickingMesh = new THREE.Mesh(geometry, this.renderer.matlib.pickingPointMaterial);\n        pickingMesh.frustumCulled = false;\n        this.renderer.pickingScene.add(pickingMesh);\n        this.pickingMesh = pickingMesh;\n    }\n\n    private createMesh(geometry: THREE.BufferGeometry) {\n        const material = this.renderer.matlib.pointMaterial;\n        const mesh = new THREE.Mesh(geometry, material);\n        mesh.frustumCulled = false;\n        //mesh.receiveShadow = true;\n        //mesh.castShadow = true;\n        this.renderer.scene.add(mesh);\n        this.mesh = mesh;\n    }\n\n    private createGeometry(vertices: Float32Array, objectid: Uint8Array) {\n        const symbol = new THREE.OctahedronGeometry(5, 0);\n        const symbolGeometry = new Float32Array(symbol.attributes.position.array);\n        symbol.dispose();\n\n        const geometry = new THREE.InstancedBufferGeometry();\n        geometry.instanceCount = vertices.length / 3;\n        geometry.setAttribute('position', new THREE.BufferAttribute(symbolGeometry, 3));\n        geometry.setAttribute('location', new THREE.InstancedBufferAttribute(vertices, 3, false, 1));\n        geometry.setAttribute('objectID', new THREE.InstancedBufferAttribute(objectid, 4, true, 1));\n        geometry.setAttribute('color', new THREE.InstancedBufferAttribute(this.baseColors(vertices.length), 3, true, 1));\n        geometry.computeVertexNormals();\n        return geometry;\n    }\n}\n\n\nexport class PointProxyModel extends ModelProxy {\n    constructor(data: IModel, tile: Tile, callback: CallableFunction, abort: CallableFunction) {\n        super(tile.renderer);\n        const offset_source = tile.renderer.picker.offsetForLayer((tile.layer as Overlay).source);\n        //const offset_target = tile.renderer.picker.offsetForLayer((tile.layer as Overlay).target);\n\n        Decoders.Instance.process(\n            [{\n                datatype: DecoderQueryType.float32,\n                buffer: data.vertices\n            }, {\n                datatype: DecoderQueryType.int32,\n                buffer: data.attributes.source_oid.data,\n                offset: offset_source\n            }], \n            (vertices: Float32Array, objectid: Uint8Array) => {\n                this.init(vertices, objectid, tile);\n                callback(this);\n            });\n\n    }\n\n    private init(vertices: Float32Array, objectid: Uint8Array, tile: Tile) {\n        const geometry = this.createGeometry(vertices, objectid);\n        this.createMesh(geometry);\n        this.createPickingMesh(geometry);\n        this.visible = tile.visible;\n        this.renderer.changed = true;\n    }\n\n\n    private createPickingMesh(geometry: THREE.BufferGeometry) {\n        const pickingMesh = new THREE.Mesh(geometry, this.renderer.matlib.pickingPointMaterial);\n        pickingMesh.frustumCulled = false;\n        this.renderer.pickingScene.add(pickingMesh);\n        this.pickingMesh = pickingMesh;\n    }\n\n    private createMesh(geometry: THREE.BufferGeometry) {\n        const material = this.renderer.matlib.pointMaterial;\n        const mesh = new THREE.Mesh(geometry, material);\n        mesh.frustumCulled = false;\n        //mesh.receiveShadow = true;\n        //mesh.castShadow = true;\n        this.renderer.scene.add(mesh);\n        this.mesh = mesh;\n    }\n\n    private createGeometry(vertices: Float32Array, objectid: Uint8Array) {\n        const symbol = new THREE.OctahedronGeometry(5, 0);\n        const symbolGeometry = new Float32Array(symbol.attributes.position.array);\n        symbol.dispose();\n\n        const geometry = new THREE.InstancedBufferGeometry();\n        geometry.instanceCount = vertices.length / 3;\n        geometry.setAttribute('position', new THREE.BufferAttribute(symbolGeometry, 3));\n        geometry.setAttribute('location', new THREE.InstancedBufferAttribute(vertices, 3, false, 1));\n        geometry.setAttribute('objectID', new THREE.InstancedBufferAttribute(objectid, 4, true, 1));\n        geometry.setAttribute('color', new THREE.InstancedBufferAttribute(this.baseColors(vertices.length), 3, true, 1));\n        geometry.computeVertexNormals();\n        return geometry;\n    }\n}\n","import { IMove } from \"../types\";\nimport * as THREE from \"three\";\nimport { Decoders, DecoderQueryType } from \"../utils/workers\";\nimport { Interval } from \"../datamodel/interval\";\nimport { Model } from \"./base\";\n\n\nexport class Move extends Model {\n    time: number;\n\n    constructor(data: IMove, interval: Interval, callback: CallableFunction, abort: CallableFunction) {\n        super(interval.renderer);\n        this.time = data.time;\n        const offset = interval.layer.getOffset();\n\n        Decoders.Instance.process([\n            {\n                datatype: DecoderQueryType.float32,\n                buffer: data.from\n            }, {\n                datatype: DecoderQueryType.float32,\n                buffer: data.to\n            }, {\n                datatype: DecoderQueryType.int32,\n                buffer: data.oid,\n                offset: offset\n            }, {\n                datatype: DecoderQueryType.float32,\n                buffer: data.from_speed,\n            },{\n                datatype: DecoderQueryType.float32,\n                buffer: data.to_speed,\n            }], \n            (from: Float32Array, to: Float32Array, objectid: Uint8Array, from_speed: Float32Array, to_speed: Float32Array) => {\n                    this.init(from, to, objectid, from_speed, to_speed);\n                    callback(this);\n            });\n        }\n\n    private init(from: Float32Array, to: Float32Array, objectid: Uint8Array, from_speed: Float32Array, to_speed: Float32Array) {\n        const geometry = this.createGeometry(from, to, objectid, from_speed, to_speed);\n        this.createMesh(geometry);\n        this.createPickingMesh(geometry);\n        this.visible = true;\n        this.renderer.changed = true;\n    }\n\n    private createMesh(geometry: THREE.BufferGeometry) {\n        const material = this.renderer.matlib.agentMaterial;\n        const mesh = new THREE.Mesh(geometry, material);\n        mesh.frustumCulled = false;\n        //mesh.receiveShadow = true;\n        //mesh.castShadow = true;\n        this.renderer.scene.add(mesh);\n        this.mesh = mesh;\n    }\n\n    private createPickingMesh(geometry: THREE.BufferGeometry) {\n        const material = this.renderer.matlib.pickingAgentMaterial;\n        const pickingMesh = new THREE.Mesh(geometry, material);\n        pickingMesh.frustumCulled = false;\n        this.renderer.pickingScene.add(pickingMesh);\n        //this.renderer.scene.add(pickingMesh);\n        this.pickingMesh = pickingMesh;\n    }\n\n    private createGeometry(from: Float32Array, to: Float32Array, objectid: Uint8Array, from_speed: Float32Array, to_speed: Float32Array) {\n        const symbol = new THREE.OctahedronGeometry(35, 0);\n        const symbolGeometry = new Float32Array(symbol.attributes.position.array);\n        symbol.dispose();\n\n        const geometry = new THREE.InstancedBufferGeometry();\n        geometry.instanceCount = from.length / 3;\n        geometry.setAttribute('position', new THREE.BufferAttribute(symbolGeometry, 3));\n        geometry.setAttribute('from', new THREE.InstancedBufferAttribute(from, 3, false, 1));\n        geometry.setAttribute('from_speed', new THREE.InstancedBufferAttribute(from_speed, 1, false, 1));\n        geometry.setAttribute('to', new THREE.InstancedBufferAttribute(to, 3, false, 1));\n        geometry.setAttribute('to_speed', new THREE.InstancedBufferAttribute(to_speed, 1, false, 1));\n        geometry.setAttribute('objectID', new THREE.InstancedBufferAttribute(objectid, 4, true, 1));\n        geometry.setAttribute('color', new THREE.InstancedBufferAttribute(this.baseColors(from.length), 3, true, 1));\n        geometry.computeVertexNormals();\n        return geometry;\n    }\n}\n\n\n","import { PolygonalModel, PolygonalProxyModel } from \"../geometry/polygons\"\nimport { LineModel, LineProxyModel } from \"../geometry/lines\"\nimport { PointModel, PointProxyModel } from \"../geometry/points\"\nimport { Tile } from \"../datamodel/tile\";\nimport { IModel, IMovement } from \"../types\";\nimport { Model } from \"./base\"\nimport { Interval } from \"../datamodel/interval\";\nimport { Move } from \"./movement\";\n\n\nconst registeredModels: {[name: string]: {[name: string]: new(data: IModel, tile: Tile, callback: CallableFunction, abort: CallableFunction) => Model }} = {\n    model: {\n        simplepolygon: PolygonalModel,\n        simpleline: LineModel,\n        simplepoint: PointModel,\n    },\n    proxy: {\n        simpleline: LineProxyModel,\n        simplepolygon: PolygonalProxyModel,\n        simplepoint: PointProxyModel,\n    }\n};\n\nconst modelTypes = Object.keys(registeredModels.model);\nconst proxyTypes = Object.keys(registeredModels.proxy);\n\n\nexport function deserializeModel(data: IModel, tile: Tile, callback: CallableFunction = () => {}, abort: CallableFunction = () => false) {\n    if (data.tags && data.tags.proxy === true) {\n        if (proxyTypes.includes(data.type)) \n            return new (registeredModels.proxy[data.type])(data, tile, callback, abort);\n        throw new Error(`Proxy type ${data.type} is not registered`);\n    } else {\n        if (modelTypes.includes(data.type))\n            return new registeredModels.model[data.type](data, tile, callback, abort);\n        throw new Error(`Model type ${data.type} is not registered`);\n    }\n}\n\nexport function deserializeMovement(data: IMovement, interval: Interval, callback: CallableFunction, abort: CallableFunction) {\n    for (let i = 0; i < data.length; ++i) {\n        new Move({ from: data.from[i], to: data.to[i], oid: data.oid[i], time: data.start_time + i, from_speed: data.from_speed[i], to_speed: data.to_speed[i] }, interval, callback, abort);\n    }\n}","import axios from \"axios\";\nimport { Vector2, Vector3 } from \"three\";\nimport iaxios from \"../../axios\";\nimport { apiurl } from \"../../url\";\nimport { host } from \"../engine\";\nimport { Model } from \"../geometry/base\";\nimport { deserializeModel } from \"../geometry/deserialize\";\nimport { Renderer } from \"../renderer/renderer\";\nimport { ITile } from \"../types\";\nimport { Layer, Overlay } from \"./layer\";\n\nclass TileLoader {\n    //axios stop request\n    stopFlag: any;\n    loaded: boolean;\n\n    constructor() {\n        this.loaded = false;\n    }\n\n    get(tile: Tile, callback: CallableFunction) {\n        this.stopFlag = axios.CancelToken.source();\n        tile.renderer.status.actions.loadingGeometry.start();\n\n        const prefix = (Math.abs(tile.x) + Math.abs(tile.y)) % 6;\n\n        iaxios.get(`${apiurl.PROJECTDATA}${tile.layer.project}/${tile.layer.name}/grid/stream/${tile.sourceFile}`, {\n            cancelToken: this.stopFlag.token,\n            baseURL: `http://static${prefix}.${host}`,\n        }).then(\n            (response) => {\n                tile.renderer.status.actions.loadingGeometry.stop();\n\n                if (this.loaded) //to avoid race conditions\n                    return;\n\n                this.loaded = true;\n                this.stopFlag = null;\n                callback(response.data);\n            }\n        ).catch((reject) => {\n            tile.renderer.status.actions.loadingGeometry.stop();\n            this.stopFlag = null;\n        });\n    }\n\n    abort() {\n        if (this.stopFlag)\n            this.stopFlag.cancel();\n        this.stopFlag = null;\n    }\n}\n\n\nexport class Tile {\n    bbox: [Vector3, Vector3];\n    brect: [Vector2, Vector2];\n    x: number;\n    y: number;\n    renderer: Renderer;\n    layer: Layer | Overlay;\n    sourceFile: string;\n    models: Model[];\n    private isVisible: boolean;\n    private loader: TileLoader;\n    private caching: boolean; \n\n    constructor(data: ITile, renderer: Renderer, layer: Layer | Overlay) {\n        this.bbox = [new Vector3(...data.box[0]), new Vector3(...data.box[1])];\n        this.brect = [new Vector2(this.bbox[0].x, this.bbox[0].y), new Vector2(this.bbox[1].x, this.bbox[1].y)];\n        this.x = data.x;\n        this.y = data.y;\n        this.sourceFile = data.file;\n        this.layer = layer;\n        this.renderer = renderer;\n        this.isVisible = false;\n        this.models = [];\n        this.loader = new TileLoader();\n        this.caching = false;\n        this.renderer.placeholders.addPlaceholder(this.x, this.y);\n    }\n\n    set visible(isVisible: boolean) {\n        if (this.isVisible === isVisible)\n            return;\n\n        this.isVisible = isVisible;\n\n        if (isVisible)\n            this.show();\n        else\n            this.hide();\n    }\n\n    get visible() {\n        return this.isVisible;\n    }\n\n    show() {\n        this.renderer.placeholders.hidePlaceholder(this.x, this.y);\n\n        if (!this.loader.loaded) {\n            this.loader.get(this, (models: Array<any>) => {\n\n                if (!this.isVisible && !this.caching)\n                    return this.disposeCache();\n\n\n                for (let modeldata of models) {\n\n                    this.renderer.status.actions.parsingGeometry.start();\n                    deserializeModel(modeldata, this, (model: Model) => {\n                        this.renderer.status.actions.parsingGeometry.stop();\n                        this.models.push(model);\n\n                        if (!this.isVisible && !this.caching)\n                            return this.disposeCache();\n\n                        this.layer.applyStyleToModels(this.models);\n\n                        if (!this.isVisible && !this.caching)\n                        return this.disposeCache();\n\n                    }, () => {\n                        if (!this.isVisible)\n                        {\n                            this.renderer.status.actions.parsingGeometry.stop();\n                            this.disposeCache();\n                        }\n                        \n                        return !this.isVisible;}\n                    );\n                }\n            });\n        }\n\n        if (this.caching) {\n            for (const m of this.models)\n                m.visible = true;\n        }\n    }\n\n    hide() {\n        this.renderer.placeholders.showPlaceholder(this.x, this.y);\n\n        if (!this.loader.loaded) {\n            this.loader.abort();\n        }\n        \n        if (!this.caching) {\n            this.disposeCache();\n        } else {\n            for (const m of this.models)\n                m.visible = false;\n        }\n    }\n\n    remove() {\n        if (this.models.length > 0) {\n            for (const m of this.models)\n                m.remove();\n            this.models = [];\n        }\n    }\n\n    enableCache() {\n        this.caching = true;\n    }\n\n    disableCache() {\n        this.caching = false;\n\n        if (!this.isVisible) {\n            this.disposeCache();\n        }\n    }\n    \n    disposeCache() {\n        console.log(\"dispose cache\");\n        for (const m of this.models)\n            m.remove();\n\n        this.models = [];\n        this.loader.loaded = false;\n    }\n}","import { Vector2, Vector3 } from \"three\";\nimport { Renderer } from \"../renderer/renderer\";\nimport { IGrid, IVecBBox } from \"../types\";\nimport { toSpiral } from \"../utils/indexing\";\nimport { Layer, Overlay } from \"./layer\";\nimport { Tile } from \"./tile\";\n\n\nfunction extend(a: IVecBBox, b: IVecBBox) {\n    a[0].min(b[0]);\n    a[1].max(b[1]);\n}\n\nfunction center(b: IVecBBox) {\n    return new Vector2((b[0].x + b[1].x) * 0.5, (b[0].y + b[1].y) * 0.5);\n}\n\n\nexport class Grid {\n    bbox: IVecBBox;\n    brect: [Vector2, Vector2];\n    focusPoint: Vector2;\n    renderer: Renderer;\n    tileSize: number;\n\n    tiles: Map<number, Tile>;\n    visible_radius: number;\n    visible: Set<Tile>;\n    visibleSwap: Set<Tile>;\n    readonly zero2: Vector2;\n    layer: Layer | Overlay;\n    \n    constructor(data: IGrid, renderer: Renderer, layer: Layer | Overlay) {\n        this.tileSize = data.tile_size;\n        this.renderer = renderer;\n        this.layer = layer;\n\n        this.bbox = [new Vector3(Infinity, Infinity, Infinity), new Vector3(-Infinity, -Infinity, -Infinity)];\n        this.tiles = new Map<number, Tile>();\n        \n        this.createTiles(data, renderer, layer);\n        \n        this.brect = [new Vector2(this.bbox[0].x, this.bbox[0].y), new Vector2(this.bbox[1].x, this.bbox[1].y)];\n        this.focusPoint = new Vector2(Infinity, Infinity);\n        \n        this.visible_radius = 2000;\n        this.visibleSwap = new Set<Tile>();\n        this.visible = new Set<Tile>();\n        \n        this.zero2 = new Vector2();\n    }\n\n    get center() {\n        return center(this.bbox);\n    }\n\n    hide() {\n        for (const tile of this.visible.values()) {\n            tile.visible = false;\n        }\n    }\n\n    show() {\n        for (const tile of this.visible.values()) {\n            tile.visible = true;\n        }\n    }\n    \n    private createTiles(data: IGrid, renderer: Renderer, layer: Layer | Overlay) {\n        for (const tiledata of data.tiles) {\n            let idx = toSpiral(tiledata.x, tiledata.y);\n            const tile = new Tile(tiledata, renderer, layer);\n            extend(this.bbox, tile.bbox);\n            this.tiles.set(idx, tile);\n        }\n    }\n\n    updateVisibleTiles(fp: Vector3) {\n        const visibleTile = this.focusPoint.clone().divideScalar(this.tileSize).floor()\n        const nvisibleTile = new Vector2(fp.x, fp.y).divideScalar(this.tileSize).floor();\n\n        if (!visibleTile.equals(nvisibleTile)) {\n            this.focusPoint.set(fp.x, fp.y);\n            this.updateVisibility(nvisibleTile)\n        } \n    }\n\n    reloadVisibility() {\n        this.updateVisibility(this.focusPoint.clone().divideScalar(this.tileSize).floor());\n    }\n\n    updateVisibility(visibleTile: Vector2) {\n        const tmpVisible = this.visible;\n        this.visible = this.visibleSwap;\n        this.visibleSwap = tmpVisible;\n\n        const trad = Math.ceil(this.visible_radius / this.tileSize);\n        const sid = visibleTile.clone().subScalar(trad);\n        const eid = visibleTile.clone().addScalar(trad + 1);\n\n        this.visible.clear();\n\n        for (let x = sid.x; x < eid.x; ++x) {\n            for (let y = sid.y; y < eid.y; ++y) {\n                let idx = toSpiral(x, y);\n                const tile = this.tiles.get(idx);\n                if (tile)\n                {\n                    tile.visible = true;\n                    this.visible.add(tile);\n                }\n            }\n        }\n\n        this.visibleSwap.forEach((tile: Tile) => {\n            if (!this.visible.has(tile)) {\n                tile.visible = false;\n            }\n        });\n    }\n}","import { le } from \"binary-search-bounds\";\nimport { Renderer } from \"../renderer/renderer\";\nimport { ITimeline } from \"../types\";\nimport { Interval } from \"./interval\";\nimport { Layer, Overlay } from \"./layer\";\n\nconst MINPRELOAD = 2;\nconst PRELOADI = 5;\n\nenum LoadStatus {\n    loading,\n    wontload,\n    loaded\n};\n\nexport class Timeline {\n    intervals: Interval[];\n    intervalLength: number;\n    isVisible: boolean;\n    active: number;\n    start: number;\n    end: number;\n    fillingBuffer: boolean;\n\n    loaded: Map<number, LoadStatus>;\n\n    constructor(data: ITimeline, renderer: Renderer, layer: Layer | Overlay) {\n        this.intervals = [];\n        this.intervalLength = data.interval_length;\n        this.active = -1;\n        this.isVisible = true;\n\n        this.fillingBuffer = true;\n        this.loaded = new Map();\n\n        for (const idata of data.intervals)\n            this.intervals.push(new Interval(idata, this.intervalLength, renderer, layer));\n\n        this.intervals.sort((a, b) => a.start - b.start)\n        this.start = this.intervals[0].start;\n        this.end = this.intervals[this.intervals.length - 1].start + this.intervalLength;\n\n        renderer.timeline.addTimeline(this);\n    }\n\n    set visible(isVisible: boolean) {\n        if (this.isVisible === isVisible)\n            return;\n\n        this.isVisible = isVisible;\n\n        if (isVisible)\n            this.show();\n        else\n            this.hide();\n    }\n\n    get countLoaded() {\n        let count = 0;\n        for (const status of this.loaded.values())\n            if (status !== LoadStatus.loading)\n                count++;\n        return count;\n    }\n\n    get ready() {\n        const cl = this.countLoaded;\n\n        if (this.fillingBuffer){\n            if (cl >= MINPRELOAD)\n            {\n                this.fillingBuffer = false;\n                return true;\n            }\n            return false;\n        }\n        return cl >= MINPRELOAD;\n    }\n\n    render(time: number) {\n        if (!this.isVisible)\n            return;\n\n        this.updateLoaded(time);  \n\n        if (!this.intervals[this.active] || !this.intervals[this.active].contains(time))\n            this.swapActive(time);\n\n        if (this.active !== -1)\n            this.intervals[this.active].render(time);\n    }\n\n\n    updateLoaded(time: number) {\n        const current = this.current(time);\n        for (let i = current; i < current + PRELOADI; i++)\n            this.loadInterval(i);\n        this.discard(current);\n    }\n\n    swapActive(time: number) {\n        const i = this.current(time);\n        this.active = -1;\n\n        if (this.intervals[i] && this.intervals[i].init) {\n            this.active = i;\n        }\n    }\n\n    private current(time: number) {\n        const interval: number = le(this.intervals, {start: time} as Interval, (a, b) => a.start - b.start);\n        return interval;\n    }\n\n    private loadInterval(index: number) {\n        const interval = this.intervals[index];\n\n        if (!interval) {\n            this.loaded.set(index, LoadStatus.wontload);\n            return;\n        }\n        \n        if (interval.init || interval.loading){\n            return;\n        }\n\n        this.loaded.set(index, LoadStatus.loading);\n        \n        interval.load(() => {\n            this.loaded.set(index, LoadStatus.loaded);\n        });\n    }\n\n    private discard(nowIndex: number) {        \n        for (const index of this.loaded.keys()) {\n            if (index < nowIndex || index >= nowIndex + PRELOADI)\n                this.unloadInterval(index);\n        }\n    }\n\n    private unloadInterval(index: number) {\n        if (this.loaded.get(index) !== LoadStatus.wontload)\n            this.intervals[index].remove();\n        this.loaded.delete(index);\n    }\n\n    hide() {\n        this.visible = false;\n\n        if (this.active === -1)\n            return;\n\n        this.intervals[this.active].hide();\n    }\n\n    show() {\n        this.visible = true;\n\n        if (this.active === -1)\n            return;\n\n        this.intervals[this.active].show();\n    }\n}","import iaxios from \"../../axios\";\nimport { Renderer } from \"../renderer/renderer\";\nimport { IInterval } from \"../types\";\nimport { Layer, Overlay } from \"./layer\";\nimport { Move } from \"../geometry/movement\"\nimport { deserializeMovement } from \"../geometry/deserialize\";\nimport { apiurl } from \"../../url\";\n\nexport class Interval {\n    start: number;\n    end: number;\n    length: number;\n    file: string;\n    renderer: Renderer;\n    layer: Layer | Overlay;\n    moves: Move[];\n    loading: boolean;\n    init: boolean;\n    acitve: number;\n    delayedCall?: NodeJS.Timeout;\n\n    constructor(data: IInterval, length: number, renderer: Renderer, layer: Layer | Overlay) {\n        this.start = data.start_time;\n        this.length = length;\n        this.end = this.start + length;\n        this.file = data.file;\n        this.renderer = renderer;\n        this.layer = layer;\n        this.loading = false;\n        this.init = false;\n        this.delayedCall = undefined;\n        this.acitve = -1;\n        this.moves = []\n    }\n\n    load(callback: () => void) {\n        if (this.loading || this.init)\n            return false;\n            \n        this.loading = true;\n        this.delayedCall = setTimeout(() => {\n            this.delayedCall = undefined;\n            this.renderer.status.actions.loadingGeometry.start();\n            iaxios.get(`${apiurl.PROJECTDATA}${this.layer.project}/${this.layer.name}/timeline/stream/${this.file}`).then(\n                (response) => {\n                    const data = response.data;\n                    this.renderer.status.actions.loadingGeometry.stop();\n                    this.renderer.status.actions.parsingGeometry.start();\n                    deserializeMovement(data, this, (move: Move) => {\n                        this.moves.push(move);\n                        move.visible = false;\n                        if (this.moves.length === this.length)\n                        {\n                            this.renderer.status.actions.parsingGeometry.stop();\n                            this.finalizeInit();\n                            callback();\n                        }\n                    }, () => false);\n                }\n            )    \n        }, 1000);\n\n        return true;\n    }\n\n    finalizeInit() {\n        this.moves.sort((a, b) => a.time - b.time);\n        this.init = true;\n        this.loading = false;\n    }\n\n    render(time: number) {\n        if (!this.init)\n            return;\n\n        const current = Math.floor(time) - this.start;\n        if (this.acitve === current)\n            return;\n\n        //do swap\n        if (this.acitve !== -1)\n            this.moves[this.acitve].visible = false;\n\n        if (current >= this.moves.length)\n            return;\n            \n        this.moves[current].visible = true;\n        this.acitve = current;\n    }\n\n    contains(time: number) {\n        return time >= this.start && time < this.end; \n    }\n\n    remove() {\n        for(const move of this.moves)\n            move.remove();\n\n        if (this.delayedCall)\n            clearTimeout(this.delayedCall);\n        \n        this.loading = false;\n        this.init = false;\n        this.moves = [];\n    }\n\n    hide() {\n        if (this.acitve === -1)\n            return;\n\n        this.moves[this.acitve].visible = false;\n    }\n\n    show() {\n        if (this.acitve === -1)\n            return;\n\n        this.moves[this.acitve].visible = true;\n    }\n}","import * as THREE from \"three\";\nimport iaxios from \"../../axios\";\nimport { apiurl } from \"../../url\";\nimport { Model } from \"../geometry/base\";\nimport { Renderer } from \"../renderer/renderer\";\nimport { LayerStyle } from \"../renderer/style\";\nimport { ILayerBaseData, ILayerData, IOverlayData } from \"../types\";\nimport { Grid } from \"./grid\";\nimport { Timeline } from \"./timeline\";\n\n\nabstract class LayerBase {\n    name: string;\n    project: string;\n    renderer: Renderer;\n    grid?: Grid; //undefined if the layer is not visible\n    timeline?: Timeline; \n    style?: LayerStyle;\n    visibility: boolean;\n\n\n    constructor(renderer: Renderer, project: string, data: ILayerBaseData, style_names: string[]) {\n        this.name = data.name;\n        this.project = project;\n        this.renderer = renderer;\n        this.visibility = true;\n    }\n\n    set visible(v: boolean) {\n        if (v === this.visibility)\n            return;\n\n        this.visibility = v;\n        if (this.visibility)\n            this.show();\n        else\n            this.hide();\n    }\n\n    get visible() {\n        return this.visibility;\n    }\n    \n    init(data: ILayerBaseData) {\n        if (data.grid)\n        {\n            this.grid = new Grid(data.grid, this.renderer, this as any);\n            this.renderer.controls.focus(this.grid.center);\n            this.grid.updateVisibleTiles(this.renderer.controls.target);\n            this.renderer.changed = true;\n        }\n\n        if (data.timeline)\n        {  \n            this.timeline = new Timeline(data.timeline, this.renderer, this as any);\n            this.renderer.changed = true;\n        }\n    }\n\n    updateVisibleRadius(point: THREE.Vector3) {\n        if (!this.visibility)\n            return;\n\n        if (this.grid)\n            this.grid.updateVisibleTiles(point);\n    }\n\n    hide() {\n        if (this.grid)\n            this.grid.hide();\n        if (this.timeline)\n            this.timeline.hide();\n        this.renderer.changed = true;\n    }\n    \n    show() {\n        if (this.grid)\n            this.grid.reloadVisibility();\n        if (this.timeline)\n            this.timeline.show();\n        this.renderer.changed = true;\n    }\n\n    setVisibleRadius(radius: number) {\n        if (this.grid)\n        {\n            this.grid.visible_radius = radius;\n            if (this.visible)\n                this.grid.reloadVisibility();\n        }\n\n        this.renderer.changed = true;\n    }\n\n    applyStyle(style: string) {\n        this.renderer.status.actions.loadingStyles.start();\n        iaxios.get(`${apiurl.PROJECTDATA}${this.project}/styles/${style}/${this.name}.json`, {\n            headers: {\n                'Cache-Control': 'no-cache',\n                'Pragma': 'no-cache',\n                'Expires': '0'\n            }\n        }).then((response) => {\n            this.renderer.status.actions.loadingStyles.stop();\n            this.renderer.status.actions.applyingStyles.start();\n            new LayerStyle(response.data, (lstyle: LayerStyle) => {\n                this.style = lstyle;\n\n                if (this.grid)\n                {\n                    for (let tile of this.grid.tiles.values()) {\n                        this.applyStyleToModels(tile.models);\n                    }\n                }\n\n                this.renderer.status.actions.applyingStyles.stop();\n            });\n        }).catch(() => {\n            this.clearStyle();\n        });\n    }\n\n    abstract applyStyleToModels(models: Model[]): void;\n    abstract getOffset(): number;\n\n    clearStyle() {\n        this.style = undefined;\n        if (this.grid)\n            for (let tile of this.grid.tiles.values()) {\n                this.applyStyleToModels(tile.models);\n            }\n    }\n\n    enableCache() {\n        if (this.grid)\n            for (let tile of this.grid.tiles.values()) {\n                tile.enableCache();\n            }\n    }\n\n    disableCache() {\n        if (this.grid)\n            for (let tile of this.grid.tiles.values()) {\n                tile.disableCache();\n            }\n    }\n}\n\n\nexport class Layer extends LayerBase {\n    size: number;\n\n    constructor(renderer: Renderer, project: string, data: ILayerData, style_names: string[]) {\n        super(renderer, project, data, style_names);\n        this.size = data.size;\n        this.renderer.picker.offsetForLayer(this.name, this.size);\n        this.init(data);\n    }\n\n    applyStyleToModels(models: Model[]) {\n        const offset = this.renderer.picker.offsetForLayer(this.name);\n        for (let model of models) {\n            model.applyStyle(offset, this.style);\n        }\n    }\n\n    getOffset() {\n        return this.renderer.picker.offsetForLayer(this.name);\n    }\n}\n\nexport class Overlay extends LayerBase {\n    source: string;\n    target: string;\n    size: [number, number];\n\n    constructor(renderer: Renderer, project: string, data: IOverlayData, style_names: string[]) {\n        super(renderer, project, data, style_names);\n        this.source = data.source;\n        this.target = data.target;\n        this.size = data.size;\n        this.renderer.picker.offsetForLayer(this.source, this.size[0]);\n        this.renderer.picker.offsetForLayer(this.target, this.size[1]);\n        this.init(data);\n    }\n\n    applyStyleToModels(models: Model[]) {\n        const offset = this.renderer.picker.offsetForLayer(this.source);\n        \n        for (let model of models) {\n            model.applyStyle(offset, this.style);\n        }\n    }\n\n    getOffset() {\n        return this.renderer.picker.offsetForLayer(this.source);\n    }\n}\n\n","\nimport iaxios from '../../axios';\nimport { apiurl } from '../../url';\nimport { Renderer } from '../renderer/renderer';\nimport { Layer, Overlay } from './layer';\n\n\nexport class Project {\n    name: string;\n    renderer: Renderer;\n    layers: (Layer | Overlay)[];\n    styles: string[];\n    usedStyle?: string;\n\n    constructor(name: string, renderer: Renderer) {\n        this.name = name;\n        this.renderer = renderer;\n        this.layers = [];\n        this.styles = [];\n\n        iaxios.get(`${apiurl.PROJECTDATA}${this.name}/layout.json`, {\n            headers: {\n                'Cache-Control': 'no-cache',\n                'Pragma': 'no-cache',\n                'Expires': '0'\n            }\n        }).then((response) => {\n            const styles = response.data.styles;\n            this.styles = styles;\n            for (const layer of response.data.layers)\n            {\n                if(layer.disabled || !(layer.grid || layer.timeline))\n                    continue;\n                \n                if (layer.type === \"layer\")\n                    this.layers.push(new Layer(this.renderer, this.name, layer, styles));   \n            }\n\n            for (const overlay of response.data.layers)\n            {\n                if(overlay.disabled || !(overlay.grid || overlay.timeline))\n                    continue;\n                \n                if (overlay.type === \"overlay\")\n                    this.layers.push(new Overlay(this.renderer, this.name, overlay, styles));   \n            }\n        });\n    }\n\n    updateVisibleRadius(target: THREE.Vector3) {\n        for (const layer of this.layers){\n            layer.updateVisibleRadius(target);\n        }\n    }\n\n    setVisibleRadius(radius: number) {\n        for(let layer of this.layers)\n            layer.setVisibleRadius(radius);\n    }\n\n    useCache(enable: boolean){\n        for(let layer of this.layers)\n            enable? layer.enableCache() : layer.disableCache();\n    }\n\n    applyStyle(style: string){\n        if(this.styles.indexOf(style) === -1){\n            return;\n        }\n\n        this.usedStyle = style;\n        for(const layer of this.layers){\n            layer.applyStyle(style);\n        }\n\n        \n    }\n\n    clearStyle(){\n        this.usedStyle = undefined;\n        for(const layer of this.layers){\n            layer.clearStyle();\n        }\n    }\n}","import { Renderer } from \"../renderer/renderer\";\nimport { Timeline } from \"./timeline\";\n\n\n\nexport class MainTimeline {\n    renderer: Renderer;\n    timelines: Timeline[];\n    time: number;\n    start: number;\n    end: number;\n    play: boolean;\n    speed: number;\n\n    constructor(renderer: Renderer) {\n        this.renderer = renderer;\n        this.timelines = [];\n        this.time = 0;\n        this.start = Infinity;\n        this.end = -Infinity;\n        this.play = false;\n        this.speed = 1;\n    }\n\n    get isEmpty() {\n        return this.timelines.length === 0;\n    }\n\n    addTimeline(timeline: Timeline) {\n        this.timelines.push(timeline);\n        this.start = Math.min(this.start, timeline.start);\n        this.end = Math.max(this.end, timeline.end);\n    }\n\n    get ready() {\n        for(const timeline of this.timelines)\n            if (!timeline.ready)\n                return false;\n        return true;\n    }\n\n    get hasData() {\n        return this.timelines.length > 0;\n    }\n\n    tick() {\n        const delta = (1 / 60) * this.speed;\n        \n        if (this.play && this.ready) {\n            this.time += delta;\n            this.time = this.time % this.end;\n            this.time = Math.max(this.time, this.start);\n            this.renderer.matlib.setTime(this.time);\n            this.renderer.changed = true;\n        }\n    \n        this.render();\n    }   \n    \n    render() {\n        for(const timeline of this.timelines)\n            timeline.render(this.time);\n        this.renderer.changed = true;\n    }\n}\n\n","\n\nclass Action {\n    name: string;\n    counter: number;\n    manager: StatusManager;\n\n    constructor(name: string, manager: StatusManager) {\n        this.name = name;\n        this.counter = 0;\n        this.manager = manager;\n    }\n\n    start() {\n        this.counter++;\n        this.manager.update();\n    }\n    \n    stop() { \n        this.counter--;\n        this.manager.update();\n    }\n\n    toString() {\n        return `${this.name}: ${this.counter} remaining`;\n    }\n\n    get isRunning() {  \n        return this.counter > 0;\n    }\n}\n\ninterface IActionList {\n    [key: string]: Action;\n    loadingGeometry: Action;\n    parsingGeometry: Action;\n    loadingStyles: Action;\n    applyingStyles: Action;\n}\n\nexport class StatusManager {\n    actions: IActionList;\n\n    constructor() {\n        this.actions = {\n            loadingGeometry: new Action(\"Loading Geometry\", this),\n            parsingGeometry: new Action(\"Parsing Geometry\", this),\n            loadingStyles: new Action(\"Loading Styles\", this),\n            applyingStyles: new Action(\"Applying Styles\", this)\n        };\n    }\n\n    update() {\n        const bar = document.getElementById(\"viewStatusBar\");\n        if (!bar)\n            return;\n\n        for (let action in this.actions) {\n            if ((this.actions[action] as Action).isRunning) {\n                const status = this.actions[action].toString();\n                bar.innerHTML = status;\n                return;\n            }\n        }\n        \n        bar.innerHTML = 'Ready.';\n    }\n}","import * as THREE from 'three';\nimport { MapControls } from './controls';\nimport { CSM } from './csm/CSM';\n\n\nclass PerspectiveControls {\n    camera: THREE.PerspectiveCamera;\n\n    constructor(canvas: HTMLCanvasElement) {\n        this.camera = new THREE.PerspectiveCamera(65, window.innerWidth / window.innerHeight, 1, 6000)\n    }\n\n    update(controls: MapControls) {\n        controls.update();\n    }\n\n    topView(controls: MapControls, distance: number = 3000) {\n        this.camera.position.copy(controls.target);\n        this.camera.position.z = distance;\n        this.camera.updateMatrixWorld();\n    }\n        \n    enable(controls: MapControls) {\n        controls.enableRotate = true;\n        controls.maxDistance = 5000;\n    }\n\n    resize(width: number, height: number) {\n        this.camera.aspect = width / height;\n        this.camera.updateProjectionMatrix();\n    }\n}\n\n\nclass OrthographicControls {\n    camera: THREE.OrthographicCamera;\n    csm: CSM;\n\n    constructor(canvas: HTMLCanvasElement, csm: CSM) {\n        this.camera = new THREE.OrthographicCamera(\n            -window.innerWidth / 2,\n            window.innerWidth / 2,\n            window.innerHeight / 2,\n            -window.innerHeight / 2,\n            1,\n            10000);\n        this.csm = csm;\n    }\n\n    update(controls: MapControls) {\n        var size = controls.target.distanceTo( controls.object.position );\n        var aspect = (controls.object as any).aspect;\n\n        this.camera.left = size * aspect / -2;\n        this.camera.right = size * aspect / 2;\n\n        this.camera.top = size / 2;\n        this.camera.bottom = size / - 2;\n\n        this.camera.position.copy(controls.object.position);\n        this.camera.updateProjectionMatrix();\n        controls.update();\n        this.csm.updateFrustums();\n    }\n    \n    enable(controls: MapControls) {\n        this.camera.position.copy( controls.object.position );\n        controls.target.copy( this.camera.position );\n        controls.target.z = 0;\n        controls.minDistance = 50;\n        controls.maxDistance = 10000;\n        controls.enableRotate = false;\n    }\n\n    topView(controls: MapControls, distance: number = 3000) {\n        this.camera.position.copy(controls.target);\n        this.camera.position.z = distance;\n        this.camera.updateMatrixWorld()\n    }\n    \n    resize(width: number, height: number) {\n        this.camera.left = -width / 2;\n        this.camera.right = width / 2;\n\n        this.camera.top = height / 2;\n        this.camera.bottom = -height / 2;\n\n        this.camera.updateProjectionMatrix();\n    }\n}\n\nexport class CameraControls {\n    controls: MapControls;\n    perspective: PerspectiveControls;\n    orthographic?: OrthographicControls;\n    current: PerspectiveControls | OrthographicControls;\n    csm?: CSM;\n\n    constructor(canvas: HTMLCanvasElement) {\n        this.perspective = new PerspectiveControls(canvas);\n        this.controls = new MapControls(this.perspective.camera, canvas);\n        this.current = this.perspective;\n        this.current.enable(this.controls);\n    }\n\n    initOrthographic(canvas: HTMLCanvasElement, csm: CSM) {\n        this.orthographic = new OrthographicControls(canvas, csm);\n        this.csm = csm;\n    }\n\n    resize(x: number, y: number){\n        this.perspective.resize(x, y);\n        if(this.orthographic)\n            this.orthographic.resize(x, y);\n    }\n\n\n    zoomIn(step: number) {\n\n        const pos = this.controls.object.position.clone();\n        const dir = new THREE.Vector3().subVectors(pos, this.controls.target);\n        dir.normalize();\n        dir.multiplyScalar(step * 10);\n    \n    \n        this.controls.object.position.sub(dir);\n        (this.controls.object as any).updateProjectionMatrix();\n\n        this.current.update(this.controls);\n    }\n\n    zoomOut(step: number) {\n\n        const pos = this.controls.object.position.clone();\n        const dir = new THREE.Vector3().subVectors(pos, this.controls.target);\n        dir.normalize();\n        dir.multiplyScalar(step * 10);\n    \n        this.controls.object.position.add(dir);\n        (this.controls.object as any).updateProjectionMatrix();\n\n        this.current.update(this.controls);\n    }\n\n    update() {\n        this.current.update(this.controls);\n    }\n\n    enable() {\n        this.current.enable(this.controls);\n    }\n\n    topView() {\n        const usingOrtho = (this.current.camera as any).isOrthographicCamera;\n\n        if (usingOrtho)\n            this.current.topView(this.controls);\n        else {\n            const distance = this.controls.target.distanceTo(this.controls.object.position);\n            this.current.topView(this.controls, distance);\n        }\n    }\n\n    get camera() {\n        return this.current.camera;\n    }\n\n    get target() {\n        return this.controls.target;\n    }\n\n    useOrtho() {\n        if (!this.orthographic)\n            return;\n\n        if (this.current === this.orthographic)\n            return;\n        \n        this.swap();\n    }\n\n    usePerspective() {\n        if (this.current === this.perspective)\n            return;\n        \n        this.swap();\n    }\n\n    swap() {\n        if (!this.orthographic || !this.csm)\n            return; \n\n        this.current.topView(this.controls);\n        this.current = this.current === this.perspective ? this.orthographic : this.perspective;\n        this.current.enable(this.controls);\n\n        this.csm.camera = this.current.camera;\n        this.csm.updateFrustums();   \n    }\n\n    focus(focusPoint: THREE.Vector2) {\n        const usingOrtho = (this.current.camera as any).isOrthographicCamera;\n\n        if (usingOrtho)\n            this.swap();\n\n        this.controls.target = new THREE.Vector3(focusPoint.x, focusPoint.y, 0);\n        this.perspective.camera.position.x = focusPoint.x;\n        this.perspective.camera.position.y = focusPoint.y;\n        this.perspective.camera.position.z = 1000;\n\n        if (usingOrtho)\n            this.swap();\n    }\n\n    screenToWorldOrthographic(x: number, y: number) {\n        if ((this.current.camera as any).isOrthographicCamera)\n        {\n            const camera = this.current.camera as any;\n            const vector = new THREE.Vector3();\n            vector.set(\n                (x / window.innerWidth) * 2 - 1,\n                - (y / window.innerHeight) * 2 + 1,\n                ( camera.near + camera.far ) / ( camera.near - camera.far )\n            );\n            return vector.unproject( camera );\n        }\n    }\n}","import { Renderer } from './renderer';\nimport * as THREE from 'three';\n\nexport class Compas {\n    renderer: Renderer;\n    camDirection3: THREE.Vector3;\n    camDirection2: THREE.Vector2;\n    north: THREE.Vector2;\n    angle: number;\n\n    constructor(renderer: Renderer) {\n        this.renderer = renderer;\n        this.camDirection3 = new THREE.Vector3(0, 0, 0);\n        this.camDirection2 = new THREE.Vector2(0, 0);\n        this.north = new THREE.Vector2(0, 1);\n        this.angle = 0;\n    }\n\n\n    update(callback?: (angle: number) => void) {\n        this.camDirection3.copy(this.renderer.controls.target);\n        this.camDirection3.sub(this.renderer.controls.camera.position);\n        this.camDirection3.normalize();\n        this.camDirection2.set(this.camDirection3.x, this.camDirection3.y);\n\n        if (this.renderer.controls.camera.up.y === 1) {\n            this.angle = 0;\n        } else {\n            this.camDirection2.normalize();\n            this.angle = Math.acos(this.north.dot(this.camDirection2));\n            if (this.camDirection2.x < 0) {\n                this.angle = -this.angle;\n            }\n        }\n\n        if (callback) {\n            callback(this.angle);\n        }\n    }\n}","import { Vector3, Matrix4 } from 'three';\n\nconst inverseProjectionMatrix = new Matrix4();\n\nclass Frustum {\n\n\tconstructor( data ) {\n\n\t\tdata = data || {};\n\n\t\tthis.vertices = {\n\t\t\tnear: [\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3()\n\t\t\t],\n\t\t\tfar: [\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3()\n\t\t\t]\n\t\t};\n\n\t\tif ( data.projectionMatrix !== undefined ) {\n\n\t\t\tthis.setFromProjectionMatrix( data.projectionMatrix, data.maxFar || 10000 );\n\n\t\t}\n\n\t}\n\n\tsetFromProjectionMatrix( projectionMatrix, maxFar ) {\n\n\t\tconst isOrthographic = projectionMatrix.elements[ 2 * 4 + 3 ] === 0;\n\n\t\tinverseProjectionMatrix.copy( projectionMatrix ).invert();\n\n\t\t// 3 --- 0  vertices.near/far order\n\t\t// |     |\n\t\t// 2 --- 1\n\t\t// clip space spans from [-1, 1]\n\n\t\tthis.vertices.near[ 0 ].set( 1, 1, - 1 );\n\t\tthis.vertices.near[ 1 ].set( 1, - 1, - 1 );\n\t\tthis.vertices.near[ 2 ].set( - 1, - 1, - 1 );\n\t\tthis.vertices.near[ 3 ].set( - 1, 1, - 1 );\n\t\tthis.vertices.near.forEach( function ( v ) {\n\n\t\t\tv.applyMatrix4( inverseProjectionMatrix );\n\n\t\t} );\n\n\t\tthis.vertices.far[ 0 ].set( 1, 1, 1 );\n\t\tthis.vertices.far[ 1 ].set( 1, - 1, 1 );\n\t\tthis.vertices.far[ 2 ].set( - 1, - 1, 1 );\n\t\tthis.vertices.far[ 3 ].set( - 1, 1, 1 );\n\t\tthis.vertices.far.forEach( function ( v ) {\n\n\t\t\tv.applyMatrix4( inverseProjectionMatrix );\n\n\t\t\tconst absZ = Math.abs( v.z );\n\t\t\tif ( isOrthographic ) {\n\n\t\t\t\tv.z *= Math.min( maxFar / absZ, 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\tv.multiplyScalar( Math.min( maxFar / absZ, 1.0 ) );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn this.vertices;\n\n\t}\n\n\tsplit( breaks, target ) {\n\n\t\twhile ( breaks.length > target.length ) {\n\n\t\t\ttarget.push( new Frustum() );\n\n\t\t}\n\n\t\ttarget.length = breaks.length;\n\n\t\tfor ( let i = 0; i < breaks.length; i ++ ) {\n\n\t\t\tconst cascade = target[ i ];\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tfor ( let j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\tcascade.vertices.near[ j ].copy( this.vertices.near[ j ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( let j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\tcascade.vertices.near[ j ].lerpVectors( this.vertices.near[ j ], this.vertices.far[ j ], breaks[ i - 1 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( i === breaks.length - 1 ) {\n\n\t\t\t\tfor ( let j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\tcascade.vertices.far[ j ].copy( this.vertices.far[ j ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( let j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\tcascade.vertices.far[ j ].lerpVectors( this.vertices.near[ j ], this.vertices.far[ j ], breaks[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoSpace( cameraMatrix, target ) {\n\n\t\tfor ( var i = 0; i < 4; i ++ ) {\n\n\t\t\ttarget.vertices.near[ i ]\n\t\t\t\t.copy( this.vertices.near[ i ] )\n\t\t\t\t.applyMatrix4( cameraMatrix );\n\n\t\t\ttarget.vertices.far[ i ]\n\t\t\t\t.copy( this.vertices.far[ i ] )\n\t\t\t\t.applyMatrix4( cameraMatrix );\n\n\t\t}\n\n\t}\n\n}\n\nexport { Frustum };\n","import { ShaderChunk } from 'three';\n\nconst CSMShader = {\n\tlights_fragment_begin: /* glsl */`\nGeometricContext geometry;\n\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n\n#ifdef CLEARCOAT\n\n\tgeometry.clearcoatNormal = clearcoatNormal;\n\n#endif\n\nIncidentLight directLight;\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0) && defined( RE_Direct ) && defined( USE_CSM ) && defined( CSM_CASCADES )\n\n\tDirectionalLight directionalLight;\n\tfloat linearDepth = (vViewPosition.z) / (shadowFar - cameraNear);\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#if defined( USE_SHADOWMAP ) && defined( CSM_FADE )\n\tvec2 cascade;\n\tfloat cascadeCenter;\n\tfloat closestEdge;\n\tfloat margin;\n\tfloat csmx;\n\tfloat csmy;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\n\t\t// NOTE: Depth gets larger away from the camera.\n\t\t// cascade.x is closer, cascade.y is further\n\t\tcascade = CSM_cascades[ i ];\n\t\tcascadeCenter = ( cascade.x + cascade.y ) / 2.0;\n\t\tclosestEdge = linearDepth < cascadeCenter ? cascade.x : cascade.y;\n\t\tmargin = 0.25 * pow( closestEdge, 2.0 );\n\t\tcsmx = cascade.x - margin / 2.0;\n\t\tcsmy = cascade.y + margin / 2.0;\n\t\tif( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS && linearDepth >= csmx && ( linearDepth < csmy || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 ) ) {\n\n\t\t\tfloat dist = min( linearDepth - csmx, csmy - linearDepth );\n\t\t\tfloat ratio = clamp( dist / margin, 0.0, 1.0 );\n\t\t\tif( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS ) {\n\n\t\t\t\tvec3 prevColor = directLight.color;\n\t\t\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\t\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t\t\t\tbool shouldFadeLastCascade = UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 && linearDepth > cascadeCenter;\n\t\t\t\tdirectLight.color = mix( prevColor, directLight.color, shouldFadeLastCascade ? ratio : 1.0 );\n\n\t\t\t}\n\n\t\t\tReflectedLight prevLight = reflectedLight;\n\t\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t\t\tbool shouldBlend = UNROLLED_LOOP_INDEX != CSM_CASCADES - 1 || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 && linearDepth < cascadeCenter;\n\t\t\tfloat blendRatio = shouldBlend ? ratio : 1.0;\n\n\t\t\treflectedLight.directDiffuse = mix( prevLight.directDiffuse, reflectedLight.directDiffuse, blendRatio );\n\t\t\treflectedLight.directSpecular = mix( prevLight.directSpecular, reflectedLight.directSpecular, blendRatio );\n\t\t\treflectedLight.indirectDiffuse = mix( prevLight.indirectDiffuse, reflectedLight.indirectDiffuse, blendRatio );\n\t\t\treflectedLight.indirectSpecular = mix( prevLight.indirectSpecular, reflectedLight.indirectSpecular, blendRatio );\n\n\t\t}\n\n\t}\n\t#pragma unroll_loop_end\n\t#else\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tif(linearDepth >= CSM_cascades[UNROLLED_LOOP_INDEX].x && linearDepth < CSM_cascades[UNROLLED_LOOP_INDEX].y) directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t\t#endif\n\n\t\tif(linearDepth >= CSM_cascades[UNROLLED_LOOP_INDEX].x && (linearDepth < CSM_cascades[UNROLLED_LOOP_INDEX].y || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1)) RE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct ) && !defined( USE_CSM ) && !defined( CSM_CASCADES )\n\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\n\tRectAreaLight rectAreaLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n\tvec3 iblIrradiance = vec3( 0.0 );\n\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n\n#endif\n`,\n\tlights_pars_begin: /* glsl */`\n#if defined( USE_CSM ) && defined( CSM_CASCADES )\nuniform vec2 CSM_cascades[CSM_CASCADES];\nuniform float cameraNear;\nuniform float shadowFar;\n#endif\n\t` + ShaderChunk.lights_pars_begin\n};\n\nexport { CSMShader };\n","import {\n\tVector2,\n\tVector3,\n\tDirectionalLight,\n\tMathUtils,\n\tShaderChunk,\n\tMatrix4,\n\tBox3\n} from 'three';\nimport { Frustum } from './Frustum.js';\nimport { CSMShader } from './CSMShader.js';\n\nconst _cameraToLightMatrix = new Matrix4();\nconst _lightSpaceFrustum = new Frustum();\nconst _center = new Vector3();\nconst _bbox = new Box3();\nconst _uniformArray = [];\nconst _logArray = [];\n\nexport class CSM {\n\n\tconstructor( data ) {\n\n\t\tdata = data || {};\n\n\t\tthis.camera = data.camera;\n\t\tthis.parent = data.parent;\n\t\tthis.cascades = data.cascades || 3;\n\t\tthis.maxFar = data.maxFar || 100000;\n\t\tthis.mode = data.mode || 'practical';\n\t\tthis.shadowMapSize = data.shadowMapSize || 2048;\n\t\tthis.shadowBias = [];\n\n\t\tfor(let i = 0; i < this.cascades; ++i)\n\t\t\tthis.shadowBias.push(data.shadowBias ? data.shadowBias[i] : 0.000001);\n\n\t\tthis.lightDirection = data.lightDirection || new Vector3( 1, - 1, 1 ).normalize();\n\t\tthis.lightIntensity = data.lightIntensity || 1;\n\t\tthis.lightNear = data.lightNear || 1;\n\t\tthis.lightFar = data.lightFar || 2000;\n\t\t\n\t\tthis.lightMargin = data.lightMargin || 200;\n\t\tthis.customSplitsCallback = data.customSplitsCallback;\n\t\tthis.fade = false;\n\t\tthis.mainFrustum = new Frustum();\n\t\tthis.frustums = [];\n\t\tthis.breaks = [];\n\n\t\tthis.lights = [];\n\t\tthis.shaders = new Map();\n\n\t\tthis.createLights();\n\t\tthis.updateFrustums();\n\t\tthis.injectInclude();\n\n\t}\n\n\tcreateLights() {\n\n\t\tfor ( let i = 0; i < this.cascades; i ++ ) {\n\n\t\t\tconst light = new DirectionalLight( 0xffffff, this.lightIntensity );\n\t\t\tlight.castShadow = true;\n\t\t\tlight.shadow.mapSize.width = this.shadowMapSize;\n\t\t\tlight.shadow.mapSize.height = this.shadowMapSize;\n\n\t\t\tlight.shadow.camera.near = this.lightNear;\n\t\t\tlight.shadow.camera.far = this.lightFar;\n\t\t\tlight.shadow.bias = this.shadowBias[i];\n\n\t\t\tthis.parent.add( light );\n\t\t\tthis.parent.add( light.target );\n\t\t\tthis.lights.push( light );\n\n\t\t}\n\n\t}\n\n\tinitCascades() {\n\n\t\tconst camera = this.camera;\n\t\tcamera.updateProjectionMatrix();\n\t\tthis.mainFrustum.setFromProjectionMatrix( camera.projectionMatrix, this.maxFar );\n\t\tthis.mainFrustum.split( this.breaks, this.frustums );\n\n\t}\n\n\tupdateShadowBounds() {\n\n\t\tconst frustums = this.frustums;\n\t\tfor ( let i = 0; i < frustums.length; i ++ ) {\n\n\t\t\tconst light = this.lights[ i ];\n\t\t\tconst shadowCam = light.shadow.camera;\n\t\t\tconst frustum = this.frustums[ i ];\n\n\t\t\t// Get the two points that represent that furthest points on the frustum assuming\n\t\t\t// that's either the diagonal across the far plane or the diagonal across the whole\n\t\t\t// frustum itself.\n\t\t\tconst nearVerts = frustum.vertices.near;\n\t\t\tconst farVerts = frustum.vertices.far;\n\t\t\tconst point1 = farVerts[ 0 ];\n\t\t\tlet point2;\n\t\t\tif ( point1.distanceTo( farVerts[ 2 ] ) > point1.distanceTo( nearVerts[ 2 ] ) ) {\n\n\t\t\t\tpoint2 = farVerts[ 2 ];\n\n\t\t\t} else {\n\n\t\t\t\tpoint2 = nearVerts[ 2 ];\n\n\t\t\t}\n\n\t\t\tlet squaredBBWidth = point1.distanceTo( point2 );\n\t\t\tif ( this.fade ) {\n\n\t\t\t\t// expand the shadow extents by the fade margin if fade is enabled.\n\t\t\t\tconst camera = this.camera;\n\t\t\t\tconst far = Math.max( camera.far, this.maxFar );\n\t\t\t\tconst linearDepth = frustum.vertices.far[ 0 ].z / ( far - camera.near );\n\t\t\t\tconst margin = 0.25 * Math.pow( linearDepth, 2.0 ) * ( far - camera.near );\n\t\t\t\tsquaredBBWidth += margin;\n\n\t\t\t}\n\n\t\t\tshadowCam.left = - squaredBBWidth / 2;\n\t\t\tshadowCam.right = squaredBBWidth / 2;\n\t\t\tshadowCam.top = squaredBBWidth / 2;\n\t\t\tshadowCam.bottom = - squaredBBWidth / 2;\n\t\t\tshadowCam.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n\tgetBreaks() {\n\n\t\tconst camera = this.camera;\n\t\tconst far = Math.min( camera.far, this.maxFar );\n\t\tthis.breaks.length = 0;\n\n\t\tswitch ( this.mode ) {\n\n\t\t\tcase 'uniform':\n\t\t\t\tuniformSplit( this.cascades, camera.near, far, this.breaks );\n\t\t\t\tbreak;\n\t\t\tcase 'logarithmic':\n\t\t\t\tlogarithmicSplit( this.cascades, camera.near, far, this.breaks );\n\t\t\t\tbreak;\n\t\t\tcase 'practical':\n\t\t\t\tpracticalSplit( this.cascades, camera.near, far, 0.8, this.breaks );\n\t\t\t\tbreak;\n\t\t\tcase 'custom':\n\t\t\t\tif ( this.customSplitsCallback === undefined ) console.error( 'CSM: Custom split scheme callback not defined.' );\n\t\t\t\tthis.customSplitsCallback( this.cascades, camera.near, far, this.breaks );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tfunction uniformSplit( amount, near, far, target ) {\n\n\t\t\tfor ( let i = 1; i < amount; i ++ ) {\n\n\t\t\t\ttarget.push( ( near + ( far - near ) * i / amount ) / far );\n\n\t\t\t}\n\n\t\t\ttarget.push( 1 );\n\n\t\t}\n\n\t\tfunction logarithmicSplit( amount, near, far, target ) {\n\n\t\t\tfor ( let i = 1; i < amount; i ++ ) {\n\n\t\t\t\ttarget.push( ( near * ( far / near ) ** ( i / amount ) ) / far );\n\n\t\t\t}\n\n\t\t\ttarget.push( 1 );\n\n\t\t}\n\n\t\tfunction practicalSplit( amount, near, far, lambda, target ) {\n\n\t\t\t_uniformArray.length = 0;\n\t\t\t_logArray.length = 0;\n\t\t\tlogarithmicSplit( amount, near, far, _logArray );\n\t\t\tuniformSplit( amount, near, far, _uniformArray );\n\n\t\t\tfor ( let i = 1; i < amount; i ++ ) {\n\n\t\t\t\ttarget.push( MathUtils.lerp( _uniformArray[ i - 1 ], _logArray[ i - 1 ], lambda ) );\n\n\t\t\t}\n\n\t\t\ttarget.push( 1 );\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst camera = this.camera;\n\t\tconst frustums = this.frustums;\n\t\tfor ( let i = 0; i < frustums.length; i ++ ) {\n\n\t\t\tconst light = this.lights[ i ];\n\t\t\tconst shadowCam = light.shadow.camera;\n\t\t\tconst texelWidth = ( shadowCam.right - shadowCam.left ) / this.shadowMapSize;\n\t\t\tconst texelHeight = ( shadowCam.top - shadowCam.bottom ) / this.shadowMapSize;\n\t\t\tlight.shadow.camera.updateMatrixWorld( true );\n\t\t\t_cameraToLightMatrix.multiplyMatrices( light.shadow.camera.matrixWorldInverse, camera.matrixWorld );\n\t\t\tfrustums[ i ].toSpace( _cameraToLightMatrix, _lightSpaceFrustum );\n\n\t\t\tconst nearVerts = _lightSpaceFrustum.vertices.near;\n\t\t\tconst farVerts = _lightSpaceFrustum.vertices.far;\n\t\t\t_bbox.makeEmpty();\n\t\t\tfor ( let j = 0; j < 4; j ++ ) {\n\n\t\t\t\t_bbox.expandByPoint( nearVerts[ j ] );\n\t\t\t\t_bbox.expandByPoint( farVerts[ j ] );\n\n\t\t\t}\n\n\t\t\t_bbox.getCenter( _center );\n\t\t\t_center.z = _bbox.max.z + this.lightMargin;\n\t\t\t_center.x = Math.floor( _center.x / texelWidth ) * texelWidth;\n\t\t\t_center.y = Math.floor( _center.y / texelHeight ) * texelHeight;\n\t\t\t_center.applyMatrix4( light.shadow.camera.matrixWorld );\n\n\t\t\tlight.position.copy( _center );\n\t\t\tlight.target.position.copy( _center );\n\n\t\t\tlight.target.position.x += this.lightDirection.x;\n\t\t\tlight.target.position.y += this.lightDirection.y;\n\t\t\tlight.target.position.z += this.lightDirection.z;\n\n\t\t}\n\n\t}\n\n\tinjectInclude() {\n\n\t\tShaderChunk.lights_fragment_begin = CSMShader.lights_fragment_begin;\n\t\tShaderChunk.lights_pars_begin = CSMShader.lights_pars_begin;\n\n\t}\n\n\tsetupMaterial( material ) {\n\n\t\tmaterial.defines = material.defines || {};\n\t\tmaterial.defines.USE_CSM = 1;\n\t\tmaterial.defines.CSM_CASCADES = this.cascades;\n\n\t\tif ( this.fade ) {\n\n\t\t\tmaterial.defines.CSM_FADE = '';\n\n\t\t}\n\n\t\tconst breaksVec2 = [];\n\t\tconst scope = this;\n\t\tconst shaders = this.shaders;\n\n\t\tmaterial.onBeforeCompile = function ( shader ) {\n\n\t\t\tconst far = Math.min( scope.camera.far, scope.maxFar );\n\t\t\tscope.getExtendedBreaks( breaksVec2 );\n\n\t\t\tshader.uniforms.CSM_cascades = { value: breaksVec2 };\n\t\t\tshader.uniforms.cameraNear = { value: scope.camera.near };\n\t\t\tshader.uniforms.shadowFar = { value: far };\n\n\t\t\tshaders.set( material, shader );\n\n\t\t};\n\n\t\tshaders.set( material, null );\n\n\t}\n\n\tupdateUniforms() {\n\n\t\tconst far = Math.min( this.camera.far, this.maxFar );\n\t\tconst shaders = this.shaders;\n\n\t\tshaders.forEach( function ( shader, material ) {\n\n\t\t\tif ( shader !== null ) {\n\n\t\t\t\tconst uniforms = shader.uniforms;\n\t\t\t\tthis.getExtendedBreaks( uniforms.CSM_cascades.value );\n\t\t\t\tuniforms.cameraNear.value = this.camera.near;\n\t\t\t\tuniforms.shadowFar.value = far;\n\n\t\t\t}\n\n\t\t\tif ( ! this.fade && 'CSM_FADE' in material.defines ) {\n\n\t\t\t\tdelete material.defines.CSM_FADE;\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( this.fade && ! ( 'CSM_FADE' in material.defines ) ) {\n\n\t\t\t\tmaterial.defines.CSM_FADE = '';\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}, this );\n\n\t}\n\n\tgetExtendedBreaks( target ) {\n\n\t\twhile ( target.length < this.breaks.length ) {\n\n\t\t\ttarget.push( new Vector2() );\n\n\t\t}\n\n\t\ttarget.length = this.breaks.length;\n\n\t\tfor ( let i = 0; i < this.cascades; i ++ ) {\n\n\t\t\tconst amount = this.breaks[ i ];\n\t\t\tconst prev = this.breaks[ i - 1 ] || 0;\n\t\t\ttarget[ i ].x = prev;\n\t\t\ttarget[ i ].y = amount;\n\n\t\t}\n\n\t}\n\n\tupdateFrustums() {\n\n\t\tthis.getBreaks();\n\t\tthis.initCascades();\n\t\tthis.updateShadowBounds();\n\t\tthis.updateUniforms();\n\n\t}\n\n\tremove() {\n\n\t\tfor ( let i = 0; i < this.lights.length; i ++ ) {\n\n\t\t\tthis.parent.remove( this.lights[ i ] );\n\n\t\t}\n\n\t}\n\n\tdispose() {\n\n\t\tconst shaders = this.shaders;\n\t\tshaders.forEach( function ( shader, material ) {\n\n\t\t\tdelete material.onBeforeCompile;\n\t\t\tdelete material.defines.USE_CSM;\n\t\t\tdelete material.defines.CSM_CASCADES;\n\t\t\tdelete material.defines.CSM_FADE;\n\n\t\t\tif ( shader !== null ) {\n\n\t\t\t\tdelete shader.uniforms.CSM_cascades;\n\t\t\t\tdelete shader.uniforms.cameraNear;\n\t\t\t\tdelete shader.uniforms.shadowFar;\n\n\t\t\t}\n\n\t\t\tmaterial.needsUpdate = true;\n\n\t\t} );\n\t\tshaders.clear();\n\n\t}\n\n}\n","import {\n\tGroup,\n\tMesh,\n\tLineSegments,\n\tBufferGeometry,\n\tLineBasicMaterial,\n\tBox3Helper,\n\tBox3,\n\tPlaneGeometry,\n\tMeshBasicMaterial,\n\tBufferAttribute,\n\tDoubleSide\n} from 'three';\n\nclass CSMHelper extends Group {\n\n\tconstructor( csm ) {\n\n\t\tsuper();\n\t\tthis.csm = csm;\n\t\tthis.displayFrustum = true;\n\t\tthis.displayPlanes = true;\n\t\tthis.displayShadowBounds = true;\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 24 );\n\t\tconst frustumGeometry = new BufferGeometry();\n\t\tfrustumGeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tfrustumGeometry.setAttribute( 'position', new BufferAttribute( positions, 3, false ) );\n\t\tconst frustumLines = new LineSegments( frustumGeometry, new LineBasicMaterial() );\n\t\tthis.add( frustumLines );\n\n\t\tthis.frustumLines = frustumLines;\n\t\tthis.cascadeLines = [];\n\t\tthis.cascadePlanes = [];\n\t\tthis.shadowLines = [];\n\n\t}\n\n\tupdateVisibility() {\n\n\t\tconst displayFrustum = this.displayFrustum;\n\t\tconst displayPlanes = this.displayPlanes;\n\t\tconst displayShadowBounds = this.displayShadowBounds;\n\n\t\tconst frustumLines = this.frustumLines;\n\t\tconst cascadeLines = this.cascadeLines;\n\t\tconst cascadePlanes = this.cascadePlanes;\n\t\tconst shadowLines = this.shadowLines;\n\t\tfor ( let i = 0, l = cascadeLines.length; i < l; i ++ ) {\n\n\t\t\tconst cascadeLine = cascadeLines[ i ];\n\t\t\tconst cascadePlane = cascadePlanes[ i ];\n\t\t\tconst shadowLineGroup = shadowLines[ i ];\n\n\t\t\tcascadeLine.visible = displayFrustum;\n\t\t\tcascadePlane.visible = displayFrustum && displayPlanes;\n\t\t\tshadowLineGroup.visible = displayShadowBounds;\n\n\t\t}\n\n\t\tfrustumLines.visible = displayFrustum;\n\n\t}\n\n\tupdate() {\n\n\t\tconst csm = this.csm;\n\t\tconst camera = csm.camera;\n\t\tconst cascades = csm.cascades;\n\t\tconst mainFrustum = csm.mainFrustum;\n\t\tconst frustums = csm.frustums;\n\t\tconst lights = csm.lights;\n\n\t\tconst frustumLines = this.frustumLines;\n\t\tconst frustumLinePositions = frustumLines.geometry.getAttribute( 'position' );\n\t\tconst cascadeLines = this.cascadeLines;\n\t\tconst cascadePlanes = this.cascadePlanes;\n\t\tconst shadowLines = this.shadowLines;\n\n\t\tthis.position.copy( camera.position );\n\t\tthis.quaternion.copy( camera.quaternion );\n\t\tthis.scale.copy( camera.scale );\n\t\tthis.updateMatrixWorld( true );\n\n\t\twhile ( cascadeLines.length > cascades ) {\n\n\t\t\tthis.remove( cascadeLines.pop() );\n\t\t\tthis.remove( cascadePlanes.pop() );\n\t\t\tthis.remove( shadowLines.pop() );\n\n\t\t}\n\n\t\twhile ( cascadeLines.length < cascades ) {\n\n\t\t\tconst cascadeLine = new Box3Helper( new Box3(), 0x000000 );\n\t\t\tconst planeMat = new MeshBasicMaterial( { color: 0x000000, transparent: true, opacity: 0.1, depthWrite: false, side: DoubleSide } );\n\t\t\tconst cascadePlane = new Mesh( new PlaneGeometry(), planeMat );\n\t\t\tconst shadowLineGroup = new Group();\n\t\t\tconst shadowLine = new Box3Helper( new Box3(), 0xff0000 );\n\t\t\tshadowLineGroup.add( shadowLine );\n\n\t\t\tthis.add( cascadeLine );\n\t\t\tthis.add( cascadePlane );\n\t\t\tthis.add( shadowLineGroup );\n\n\t\t\tcascadeLines.push( cascadeLine );\n\t\t\tcascadePlanes.push( cascadePlane );\n\t\t\tshadowLines.push( shadowLineGroup );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < cascades; i ++ ) {\n\n\t\t\tconst frustum = frustums[ i ];\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadowCam = light.shadow.camera;\n\t\t\tconst farVerts = frustum.vertices.far;\n\n\t\t\tconst cascadeLine = cascadeLines[ i ];\n\t\t\tconst cascadePlane = cascadePlanes[ i ];\n\t\t\tconst shadowLineGroup = shadowLines[ i ];\n\t\t\tconst shadowLine = shadowLineGroup.children[ 0 ];\n\n\t\t\tcascadeLine.box.min.copy( farVerts[ 2 ] );\n\t\t\tcascadeLine.box.max.copy( farVerts[ 0 ] );\n\t\t\tcascadeLine.box.max.z += 1e-4;\n\n\t\t\tcascadePlane.position.addVectors( farVerts[ 0 ], farVerts[ 2 ] );\n\t\t\tcascadePlane.position.multiplyScalar( 0.5 );\n\t\t\tcascadePlane.scale.subVectors( farVerts[ 0 ], farVerts[ 2 ] );\n\t\t\tcascadePlane.scale.z = 1e-4;\n\n\t\t\tthis.remove( shadowLineGroup );\n\t\t\tshadowLineGroup.position.copy( shadowCam.position );\n\t\t\tshadowLineGroup.quaternion.copy( shadowCam.quaternion );\n\t\t\tshadowLineGroup.scale.copy( shadowCam.scale );\n\t\t\tshadowLineGroup.updateMatrixWorld( true );\n\t\t\tthis.attach( shadowLineGroup );\n\n\t\t\tshadowLine.box.min.set( shadowCam.bottom, shadowCam.left, - shadowCam.far );\n\t\t\tshadowLine.box.max.set( shadowCam.top, shadowCam.right, - shadowCam.near );\n\n\t\t}\n\n\t\tconst nearVerts = mainFrustum.vertices.near;\n\t\tconst farVerts = mainFrustum.vertices.far;\n\t\tfrustumLinePositions.setXYZ( 0, farVerts[ 0 ].x, farVerts[ 0 ].y, farVerts[ 0 ].z );\n\t\tfrustumLinePositions.setXYZ( 1, farVerts[ 3 ].x, farVerts[ 3 ].y, farVerts[ 3 ].z );\n\t\tfrustumLinePositions.setXYZ( 2, farVerts[ 2 ].x, farVerts[ 2 ].y, farVerts[ 2 ].z );\n\t\tfrustumLinePositions.setXYZ( 3, farVerts[ 1 ].x, farVerts[ 1 ].y, farVerts[ 1 ].z );\n\n\t\tfrustumLinePositions.setXYZ( 4, nearVerts[ 0 ].x, nearVerts[ 0 ].y, nearVerts[ 0 ].z );\n\t\tfrustumLinePositions.setXYZ( 5, nearVerts[ 3 ].x, nearVerts[ 3 ].y, nearVerts[ 3 ].z );\n\t\tfrustumLinePositions.setXYZ( 6, nearVerts[ 2 ].x, nearVerts[ 2 ].y, nearVerts[ 2 ].z );\n\t\tfrustumLinePositions.setXYZ( 7, nearVerts[ 1 ].x, nearVerts[ 1 ].y, nearVerts[ 1 ].z );\n\t\tfrustumLinePositions.needsUpdate = true;\n\n\t}\n\n}\n\nexport { CSMHelper };\n","import * as THREE from 'three';\n\n\nexport class GPUPickHelper {\n    pickingTexture: THREE.WebGLRenderTarget;\n    pixelBuffer: Uint8Array;\n    renderer: THREE.WebGLRenderer;\n\n    selected: number[];\n    id: number;\n\n    offsets: Map<string, [number, number]>;\n    maxOffest: number;\n\n\n    constructor(renderer: THREE.WebGLRenderer) {\n        // create a 1x1 pixel render target\n        this.pickingTexture = new THREE.WebGLRenderTarget(1, 1);\n        this.pixelBuffer = new Uint8Array(4);\n        this.renderer = renderer;\n        this.selected = [-1, -1, -1, -1];\n        this.id = -1;\n        this.offsets = new Map();\n        this.maxOffest = 0;\n    }\n\n    offsetForLayer(name: string, size: number = -1) {\n        if (!this.offsets.has(name))\n        {\n            if (size === -1)\n            {\n                throw new Error(`Layer ${name} not registered.`);    \n                //return undefined;\n            }\n\n            this.offsets.set(name, [this.maxOffest, this.maxOffest + size]);\n            this.maxOffest += size;\n        }\n\n        let range = this.offsets.get(name);\n        return (range as [number, number])[0];\n    }\n\n    layerAndOidForId(id: number) {\n        for (const [layer, range] of this.offsets.entries()) {\n            if (id >= range[0] && id < range[1])\n                return {\n                    layer: layer,\n                    oid: id - range[0]\n                };\n        }\n    }\n\n    select(oid: number) {\n        this.id = oid;\n        const oid_array = new Uint32Array([oid]);\n        const oid_view = new DataView(oid_array.buffer);\n        this.selected = [oid_view.getUint8(0) / 255, oid_view.getUint8(1) / 255, oid_view.getUint8(2) / 255, oid_view.getUint8(3) / 255];\n    }\n\n    pick(x: number, y: number, scene: THREE.Scene, camera: THREE.OrthographicCamera | THREE.PerspectiveCamera) {\n        const { pickingTexture, pixelBuffer } = this;\n\n        // set the view offset to represent just a single pixel under the mouse\n        const pixelRatio = this.renderer.getPixelRatio();\n        camera.setViewOffset(\n            this.renderer.getContext().drawingBufferWidth,\n            this.renderer.getContext().drawingBufferHeight,\n            x * pixelRatio | 0,\n            y * pixelRatio | 0,\n            1,\n            1,\n        );\n        // render the scene\n        this.renderer.setRenderTarget(pickingTexture)\n        this.renderer.render(scene, camera);\n        this.renderer.setRenderTarget(null);\n\n        // clear the view offset so rendering returns to normal\n        camera.clearViewOffset();\n\n        //read the pixel\n        this.renderer.readRenderTargetPixels(\n            pickingTexture,\n            0,   // x\n            0,   // y\n            1,   // width\n            1,   // height\n            pixelBuffer);\n\n        this.selected = [pixelBuffer[0] / 255, pixelBuffer[1] / 255, pixelBuffer[2] / 255, pixelBuffer[3] / 255];\n        this.id = new DataView(pixelBuffer.buffer).getUint32(0, true);\n        return this.id;\n    }\n}","import * as THREE from 'three';\nimport { toSpiral } from '../utils/indexing';\nimport { Renderer } from './renderer';\n\n\nfunction getRandomColor() {\n    var letters = '89ABCDEF';\n    var color = '';\n    let a = Math.floor(Math.random() * 7);\n    let b = Math.floor(Math.random() * 7);\n    for (var i = 0; i < 3; i++) {\n        color += letters[a];\n        color += letters[b];\n    }\n    return color;\n}\n\n\n\nexport class GridPlaceholders {\n    placeholders: Map<number, THREE.Mesh>;\n    visibilityMap: Map<number, number>\n\n    renderer: Renderer\n\n    constructor(renderer: Renderer) {\n        this.renderer = renderer;\n        this.placeholders = new Map();\n        this.visibilityMap = new Map();\n    }\n\n    genPlaceholder(x: number, y: number) {\n        const xdim = 1000;\n        const ydim = 1000;\n        const geometry = new THREE.PlaneGeometry(xdim, ydim);\n        const color = getRandomColor();\n        const material = new THREE.MeshBasicMaterial({ color: parseInt(color, 16), opacity: 0.1, transparent: true });\n        const mesh = new THREE.Mesh(geometry, material);\n        mesh.position.set(x * 1000 + xdim / 2, y * 1000 + ydim / 2, 0);\n        mesh.visible = true;\n        return mesh;\n    }\n\n    addPlaceholder(x: number, y: number) {\n        const index = toSpiral(x, y);\n        const plc = this.placeholders.get(index);\n\n        if (plc !== undefined) {\n            return;\n        }\n\n        const placeholder = this.genPlaceholder(x, y);\n        this.placeholders.set(index, placeholder);\n        this.renderer.scene.add(placeholder);\n    }\n\n    hidePlaceholder(x: number, y: number) {\n        const index = toSpiral(x, y);\n        let count = this.visibilityMap.get(index);\n\n        if (count === undefined)\n            count = 0;\n\n        this.visibilityMap.set(index, count + 1);\n\n        if (count >= 0) {\n            (this.placeholders.get(index) as THREE.Mesh).visible = false;\n        }\n    }\n\n    showPlaceholder(x: number, y: number) {\n        const index = toSpiral(x, y);\n        let count = this.visibilityMap.get(index);\n\n        if (count === undefined)\n            return;\n\n        this.visibilityMap.set(index, count - 1);\n\n        if (count - 1 === 0) {\n            (this.placeholders.get(index) as THREE.Mesh).visible = true;\n        }\n    }\n\n\n}","import { Renderer } from './renderer'\nimport * as THREE from 'three';\nimport { AreaSelection } from '../types';\n\nexport class Selector {\n\n    renderer: Renderer;\n    cube: THREE.Mesh;\n    ends: THREE.Vector2[];\n    region?: AreaSelection;\n\n    constructor(renderer: Renderer) {\n        this.renderer = renderer;\n        const geometry = new THREE.BoxGeometry(1, 1, 1);\n\n        const material = new THREE.MeshBasicMaterial({\n            color: 0x00FF00,\n            transparent: true,\n            opacity: 0.5\n        });\n\n        this.cube = new THREE.Mesh( geometry, material );\n        this.renderer.scene.add( this.cube );\n        this.ends = [];\n        this.cube.visible = false;\n    }\n\n    select(x: number, y: number) {\n        const v = this.renderer.controls.screenToWorldOrthographic(x, y);\n        if (!v)\n            return;\n\n        this.ends.push(new THREE.Vector2(v.x, v.y));\n\n        this.cube.visible = true;\n        this.renderer.changed = true;\n        \n        if (this.ends.length < 2)\n            return this.initCube(v);\n        else\n            return this.transformCube();\n    }\n\n    private transformCube() {\n        const end: THREE.Vector2 = this.ends.pop() as any;\n        const tmp: THREE.Vector2 = this.ends[0].clone() as any;\n        const start = new THREE.Vector2(end.x, end.y);\n\n        start.min(tmp);\n        end.max(tmp);\n        tmp.copy(end).sub(start); //tmp is now size\n\n        this.cube.scale.set(tmp.x, tmp.y, 1);\n        this.cube.position.set(start.x + tmp.x * 0.5, start.y + tmp.y * 0.5, this.renderer.controls.camera.position.z - 10);\n        this.cube.updateMatrixWorld();\n        this.region = {\n            start: [start.x, start.y],\n            end: [end.x, end.y],\n            size: [tmp.x, tmp.y]\n        };\n    }\n\n    private initCube(v: THREE.Vector3) {\n        this.cube.position.x = v.x;\n        this.cube.position.y = v.y;\n        this.cube.position.z = 0;\n        this.cube.scale.set(1, 1, 1);\n        this.cube.updateMatrixWorld();\n    }\n\n    clear() {\n        this.ends = [];\n        this.cube.visible = false;\n        this.renderer.changed = true;\n        this.region = undefined;\n    }\n}\n\n\n","import * as THREE from 'three';\nimport { CSM } from 'three/examples/jsm/csm/CSM';\n\nexport const PHONG_SELECT_VERT = `\n#define PHONG\n\nvarying vec3 vViewPosition;\n\nuniform vec4 selectedID;\n\nattribute vec4 objectID;\nattribute vec3 color;\nvarying float varyingObjectID;\nvarying vec3 colorFrag;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n    int marked = 1;\n\n    for(int i = 0; i < 4; ++i)\n        marked *= int(floor(selectedID[i] * 255.0 + 0.5) == floor(objectID[i] * 255.0 + 0.5));\n\n    varyingObjectID = float(marked);\n\tcolorFrag = color;\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n`;\n\n\nexport const PHONG_SELECT_FRAG = `\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\nvarying float varyingObjectID;\nvarying vec3 colorFrag;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4(diffuse, opacity);\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = clamp(reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance, 0.75, 1.0) * colorFrag;\n\t\n\tif (varyingObjectID > 0.5) \n\t\toutgoingLight -= vec3(0.0, 0.6, 0.6); \n\n\n\t//outgoingLight -= vec3(0.8);\n\t//vec3 shade = outgoingLight;\n\t//const vec3 slices = vec3(10.0);\n\t//const vec3 slices_inv = vec3(1.0) / slices;\n\t//outgoingLight *= vec3(5.0);\n\t//outgoingLight *= slices;\n\t//outgoingLight = floor(outgoingLight + vec3(0.5));\n\t//outgoingLight *= slices_inv;\n\t//outgoingLight = pow(outgoingLight, vec3(0.4));\n\t//outgoingLight *= vec3(0.3);\n\t//outgoingLight += vec3(0.7);\n\n\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n\n\nexport function polygonSelectMaterial() {\n\n\tconst customUniforms = THREE.UniformsUtils.merge([\n\t\tTHREE.ShaderLib.phong.uniforms,\n\t\t{ selectedID: { value: [-1, -1, -1, -1] } }\n\t]);\n\n\treturn new THREE.ShaderMaterial({\n\t\tuniforms: customUniforms,\n\t\tvertexShader: PHONG_SELECT_VERT,\n\t\tfragmentShader: PHONG_SELECT_FRAG,\n\t\tlights: true,\n\t\tside: THREE.DoubleSide,\n\t\tname: 'custom-polygon-material'\n\t});\n}\n\nexport const PHONG_LINE_VERT = `\n#define PHONG\n\nvarying vec3 vViewPosition;\n\nattribute vec3 lineStart;\nattribute vec3 lineEnd;\nattribute vec3 color;\nattribute vec4 objectID;\n\nuniform float zoffset;\nuniform vec4 selectedID;\nuniform float thickness;\n\nvarying float varyingObjectID;\nvarying vec3 colorFrag;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n/**\n * Create rotation matrix from field vector.\n * The returned matrix can rotate vector (1, 0, 0)\n * into the desired setup.\n */\nmat4 getRotationMat(vec3 vector)\n{\n\tvec3 unit = vec3(1, 0, 0);\n\tvec3 f = normalize(vector);\n\tvec3 cross = cross(f, unit);\n\tvec3 a = normalize(cross);\n\tfloat s = length(cross);\n\tfloat c = dot(f, unit);\n\tfloat oc = 1.0 - c;\n\treturn mat4(oc * a.x * a.x + c,        oc * a.x * a.y - a.z * s,  oc * a.z * a.x + a.y * s,  0.0,\n                oc * a.x * a.y + a.z * s,  oc * a.y * a.y + c,        oc * a.y * a.z - a.x * s,  0.0,\n                oc * a.z * a.x - a.y * s,  oc * a.y * a.z + a.x * s,  oc * a.z * a.z + c,        0.0,\n                0.0,                       0.0,                       0.0,                       1.0);\n\n}\n\nvoid main() {\n    int marked = 1;\n\n    for(int i = 0; i < 4; ++i)\n        marked *= int(floor(selectedID[i] * 255.0 + 0.5) == floor(objectID[i] * 255.0 + 0.5));\n\n    varyingObjectID = float(marked);\n\tcolorFrag = color;\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\n\t#include <begin_vertex> //transformed contains location\n\n\tvec3 dir = lineEnd - lineStart;\n    float dist = length(dir);\n    mat4 rot = getRotationMat(dir);\n\n\tfloat end = float(transformed.x >= 0.9);\n\ttransformed.x = end * (dist + (transformed.x - 1.0) * thickness) + (1.0 - end) * transformed.x * thickness; //subtract one because its the original length of the template line\n\ttransformed.y *= thickness;\n\n    transformed = lineStart + (rot * vec4(transformed, 1.0)).xyz;\n\ttransformed.z += zoffset;\n\n\tif (varyingObjectID > 0.5)\n\t\ttransformed.z += zoffset;\n\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = -mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n`;\n\n\nexport const PHONG_LINE_FRAG = `\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\nvarying float varyingObjectID;\nvarying vec3 colorFrag;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\t//vec4 diffuseColor = vec4(diffuse, opacity);\n\t//ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t//vec3 totalEmissiveRadiance = emissive;\n\n\t//#include <logdepthbuf_fragment>\n\t//#include <map_fragment>\n\t//#include <color_fragment>\n\t//#include <alphamap_fragment>\n\t//#include <alphatest_fragment>\n\t//#include <specularmap_fragment>\n\t//#include <normal_fragment_begin>\n\t//#include <normal_fragment_maps>\n\t//#include <emissivemap_fragment>\n\n\t// accumulation\n\t//#include <lights_phong_fragment>\n\t//#include <lights_fragment_begin>\n\t//#include <lights_fragment_maps>\n\t//#include <lights_fragment_end>\n\n\t// modulation\n\t//#include <aomap_fragment>\n\n\t//vec3 outgoingLight = clamp(reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance, 0.75, 1.0) * colorFrag;\n\tvec3 outgoingLight = colorFrag;\n\n\t\n\tif (varyingObjectID > 0.5) \n\t\toutgoingLight -= vec3(0.0, 0.6, 0.6); \n\n\n\t//#include <envmap_fragment>\n\t//#include <output_fragment>\n\t//the output is replaced by the segment bellow\n\tgl_FragColor = vec4( outgoingLight, 1.0 );\n\n\t//#include <tonemapping_fragment>\n\t//#include <encodings_fragment>\n\t//#include <fog_fragment>\n\t//#include <premultiplied_alpha_fragment>\n\t//#include <dithering_fragment>\n}\n`;\n\n\nexport function lineMaterial() {\n\tconst customUniforms = THREE.UniformsUtils.merge([\n\t\t//THREE.ShaderLib.phong.uniforms,\n\t\t{ zoffset: { value: 1 } },\n\t\t{ thickness: { value: 1 } },\n\t\t{ selectedID: { value: [-1, -1, -1, -1] } }\n\t]);\n\n\treturn new THREE.ShaderMaterial({\n\t\tuniforms: customUniforms,\n\t\tvertexShader: PHONG_LINE_VERT,\n\t\tfragmentShader: PHONG_LINE_FRAG,\n\t\tside: THREE.DoubleSide,\n\t\t//lights: true,\n\t\tname: 'custom-line-material'\n\t});\n}\n\n\nexport const PHONG_POINT_SELECT_VERT = `\n#define PHONG\n\nvarying vec3 vViewPosition;\n\nuniform vec4 selectedID;\nuniform float pointSize;\n\nattribute vec3 location;\nattribute vec4 objectID;\nattribute vec3 color;\n\nvarying float varyingObjectID;\nvarying vec3 colorFrag;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n    int marked = 1;\n\n    for(int i = 0; i < 4; ++i)\n        marked *= int(floor(selectedID[i] * 255.0 + 0.5) == floor(objectID[i] * 255.0 + 0.5));\n\n    varyingObjectID = float(marked);\n\tcolorFrag = color;\n\n\t//#include <uv_vertex>\n\t//#include <uv2_vertex>\n\t//#include <color_vertex>\n\n\t//#include <beginnormal_vertex>\n\t//#include <morphnormal_vertex>\n\t//#include <skinbase_vertex>\n\t//#include <skinnormal_vertex>\n\t//#include <defaultnormal_vertex>\n\t//#include <normal_vertex>\n\n\t#include <begin_vertex>\n\n\ttransformed *= pointSize;\n\ttransformed += location;\n\n\t//#include <morphtarget_vertex>\n\t//#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t//#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t//#include <envmap_vertex>\n\t//#include <shadowmap_vertex>\n\t//#include <fog_vertex>\n}\n`;\n\n\nexport const PHONG_POINT_SELECT_FRAG = `\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\nvarying float varyingObjectID;\nvarying vec3 colorFrag;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\t//vec4 diffuseColor = vec4(diffuse, opacity);\n\t//ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t//vec3 totalEmissiveRadiance = emissive;\n\n\t//#include <logdepthbuf_fragment>\n\t//#include <map_fragment>\n\t//#include <color_fragment>\n\t//#include <alphamap_fragment>\n\t//#include <alphatest_fragment>\n\t//#include <specularmap_fragment>\n\t//#include <normal_fragment_begin>\n\t//#include <normal_fragment_maps>\n\t//#include <emissivemap_fragment>\n\n\t// accumulation\n\t//#include <lights_phong_fragment>\n\t//#include <lights_fragment_begin>\n\t//#include <lights_fragment_maps>\n\t//#include <lights_fragment_end>\n\n\t// modulation\n\t//#include <aomap_fragment>\n\n\t//vec3 outgoingLight = clamp(reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance, 0.75, 1.0) * colorFrag;\n\tvec3 outgoingLight = colorFrag;\n\n\t\n\tif (varyingObjectID > 0.5) \n\t\toutgoingLight -= vec3(0.0, 0.6, 0.6); \n\n\n\t//#include <envmap_fragment>\n\t//#include <output_fragment>\n\t//the output is replaced by the segment bellow\n\tgl_FragColor = vec4( outgoingLight, 1.0 );\n\n\t//#include <tonemapping_fragment>\n\t//#include <encodings_fragment>\n\t//#include <fog_fragment>\n\t//#include <premultiplied_alpha_fragment>\n\t//#include <dithering_fragment>\n}\n`;\n\n\nexport function pointSelectMaterial() {\n\n\tconst customUniforms = THREE.UniformsUtils.merge([\n\t\tTHREE.ShaderLib.phong.uniforms,\n\t\t{ selectedID: { value: [-1, -1, -1, -1] } },\n\t\t{ pointSize: { value: 1 } },\n\t]);\n\n\treturn new THREE.ShaderMaterial({\n\t\tuniforms: customUniforms,\n\t\tvertexShader: PHONG_POINT_SELECT_VERT,\n\t\tfragmentShader: PHONG_POINT_SELECT_FRAG,\n\t\tlights: true,\n\t\tside: THREE.DoubleSide,\n\t\tname: 'custom-point-material'\n\t});\n}\n\nexport const PICK_VERT = `\nattribute vec4 objectID;\nvarying vec4 objectIDColor;\n\nvoid main() {\n    objectIDColor = objectID;\n    gl_Position = projectionMatrix * (modelViewMatrix * vec4( position, 1.0 ));\n}\n`;\n\n\nexport const PICK_FRAG = `\nvarying vec4 objectIDColor;\n\nvoid main() {\n\tgl_FragColor = vec4(objectIDColor);\n}\n`;\n\n\nexport function pickingMaterial() {\n\n\tconst customUniforms = THREE.UniformsUtils.merge([]);\n\n\treturn new THREE.ShaderMaterial({\n\t\tuniforms: customUniforms,\n\t\tvertexShader: PICK_VERT,\n\t\tfragmentShader: PICK_FRAG,\n\t\tside: THREE.DoubleSide,\n\t\tname: 'custom-picking-material'\n\t});\n}\n\n\nexport const PICK_LINE_VERT = `\nattribute vec4 objectID;\nattribute vec3 lineStart;\nattribute vec3 lineEnd;\n\nuniform float zoffset;\nuniform float thickness;\n\nvarying vec4 objectIDColor;\n\n\n/**\n * Create rotation matrix from field vector.\n * The returned matrix can rotate vector (1, 0, 0)\n * into the desired setup.\n */\nmat4 getRotationMat(vec3 vector)\n{\n\tvec3 unit = vec3(1, 0, 0);\n\tvec3 f = normalize(vector);\n\tvec3 cross = cross(f, unit);\n\tvec3 a = normalize(cross);\n\tfloat s = length(cross);\n\tfloat c = dot(f, unit);\n\tfloat oc = 1.0 - c;\n\treturn mat4(oc * a.x * a.x + c,        oc * a.x * a.y - a.z * s,  oc * a.z * a.x + a.y * s,  0.0,\n                oc * a.x * a.y + a.z * s,  oc * a.y * a.y + c,        oc * a.y * a.z - a.x * s,  0.0,\n                oc * a.z * a.x - a.y * s,  oc * a.y * a.z + a.x * s,  oc * a.z * a.z + c,        0.0,\n                0.0,                       0.0,                       0.0,                       1.0);\n\n}\n\n\nvoid main() {\n    objectIDColor = objectID;\n\n\tvec3 transformed = position;\n\tvec3 dir = lineEnd - lineStart;\n    float dist = length(dir);\n    mat4 rot = getRotationMat(dir);\n\n\tfloat end = float(transformed.x >= 0.9);\n\ttransformed.x = end * (dist + (transformed.x - 1.0) * thickness) + (1.0 - end) * transformed.x * thickness; //subtract one because its the original length of the template line\n\ttransformed.y *= thickness;\n\n    transformed = lineStart + (rot * vec4(transformed, 1.0)).xyz;\n\ttransformed.z += zoffset;\n\n    gl_Position = projectionMatrix * (modelViewMatrix * vec4( transformed, 1.0 ));\n}\n`;\n\n\nexport const PICK_LINE_FRAG = `\nvarying vec4 objectIDColor;\n\nvoid main() {\n\tgl_FragColor = vec4(objectIDColor);\n}\n`;\n\n\nexport function pickingLineMaterial() {\n\n\tconst customUniforms = THREE.UniformsUtils.merge([\n\t\t{ zoffset: { value: 1 } },\n\t\t{ thickness: { value: 5 } },\n\t]);\n\n\treturn new THREE.ShaderMaterial({\n\t\tuniforms: customUniforms,\n\t\tvertexShader: PICK_LINE_VERT,\n\t\tfragmentShader: PICK_LINE_FRAG,\n\t\tside: THREE.DoubleSide,\n\t\tname: 'custom-point-picking-material'\n\t});\n}\n\nexport const PICK_POINT_VERT = `\nattribute vec4 objectID;\nattribute vec3 location;\nvarying vec4 objectIDColor;\n\nuniform float pointSize;\nuniform vec4 selectedID;\n\nvoid main() {\n    objectIDColor = objectID;\n    gl_Position = projectionMatrix * (modelViewMatrix * vec4( (pointSize * position) + location, 1.0 ));\n}\n`;\n\n\nexport const PICK_POINT_FRAG = `\nvarying vec4 objectIDColor;\n\nvoid main() {\n\tgl_FragColor = vec4(objectIDColor);\n}\n`;\n\n\nexport function pickingPointMaterial() {\n\n\tconst customUniforms = THREE.UniformsUtils.merge([\n\t\t{ pointSize: { value: 1 } }\n\t]);\n\n\treturn new THREE.ShaderMaterial({\n\t\tuniforms: customUniforms,\n\t\tvertexShader: PICK_POINT_VERT,\n\t\tfragmentShader: PICK_POINT_FRAG,\n\t\tside: THREE.DoubleSide,\n\t\tname: 'custom-point-picking-material'\n\t});\n}\n\n\nexport const PICK_AGENT_VERT = `\nattribute vec4 objectID;\nattribute vec3 from;\nattribute vec3 to;\nvarying vec4 objectIDColor;\nuniform float pointSize;\nuniform float time;\n\nvoid main() {\n\tobjectIDColor = objectID;\n    gl_Position = projectionMatrix * (modelViewMatrix * vec4( (pointSize * position) + from * (1.0 - time) + to * time, 1.0 ));\n}\n`;\n\n\nexport const PICK_AGNET_FRAG = `\nvarying vec4 objectIDColor;\n\nvoid main() {\n\tgl_FragColor = vec4(objectIDColor);\n}\n`;\n\n\nexport function pickingAgentMaterial() {\n\n\tconst customUniforms = THREE.UniformsUtils.merge([\n\t\t{ pointSize: { value: 1 } },\n\t\t{ time: { value: 0 }}\n\t]);\n\n\treturn new THREE.ShaderMaterial({\n\t\tuniforms: customUniforms,\n\t\tvertexShader: PICK_AGENT_VERT,\n\t\tfragmentShader: PICK_AGNET_FRAG,\n\t\tside: THREE.DoubleSide,\n\t\tname: 'custom-agent-picking-material'\n\t});\n}\n\n\nexport const AGENT_VERT = `\nattribute vec4 objectID;\nattribute vec3 from;\nattribute float from_speed;\nattribute vec3 to;\nattribute float to_speed;\n\nvarying float varyingObjectID;\nvarying float speed;\nuniform float pointSize;\nuniform vec4 selectedID;\nuniform float time;\n\n\n/**\n * Create rotation matrix from field vector.\n * The returned matrix can rotate vector (1, 0, 0)\n * into the desired setup.\n */\nmat4 getRotationMat(vec3 vector)\n{\n\tvec3 unit = vec3(1, 0, 0);\n\tvec3 f = normalize(vector);\n\tvec3 cross = cross(f, unit);\n\tvec3 a = normalize(cross);\n\tfloat s = length(cross);\n\tfloat c = dot(f, unit);\n\tfloat oc = 1.0 - c;\n\treturn mat4(oc * a.x * a.x + c,        oc * a.x * a.y - a.z * s,  oc * a.z * a.x + a.y * s,  0.0,\n                oc * a.x * a.y + a.z * s,  oc * a.y * a.y + c,        oc * a.y * a.z - a.x * s,  0.0,\n                oc * a.z * a.x - a.y * s,  oc * a.y * a.z + a.x * s,  oc * a.z * a.z + c,        0.0,\n                0.0,                       0.0,                       0.0,                       1.0);\n\n}\n\nvoid main() {\n\tint marked = 1;\n\n    for(int i = 0; i < 4; ++i)\n        marked *= int(floor(selectedID[i] * 255.0 + 0.5) == floor(objectID[i] * 255.0 + 0.5));\n\n    varyingObjectID = float(marked);\n\n\n\tvec3 transformed = position;\n\t//vec3 dir = from - to;\n    //float dist = length(dir);\n    //if (dist > 0.01)\n\t//{\n\t//\tmat4 rot = getRotationMat(dir);\n\t//\ttransformed = (rot * vec4(transformed, 1.0)).xyz;\n\t//}\n\n\n    gl_Position = projectionMatrix * (modelViewMatrix * vec4( (pointSize * transformed) + from * (1.0 - time) + to * time, 1.0 ));\n\tspeed = clamp((from_speed * (1.0 - time) + to_speed * time) / 20.0, 0.0, 1.0);\n}\n`;\n\n\nexport const AGENT_FRAG = `\nvarying float varyingObjectID;\nvarying float speed;\n\nvoid main() {\n\tvec3 color = vec3(1.0 - speed, speed, 0.0) * 0.7 + vec3(0.3, 0.3, 0.3);\n\tif (varyingObjectID > 0.5) \n\t\tcolor -= vec3(0.0, 0.6, 0.6); \n\n\tgl_FragColor = vec4(color, 1.0);\n}\n`;\n\n\nexport function agentSelectMaterial() {\n\n\tconst customUniforms = THREE.UniformsUtils.merge([\n\t\t{ pointSize: { value: 1 } },\n\t\t{ time: { value: 0 }},\n\t\t{ time: { value: 0 }}\n\t]);\n\n\treturn new THREE.ShaderMaterial({\n\t\tuniforms: customUniforms,\n\t\tvertexShader: AGENT_VERT,\n\t\tfragmentShader: AGENT_FRAG,\n\t\tside: THREE.DoubleSide,\n\t\tname: 'custom-agent-picking-material'\n\t});\n}\n\nexport class MaterialLibrary {\n    polygonMaterial: THREE.ShaderMaterial;\n    pointMaterial: THREE.ShaderMaterial;\n    lineMaterial: THREE.ShaderMaterial;\n    agentMaterial: THREE.ShaderMaterial;\n\t\n    pickingPolygonMaterial: THREE.ShaderMaterial;\n    pickingLineMaterial: THREE.ShaderMaterial;\n    pickingPointMaterial: THREE.ShaderMaterial;\n    pickingAgentMaterial: THREE.ShaderMaterial;\n\n\tconstructor(csm: CSM) {        \n\t\tthis.polygonMaterial = polygonSelectMaterial();\n        csm.setupMaterial(this.polygonMaterial);\n        this.lineMaterial = lineMaterial();\n\t\tthis.pointMaterial = pointSelectMaterial();\n\t\tthis.agentMaterial = agentSelectMaterial();\n\n        this.pickingPolygonMaterial = pickingMaterial();\n\t\tthis.pickingLineMaterial = pickingLineMaterial();\n        this.pickingPointMaterial = pickingPointMaterial();\n\t\tthis.pickingAgentMaterial = pickingAgentMaterial();\n\t}\n\n\tsetPointSize(size: number) {\n\t\tthis.pointMaterial.uniforms.pointSize.value = size;\n\t\tthis.pointMaterial.uniformsNeedUpdate = true;\n\t\tthis.pickingPointMaterial.uniforms.pointSize.value = size;\n\t\tthis.pickingPointMaterial.uniformsNeedUpdate = true;\n\t\tthis.agentMaterial.uniforms.pointSize.value = size;\n\t\tthis.agentMaterial.uniformsNeedUpdate = true;\n\t\tthis.pickingAgentMaterial.uniforms.pointSize.value = size;\n\t\tthis.pickingAgentMaterial.uniformsNeedUpdate = true;\n\t}\n\n\tsetLineWidth(size: number) {\n\t\tthis.lineMaterial.uniforms.thickness = { value: size };\n\t\tthis.lineMaterial.uniformsNeedUpdate = true;\n\t\tthis.pickingLineMaterial.uniforms.thickness = { value: Math.max(size, 5) };\n\t\tthis.pickingLineMaterial.uniformsNeedUpdate = true;\n\t}\n\n\tsetSelectedID(id: number[]) {\n\t\tthis.polygonMaterial.uniforms.selectedID = { value: id };\n\t\tthis.polygonMaterial.uniformsNeedUpdate = true;\n\t\tthis.lineMaterial.uniforms.selectedID = { value: id };\n\t\tthis.lineMaterial.uniformsNeedUpdate = true;\n\t\tthis.pointMaterial.uniforms.selectedID = { value: id };\n\t\tthis.pointMaterial.uniformsNeedUpdate = true;\n\t\tthis.pointMaterial.uniforms.selectedID = { value: id };\n\t\tthis.pointMaterial.uniformsNeedUpdate = true;\n\t}\n\n\tsetTime(time: number) {\n\t\tthis.pickingAgentMaterial.uniforms.time = { value: time - Math.floor(time) };\n\t\tthis.pickingAgentMaterial.uniformsNeedUpdate = true;\t\n\t\tthis.agentMaterial.uniforms.time = { value: time - Math.floor(time) };\n\t\tthis.agentMaterial.uniformsNeedUpdate = true;\t\n\t}\n}","import * as THREE from 'three';\nimport Stats from 'three/examples/jsm/libs/stats.module';\nimport { MainTimeline } from '../datamodel/maintimeline';\nimport { StatusManager } from '../utils/status';\nimport { CameraControls } from './camera';\nimport { Compas } from './compas';\nimport { CSM } from './csm/CSM';\nimport { CSMHelper } from './csm/CSMHelper';\nimport { GPUPickHelper } from './picker';\nimport { GridPlaceholders } from './placeholders';\nimport { Selector } from './selector';\nimport { MaterialLibrary } from './shaders';\n\nconst SHOWSTATS = false;\n\nexport class Renderer {\n    canvas: HTMLCanvasElement;\n    scene: THREE.Scene;\n    pickingScene: THREE.Scene;\n    renderer: THREE.WebGLRenderer;\n\n    controls: CameraControls;\n    picker: GPUPickHelper;\n    matlib: MaterialLibrary;\n    csm!: CSM;\n    helper!: CSMHelper;\n    compas: Compas;\n\n    stats1!: Stats;\n    stats2!: Stats;\n    changed: boolean;\n\n    updateShadows = false;\n    preRenderActionsCall: CallableFunction;\n    postRenderActionsCall: CallableFunction;\n    status: StatusManager;\n\n\n    timeline: MainTimeline;\n    selector: Selector;\n    placeholders: GridPlaceholders;\n\n    constructor(canvas: HTMLCanvasElement, preRenderActionsCall: CallableFunction, postRenderActionsCall: CallableFunction) {\n        this.canvas = canvas;\n        this.preRenderActionsCall = preRenderActionsCall;\n        this.postRenderActionsCall = postRenderActionsCall;\n        this.status = new StatusManager();\n        \n        //basic threejs\n        this.scene = new THREE.Scene();\n        this.pickingScene = new THREE.Scene();\n        this.controls = new CameraControls(this.canvas);\n        this.renderer = new THREE.WebGLRenderer({ canvas: this.canvas, antialias: true });\n        this.setupRenderer();\n        this.setupLightsAndShadows();\n        this.controls.initOrthographic(this.canvas, this.csm);\n        this.controls.useOrtho();\n        \n        //compas\n        this.compas = new Compas(this);\n        \n        //materials\n        this.matlib = new MaterialLibrary(this.csm);\n        \n        //picker\n        this.picker = new GPUPickHelper(this.renderer);\n        this.changed = true;\n        \n        //timeline\n        this.timeline = new MainTimeline(this);\n        \n        //selector\n        this.selector = new Selector(this);\n\n        this.placeholders = new GridPlaceholders(this);\n        \n        //devstats\n        if (SHOWSTATS) {\n            this.stats1 = Stats();\n            this.stats1.showPanel(0);\n            this.stats1.dom.style.cssText = 'position:absolute;top:0px;left:0px;';\n            document.body.appendChild(this.stats1.dom);\n            this.stats2 = Stats();\n            this.stats2.showPanel(1);\n            this.stats2.dom.style.cssText = 'position:absolute;top:0px;left:80px;';\n            document.body.appendChild(this.stats2.dom);\n        }\n    }\n\n\n    private setupLightsAndShadows() {\n        const hemisphere = new THREE.HemisphereLight(0xFFFFFF, 0x555555, 0.4);\n        hemisphere.position.set(0, 1, 1);\n        this.scene.add(hemisphere);\n        this.scene.add(new THREE.AmbientLight(0xFFFFFF, 0.5));\n\n        this.csm = new CSM({\n            fade: true,\n            mode: 'practical',\n            cascades: 4,\n            shadowBias: [-0.0005, -0.001, -0.001, -0.003],\n            shadowMapSize: 2048,\n            lightDirection: new THREE.Vector3(-1, -1, -1).normalize(),\n            camera: this.controls.camera,\n            parent: this.scene,\n            lightNear: 1,\n            lightFar: 10000,\n            maxFar: 5000,\n            margin: 0,\n            lightIntensity: 0.2,\n            autoUpdateHelper: false\n        });\n\n        this.helper = new CSMHelper(this.csm);\n        this.helper.visible = true;\n        this.scene.add(this.helper);\n        this.helper.update();\n    }\n\n    private setupRenderer() {\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.shadowMap.enabled = true;\n        this.renderer.shadowMap.autoUpdate = false;\n        this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n        //this.renderer.setClearColor(0xa6fff3);\n        this.renderer.setClearColor(0x151920);\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n        this.renderer.setAnimationLoop(() => this.frame());\n    }\n\n    enableShadows() {\n        this.updateShadows = true;\n        this.changed = true;\n        console.log('shadows enabled');\n    }\n\n    disableShadows() {\n        this.updateShadows = false;\n        this.changed = true;\n\n        let light: THREE.DirectionalLight;\n        for(light of this.csm.lights)\n        {\n            const target = this.renderer.getRenderTarget();\n            if (light.shadow && light.shadow.map)\n            {\n\n                this.renderer.setRenderTarget( light.shadow.map as any);\n                this.renderer.clear();\n            }\n            this.renderer.setRenderTarget(target);\n        }\n\n        console.log('shadows disabled');\n    }\n\n    frame() {\n        this.preRenderActionsCall();\n        this.timeline.tick();\n        this.controls.update();\n        \n        if (this.changed) {\n            this.render();\n        }\n\n        if (SHOWSTATS) {\n            this.stats1.update();\n            this.stats2.update();\n        }\n\n        this.changed = false;\n        this.postRenderActionsCall();\n    }\n\n    render() {\n        this.csm.update();\n        if (this.updateShadows) {\n            this.renderer.shadowMap.needsUpdate = true;\n        }\n\n        this.renderer.render(this.scene, this.controls.camera);\n    }\n\n    click(x: number, y: number) {\n        const id = this.picker.pick(x, y, this.pickingScene, this.controls.camera);\n        return this.select(id);\n    }\n\n    select(oid: number) {\n        if (this.picker.id !== oid)\n            this.picker.select(oid);\n\n        const selected = this.picker.layerAndOidForId(oid);\n        console.log(selected, this.picker.selected);\n\n        if (selected)\n            this.matlib.setSelectedID(this.picker.selected);\n        else \n            this.matlib.setSelectedID([-1, -1, -1, -1]);\n\n        this.changed = true;\n        return selected;\n    }\n\n    setPointSize(size: number) {\n        this.matlib.setPointSize(size);\n        this.changed = true;\n    }\n\n    setLineWidth(size: number) {\n        this.matlib.setLineWidth(size);\n        this.changed = true;\n    }\n\n    updateHelper() {\n        this.helper.update();\n        this.updateShadows = false;\n        this.changed = true;\n    }\n\n    resize(x: number, y: number) {\n        this.controls.resize(x, y);\n        this.renderer.setSize(x, y);\n        this.changed = true;\n    }\n}","import iaxios from \"../axios\";\nimport { apiurl } from \"../url\";\nimport { Project } from \"./datamodel/project\";\nimport { Renderer } from \"./renderer/renderer\";\nimport { Selector } from \"./renderer/selector\";\nimport { AreaSelection } from \"./types\";\n\nexport let host = window.location.host;\n\nif (process.env.NODE_ENV !== 'production') {\n    host = \"localhost:5000\"\n}\n\n\nexport class EngineControls {\n    renderer: Renderer;\n    project: Project;\n    keymap: {[key: string]: boolean};\n\n    savescreen: boolean;\n\n\n    showMetaCallback?: (meta: {[name: string]: any}) => void;\n    closeMetaCallback?: () => void;\n    updateCompasCallback?: (angle: number) => void;\n    updateTimeCallback?: (time: number, start: number, end: number) => void;\n    updateSelection?: (selection: AreaSelection) => void;\n\n    clickTime: number;\n    selectingRegion: boolean;\n    selectingRegionDown: boolean;\n\n    constructor(renderer: Renderer, project: Project) {\n        this.renderer = renderer;\n        this.project = project;\n        this.keymap = {};\n        this.clickTime = 0;\n        this.selectingRegion = false;\n        this.selectingRegionDown = false;\n        this.savescreen = false;\n    }\n\n    select(oid: number) {\n        this.renderer.select(oid);\n    }\n\n    selectCoord(x: number, y: number) {\n        if (this.selectingRegion)\n            return;\n\n        const selected = this.renderer.click(x, y);\n\n        if (!selected)\n            return;\n\n        iaxios.post(apiurl.GETMETA, {\n            project: this.project.name,\n            layer: selected.layer,\n            oid: selected.oid\n        }).then(res => {\n            const data = res.data;\n            data['oid'] = selected.oid;\n            data['layer'] = selected.layer;\n\n            if (this.showMetaCallback)\n                this.showMetaCallback(res.data);\n        });\n    }\n\n    mouseDown(x: number, y: number, time: number, button: number) {\n        this.clickTime = time;\n        if (this.selectingRegion)\n        {\n            this.renderer.selector.clear();\n            this.renderer.selector.select(x, y);\n            this.selectingRegionDown = true;\n            this.renderer.changed = true;\n        }\n    }\n\n    mouseOver(x: number, y: number) {\n        if (this.selectingRegion && this.selectingRegionDown)\n        {\n            this.renderer.selector.select(x, y);\n            if (this.updateSelection && this.renderer.selector.region)\n                this.updateSelection(this.renderer.selector.region);\n            this.renderer.changed = true;\n        }\n    }\n\n    mouseUp(x: number, y: number, time: number, button: number) {\n        const duration = time - this.clickTime;\n\n        if (duration < 200)\n        {\n            if (button === 0)\n                this.selectCoord(x, y);\n            else if (button === 2 && this.closeMetaCallback)\n                this.closeMetaCallback();\n        }\n            \n        if (this.selectingRegion)\n        {\n            this.selectingRegionDown = false;\n            if (this.updateSelection && this.renderer.selector.region)\n                this.updateSelection(this.renderer.selector.region);\n        }\n\n        this.clickTime = time;\n    }\n\n    get hasTimeData() {\n        return this.renderer.timeline.hasData;\n    }\n\n    keyDown(key: string) {\n        console.log('key down', key);\n        this.keymap[key] = true;\n    }\n\n    keyUp(key: string) {\n        console.log('key up', key);\n        this.keymap[key] = false;\n    }\n\n    snapshot() {\n        if (!this.savescreen)\n            return;\n\n        this.savescreen = false;\n        this.renderer.renderer.domElement.toBlob((blob) => {\n            if (!blob)\n                return;\n\n            // Function to download data to a file\n            let file = blob;\n            if ((window.navigator as any).msSaveOrOpenBlob) // IE10+\n                (window.navigator as any).msSaveOrOpenBlob(file, \"metacity-render.png\");\n\n            else { // Others\n                console.log(file);\n                let a = document.createElement(\"a\"),\n                        url = URL.createObjectURL(file);\n                a.href = url;\n                a.download = \"metacity-render.png\";\n                document.body.appendChild(a);\n                a.click();\n                setTimeout(() => {\n                    document.body.removeChild(a);\n                    window.URL.revokeObjectURL(url);  \n                }, 0); \n            }\n        });\n    }\n\n    takeScreenshot() {\n        this.savescreen = true;\n    }\n\n    preRenderActions() {\n        if (this.keymap['KeyU'])\n        {\n            this.renderer.updateHelper();\n            this.keymap['KeyU'] = false;\n        }\n    \n        if (this.updateTimeCallback){\n            this.updateTimeCallback(this.renderer.timeline.time, this.renderer.timeline.start, this.renderer.timeline.end);\n        }\n    }\n    \n    postRenderActions() {\n        this.snapshot();\n    }\n\n    swapCamera() {\n        this.renderer.controls.swap();\n        this.renderer.changed = true;\n    }\n\n    disableCamera() {\n        this.renderer.controls.controls.enabled = false;\n        this.renderer.controls.controls.update();\n    }\n    \n    enableCamera() {\n        this.renderer.controls.controls.enabled = true;\n        this.renderer.controls.controls.update();\n    }\n\n    startSelectingRegion() {\n        this.selectingRegion = true;\n    }\n    \n    endSelectingRegion() {\n        this.selectingRegion = false;\n        this.renderer.selector.clear();\n    }\n\n    useOrthogonalProjection() {\n        this.renderer.controls.useOrtho();\n        this.renderer.changed = true;\n    }\n\n    resize(x: number, y: number) {\n        this.renderer.resize(x, y);\n    }\n\n    zoomIn() {\n        this.renderer.controls.zoomIn(10);\n        this.renderer.changed = true;\n    }\n\n    zoomOut() {\n        this.renderer.controls.zoomOut(10);\n        this.renderer.changed = true;\n    }\n\n    setPointSize(size: number){\n        this.renderer.setPointSize(size);\n    }\n\n    setLineWidth(size: number){\n        this.renderer.setLineWidth(size);\n    }\n\n    updateVisibleRadius(target: THREE.Vector3) {\n        this.project.updateVisibleRadius(target);\n    }\n\n    setVisibleRadius(radius: number) {\n        this.project.setVisibleRadius(radius);\n    }\n\n    useCache(enable: boolean){\n        this.project.useCache(enable);\n    }\n\n    applyStyle(style: string){\n        this.project.applyStyle(style);\n    }\n\n    useShadows(enable: boolean){\n        if (enable)\n            this.renderer.enableShadows();\n        else\n            this.renderer.disableShadows();\n    }\n\n    setTime(time: number){\n        this.renderer.timeline.time = time;\n    }\n\n    setPlay(play: boolean){\n        this.renderer.timeline.play = play;\n    }\n\n    getPlay(){\n        return this.renderer.timeline.play;\n    }\n\n    setSpeed(speed: number){\n        this.renderer.timeline.speed = speed;\n    }\n    \n    getSpeed(){\n        return this.renderer.timeline.speed;\n    }\n}\n\n\nexport class MetacityEngine {\n    project_name: string;\n    canvas: HTMLCanvasElement;\n    \n    renderer: Renderer;\n    selector: Selector;\n    project!: Project;\n\n    controls?: EngineControls;\n\n    constructor(project_name: string, canvas: HTMLCanvasElement) {\n        this.project_name = project_name;\n        this.canvas = canvas;\n        \n        this.renderer = new Renderer(this.canvas,  () => {\n            if (this.controls)\n                this.controls.preRenderActions();\n        }, () => {\n            if (this.controls)\n                this.controls.postRenderActions();\n        });\n\n        this.selector = new Selector(this.renderer);\n    }\n\n    init() {\n        this.project = new Project(this.project_name, this.renderer);\n        this.controls = new EngineControls(this.renderer, this.project);\n        this.renderer.controls.controls.addEventListener('change', () => this.moved())\n    }\n\n    moved() {\n        this.project.updateVisibleRadius(this.renderer.controls.target);        \n        this.renderer.compas.update(this.controls?.updateCompasCallback);\n        this.renderer.changed = true;\n    }\n\n    exit() {\n        \n    }\n}","import { CompassIcon, IconButton, Tooltip } from \"evergreen-ui\";\nimport { useEffect, useState } from \"react\";\nimport { MetacityEngine } from \"../../engine/engine\";\n\n\nexport function Compas(props: { engine: MetacityEngine | undefined }) {\n    const { engine } = props;\n    const [angle, setAngle] = useState<number>(0);\n\n    const rotate = (angleInRadians: number) => {\n        const angleInDegrees = - (angleInRadians * 180 / Math.PI);\n        setAngle(angleInDegrees);\n    }\n\n    useEffect(() => {\n        if (!engine || !engine.controls)\n            return;\n\n        engine.controls.updateCompasCallback = rotate;\n    }, [engine]);\n\n    const resetRotation = () => {\n        engine?.renderer.controls.topView();\n    }\n\n    return (\n        <Tooltip content=\"Reset view rotation\">\n            <IconButton icon={<CompassIcon style={{ transform: `rotate(${angle}deg)` }} />} appearance=\"minimal\" onClick={resetRotation} />\n        </Tooltip>\n    );\n}\n","import { EyeOffIcon, EyeOpenIcon, Heading, Icon, Pane } from \"evergreen-ui\";\nimport { useEffect, useState } from \"react\";\nimport { MetacityEngine } from \"../../engine/engine\";\n\n\nexport function LayerMenu(props: { engine: MetacityEngine | undefined, visible: boolean }) {\n    const { engine, visible } = props;\n    const [visibility, setVisibility] = useState<boolean[]>([]);\n\n\n    useEffect(() => {\n        if (!engine)\n            return;\n        setVisibility(engine.project.layers.map((layer) => layer.visible));\n    }, [engine, visible]);\n\n    const toggleVisibility = (index: number) => {\n        if (!engine)\n            return;\n        engine.project.layers[index].visible = !visibility[index];\n        setVisibility(visibility.map((v, i) => i === index ? !v : v));\n    };\n\n\n    return (\n        <>\n            {visible &&\n                <>\n                    <Heading size={300} className=\"title\">Layers</Heading>\n                    <Pane className=\"layers\">\n                        {engine?.project.layers.map((layer, i) => (\n                            <Pane key={layer.name} className=\"layer\" onClick={() => toggleVisibility(i)}>\n                                {visibility[i] ? <Icon icon={EyeOpenIcon} /> : <Icon icon={EyeOffIcon} />}\n                                <Pane className=\"layerName\">{layer.name}</Pane>\n                            </Pane>\n                        ))}\n                    </Pane>\n                </>\n            }\n        </>\n    )\n}","import { Button, Heading, Pane, Text } from \"evergreen-ui\";\nimport { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport iaxios from \"../../axios\";\nimport { MetacityEngine } from \"../../engine/engine\";\nimport { AreaSelection } from \"../../engine/types\";\nimport { apiurl, url } from \"../../url\";\n\n\n\nexport function SelectorMenu(props: { engine: MetacityEngine | undefined, visible: boolean }) {\n    const { engine, visible } = props;\n    const [selection, setSelection] = useState<AreaSelection | undefined>(undefined);\n\n\n    useEffect(() => {\n        if (!engine || !engine.controls)\n            return;\n\n        engine.controls.updateSelection = setSelection;\n        if (!visible)\n            setSelection(undefined);\n\n    }, [engine, visible]);\n\n    const format = (num: number) => {\n        return num.toFixed(2);\n    };\n\n    const exportOBJ = () => {\n        if (!engine || !selection)\n            return;\n\n        iaxios.post(apiurl.EXPORTOBJ, {\n            project: engine.project.name,\n            start: selection.start,\n            end: selection.end\n        }).then(res => {\n            window.open(url.EXPORT + res.data.exportID, \"_blank\");\n        }).catch(err => {\n            toast.error(\"Failed to export OBJ, try again later\");\n        });\n    };\n\n\n    const exportLego = () => {\n        if (!engine || !selection)\n            return;\n\n        iaxios.post(apiurl.EXPORTLEGO, {\n            project: engine.project.name,\n            start: selection.start,\n            end: selection.end\n        }).then(res => {\n            window.open(url.EXPORT + res.data.exportID, \"_blank\");\n        }).catch(err => {\n            toast.error(\"Failed to export LEGO, try again later\");\n        });\n    }\n\n    return (\n        <>\n            {visible &&\n                <>\n                    <Heading size={300} className=\"title\">Selection</Heading>\n                    <Pane className=\"selector\">\n                        <Text className=\"field\" size={300}>\n                            Selecting region with locked orthographic camera. If you wish to reposition your view, please close this menu first.\n                        </Text>\n                        {selection ?\n                            <>\n                                <Pane className=\"field\">\n                                    <Heading size={100}>Start coordinate</Heading>\n                                    <Pane className=\"values\">\n                                        {format(selection.start[0])} {format(selection.start[1])}\n                                    </Pane>\n                                </Pane>\n                                <Pane className=\"field\">\n                                    <Heading size={100}>End coordinate</Heading>\n                                    <Pane className=\"values\">\n                                        {format(selection.end[0])} {format(selection.end[1])}\n                                    </Pane>\n                                </Pane>\n                                <Pane className=\"field\">\n                                    <Heading size={100}>Area Size (coordinate diff)</Heading>\n                                    <Pane className=\"values\">\n                                        {format(selection.size[0])} {format(selection.size[1])}\n                                    </Pane>\n                                </Pane>\n                                <Pane className=\"field buttons\">\n                                    <Button marginRight={4} onClick={exportOBJ}>\n                                        Export OBJ\n                                    </Button>\n                                    <Button onClick={exportLego}>\n                                        Export Lego\n                                    </Button>\n                                </Pane>\n                            </>\n                            : <Heading size={100}>No selection</Heading>}\n                    </Pane>\n                </>\n            }\n        </>\n    )\n}\n","import { Heading, Pane, Switch } from \"evergreen-ui\";\nimport { useEffect, useState } from \"react\";\nimport { MetacityEngine } from \"../../engine/engine\";\n\n\nexport function SettingsMenu(props: { engine: MetacityEngine | undefined, visible: boolean }) {\n    const { engine, visible } = props;\n    const [radius, setRadius] = useState<number>(2000);\n    const [pointSize, setPointSize] = useState<number>(1);\n    const [lineWidth, setLineWidth] = useState<number>(5);\n    const [shadows, setShadows] = useState<boolean>(false);\n    const [cache, setCache] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (!engine)\n            return;\n        Promise.resolve(1).then(() => engine.controls?.setVisibleRadius(radius));\n    }, [engine, radius]);\n\n\n    useEffect(() => {\n        if (!engine)\n            return;\n        Promise.resolve(1).then(() => {\n            engine.controls?.useShadows(shadows);\n        });\n    }, [engine, shadows]);\n\n    useEffect(() => {\n        if (!engine)\n            return;\n        Promise.resolve(1).then(() => {\n            engine.controls?.useCache(cache);\n        });\n    }, [engine, cache]);\n\n    useEffect(() => {\n        if (!engine)\n            return;\n        Promise.resolve(1).then(() => engine.controls?.setPointSize(pointSize));\n    }, [engine, pointSize]);\n\n    useEffect(() => {\n        if (!engine)\n            return;\n        Promise.resolve(1).then(() => engine.controls?.setLineWidth(lineWidth));\n    }, [engine, lineWidth]);\n\n    const updateRadius = (value: string) => {\n        const v = parseInt(value);\n        if (v !== radius) {\n            setRadius(v);\n        }\n    }\n\n    const updatePointSize = (value: string) => {\n        const v = parseFloat(value);\n        if (v !== pointSize) {\n            setPointSize(v);\n        }\n    }\n\n    const updateLineWidth = (value: string) => {\n        const v = parseFloat(value);\n        if (v !== pointSize) {\n            setLineWidth(v);\n        }\n    }\n\n    const toggleShadows = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (!engine)\n            return;\n\n        setShadows(e.target.checked);\n    }\n\n    const toggleCache = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (!engine)\n            return;\n\n        setCache(e.target.checked);\n    }\n\n\n    return (\n        <>\n            {visible &&\n                <>\n                    <Heading size={300} className=\"title\">Settings</Heading>\n                    <Pane className=\"settings\">\n                        <Pane className=\"setting\">\n                            <Heading size={100}>Visible Radius: {radius}</Heading>\n                            <Pane className=\"controls\">\n                                <input type=\"range\" min={0} max={20000} step={1000} defaultValue={radius} onChange={(e) => updateRadius(e.target.value)} />\n                            </Pane>\n                        </Pane>\n                        <Pane className=\"setting\">\n                            <Heading size={100}>Point Size: {pointSize}</Heading>\n                            <Pane className=\"controls\">\n                                <input type=\"range\" min={0} max={5} step={0.1} defaultValue={pointSize} onChange={(e) => updatePointSize(e.target.value)} />\n                            </Pane>\n                        </Pane>\n                        <Pane className=\"setting\">\n                            <Heading size={100}>Line width: {lineWidth}</Heading>\n                            <Pane className=\"controls\">\n                                <input type=\"range\" min={0} max={10} step={0.1} defaultValue={lineWidth} onChange={(e) => updateLineWidth(e.target.value)} />\n                            </Pane>\n                        </Pane>\n                        <Pane className=\"setting\">\n                            <Pane className=\"inlineControls\">\n                                <Heading size={100}>Shadows: {shadows ? \"on\" : \"off\"}</Heading>\n                                <Switch checked={shadows} onChange={(e) => toggleShadows(e)} />\n                            </Pane>\n                        </Pane>\n                        <Pane className=\"setting\">\n                            <Pane className=\"inlineControls\">\n                                <Heading size={100}>Caching Data: {cache ? \"on\" : \"off\"}</Heading>\n                                <Switch checked={cache} onChange={(e) => toggleCache(e)} />\n                            </Pane>\n                        </Pane>\n                    </Pane>\n                </>\n            }\n        </>\n    )\n}","import { Heading, Pane } from \"evergreen-ui\";\nimport { useEffect, useState } from \"react\";\nimport iaxios from \"../../axios\";\nimport { MetacityEngine } from \"../../engine/engine\";\nimport { apiurl } from \"../../url\";\n\ntype color = [number, number, number];\n\ninterface colormap {\n    range: [number, number];\n    colors: color[];\n}\n\nexport function StyleMenu(props: { engine: MetacityEngine | undefined, visible: boolean }) {\n    const { engine, visible } = props;\n    const [selected, setSelected] = useState<string | undefined>(undefined);\n    const [legend, setLegend] = useState<{ [name: string]: color | colormap  } | undefined>(undefined);\n\n    const applyStyle = (style?: string) => {\n        if (engine == null)\n            return\n\n        setSelected(style);\n\n        if (style)\n        {\n            engine.project.applyStyle(style);\n            iaxios.get(`${apiurl.PROJECTDATA}${engine.project.name}/styles/${style}_legend.mss.json`, {\n                headers: {\n                    'Cache-Control': 'no-cache',\n                    'Pragma': 'no-cache',\n                    'Expires': '0'\n                }\n            }).then((response) => {\n                setLegend(response.data);\n            }).catch(() => {\n                setLegend(undefined);\n            });\n        }\n        else {\n            engine.project.clearStyle();\n            setLegend(undefined);\n        }\n    };\n\n    useEffect(() => {\n        if (!engine)\n            return;\n\n        setSelected(engine.project.usedStyle);\n\n    }, [engine]);\n\n    return (\n        <>\n            {visible &&\n                <>\n                    <Heading size={300} className=\"title\">Styles</Heading>\n                    <Pane className=\"styles\">\n                        {engine?.project.styles.map(style => (\n                            <Pane key={style} onClick={() => applyStyle(style)} className={`style ${selected === style ? \"selected\" : \"\"}`}>\n                                {style}\n                            </Pane>\n                        ))}\n                        <Pane onClick={() => applyStyle()} className={`style ${selected === undefined ? \"selected\" : \"\"}`}>\n                            No Style\n                        </Pane>\n                    </Pane>\n                    <Heading size={300} className=\"title\">Legend</Heading>\n                    <Pane className=\"legend\">\n                        {legend ? Object.keys(legend).map(name => (\n                            <Pane key={name} className={`legend-item ${(legend[name] as colormap).range && \"vertical\"}`}>\n                                <Pane className=\"legend-name\">{name}</Pane>\n                                { (legend[name] as colormap).range ?\n                                    <Pane className=\"legend-colormap-cont\">\n                                        <Pane className=\"legend-colormap\"\n                                            style={{ backgroundImage:\n                                                `linear-gradient(to right, ${\n                                                    (legend[name] as colormap).colors.map(color => `rgb(${color[0]}, ${color[1]}, ${color[2]})`).join(\", \")\n                                                })` }}\n                                        />\n                                        <Pane className=\"legend-range\">\n                                                <Pane>\n                                                    {(legend[name] as colormap).range[0]}\n                                                </Pane>\n                                                <Pane>\n                                                    {(legend[name] as colormap).range[1]}\n                                                </Pane>\n                                        </Pane>\n                                    </Pane>\n\n                                    : \n                                    <Pane className=\"legend-color\" style={{ backgroundColor: `rgb(${(legend[name] as color)[0]}, ${(legend[name] as color)[1]}, ${(legend[name] as color)[2]})` }} />\n                                }\n                            </Pane>\n                        )) : <Pane className=\"legend-item\">No Legend</Pane>}\n                    </Pane>\n                </>\n            }\n        </>\n    )\n}","import { Button, CameraIcon, IconButton, LayersIcon, MinusIcon, Pane, PlusIcon, SelectIcon, SettingsIcon, StyleIcon, TimeIcon, Tooltip } from \"evergreen-ui\";\nimport { useEffect, useState } from \"react\";\nimport { MetacityEngine } from \"../../engine/engine\";\nimport { Compas } from \"./menucompas\";\nimport { LayerMenu } from \"./menulayer\";\nimport { SelectorMenu } from \"./menuselector\";\nimport { SettingsMenu } from \"./menusettings\";\nimport { StyleMenu } from \"./menustyle\";\nimport { TimelineMenu } from \"./menutimeline\";\n\n\nfunction SideMenu(props: { children: any, isShown: boolean, onClose: () => void }) {\n    const { children, isShown } = props;\n    \n    return (\n        <Pane className=\"viewMenu\" display={isShown ? \"block\" : \"none\"}>\n            {children}\n        </Pane>\n    );\n}\n\n\nenum Menu {\n    None,\n    Layers,\n    Styles,\n    Settings,\n    Timeline,\n    Selector\n}\n\nenum CameraType {\n    D2,\n    D3\n}\n\nexport function ViewMenu(props: { engine: MetacityEngine | undefined }) {\n    const { engine } = props;\n    const [menuShown, setMenuShown] = useState<boolean>(false);\n    const [camera, setCamera] = useState<CameraType>(CameraType.D2);\n    const [menu, setMenu] = useState<number>(Menu.None);\n\n\n    const toggleMenu = (kind: number) => {\n        if (menuShown && kind === menu) {\n            setMenu(-1);\n            setMenuShown(false);\n        }\n        else {\n            setMenu(kind);\n            setMenuShown(true);\n        }\n    };\n\n    const swapCamera = () => {\n        if (!engine)\n            return;\n\n        if (menu === Menu.Selector)\n            return;\n\n        engine.controls?.swapCamera();\n        setCamera(camera === CameraType.D2 ? CameraType.D3 : CameraType.D2);\n    };\n\n    useEffect(() => {\n        if (!engine)\n            return;\n\n        if (menu === Menu.Selector) {\n            engine.controls?.useOrthogonalProjection();\n            setCamera(CameraType.D2);\n            engine.controls?.disableCamera();\n            engine.controls?.startSelectingRegion();\n        }\n\n        if (menu !== Menu.Selector) {\n            engine.controls?.enableCamera();\n            engine.controls?.endSelectingRegion();\n        }\n\n    }, [engine, menu]);\n\n\n    return (\n        <Pane className=\"viewControls\">\n            <Pane className=\"controlBar\">\n                <Tooltip content=\"Layers\" >\n                    <IconButton icon={LayersIcon} className={menu === Menu.Layers && menuShown ? \"active\" : \"\"} appearance=\"minimal\" onClick={() => toggleMenu(Menu.Layers)} />\n                </Tooltip>\n                <Tooltip content=\"Styles\">\n                    <IconButton icon={StyleIcon} className={menu === Menu.Styles && menuShown ? \"active\" : \"\"} appearance=\"minimal\" onClick={() => toggleMenu(Menu.Styles)} />\n                </Tooltip>\n                <Tooltip content=\"Settings\">\n                    <IconButton icon={SettingsIcon} className={menu === Menu.Settings && menuShown ? \"active\" : \"\"} appearance=\"minimal\" onClick={() => toggleMenu(Menu.Settings)} />\n                </Tooltip>\n                <Tooltip content=\"Timeline\">\n                    <IconButton icon={TimeIcon} className={menu === Menu.Timeline && menuShown ? \"active\" : \"\"} appearance=\"minimal\" onClick={() => toggleMenu(Menu.Timeline)} />\n                </Tooltip>\n                <Tooltip content=\"Export region\">\n                    <IconButton icon={SelectIcon} className={menu === Menu.Selector && menuShown ? \"active\" : \"\"} appearance=\"minimal\" onClick={() => toggleMenu(Menu.Selector)} />\n                </Tooltip>\n                <Tooltip content=\"Save screenshot\">\n                    <IconButton icon={CameraIcon} appearance=\"minimal\" onClick={() => { engine?.controls?.takeScreenshot(); }} />\n                </Tooltip>\n                <Tooltip content=\"Switch between 2D/3D view\">\n                    <Button appearance=\"minimal\" id=\"perspectiveControl\" onClick={swapCamera} disabled={menu === Menu.Selector}>\n                        {camera === CameraType.D2 ? \"3D\" : \"2D\"}\n                    </Button>\n                </Tooltip>\n                <Tooltip content=\"Zoom in\">\n                    <IconButton icon={PlusIcon} appearance=\"minimal\" onClick={() => { engine?.controls?.zoomIn() }} />\n                </Tooltip>\n                <Tooltip content=\"Zoom out\">\n                    <IconButton icon={MinusIcon} appearance=\"minimal\" onClick={() => { engine?.controls?.zoomOut() }} />\n                </Tooltip>\n                <Compas engine={engine} />\n            </Pane>\n            <SideMenu isShown={menuShown} onClose={() => toggleMenu(menu)}>\n                <LayerMenu engine={engine} visible={menu === Menu.Layers} />\n                <StyleMenu engine={engine} visible={menu === Menu.Styles} />\n                <SettingsMenu engine={engine} visible={menu === Menu.Settings} />\n                <TimelineMenu engine={engine} visible={menu === Menu.Timeline} />\n                <SelectorMenu engine={engine} visible={menu === Menu.Selector} />\n            </SideMenu>\n        </Pane>\n    )\n}","import { Button, Heading, IconButton, Pane, PauseIcon, PlayIcon, SelectMenu } from \"evergreen-ui\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { MetacityEngine } from \"../../engine/engine\";\n\n\nexport function TimelineMenu(props: { engine: MetacityEngine | undefined, visible: boolean }) {\n    const { engine, visible } = props;\n    const [time, setTime] = useState<number>(0);\n    const [start, setStart] = useState<number>(0);\n    const [play, setPlay] = useState<boolean>(false);\n    const [end, setEnd] = useState<number>(0);\n    const [speed, setSpeed] = useState<number>(1);\n    const timeRef = useRef<HTMLInputElement>(null);\n\n    const speedOptions = [0.25, 0.5, 1, 2, 5, 10, 20, 30, 60];\n\n\n    const timing = (time: number, start: number, end: number) => {\n        setTime(Math.floor(time));\n\n        setStart(start);\n        setEnd(end);\n    }\n\n    const togglePlay = () => {\n        if (!engine || !engine.controls)\n            return;\n\n        engine.controls.setPlay(!play);\n        setPlay(!play);\n    }\n\n    const setupTime = () => {\n        const time = timeRef.current?.value;\n\n        if (!engine || !engine.controls || !time)\n            return;\n\n        const t = parseFloat(time);\n        if (isNaN(t))\n            return;\n\n        engine.controls.setTime(t);\n    }\n\n    useEffect(() => {\n        if (!engine || !engine.controls)\n            return;\n\n        engine.controls.setSpeed(speed);\n    }, [speed, engine]);\n\n    useEffect(() => {\n        if (!engine || !engine.controls)\n            return;\n\n        engine.controls.updateTimeCallback = timing;\n        setPlay(engine.controls.getPlay());\n        setSpeed(engine.controls.getSpeed());\n    }, [engine]);\n\n    const pad = (n: number) => {\n        return n.toString().padStart(2, '0');\n    }\n\n    const formatedTime = () => {\n        return pad(Math.floor(time / 3600)) + ':' + pad(Math.floor((time % 3600) / 60)) + ':' + pad(Math.floor(time % 60));\n    }\n\n    return (\n        <>\n            {visible && (\n                engine?.controls?.hasTimeData ?\n                <>\n                    <Heading size={300} className=\"title\">Timeline</Heading>\n                    <Pane className=\"timeline\">\n                        <Pane className=\"setting\">\n                            <Pane display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\n                                <Pane flexGrow=\"1\">\n                                    <Heading size={100}>Time</Heading>\n                                    <Heading size={400}>{formatedTime()}</Heading>\n                                </Pane>\n                                <Pane>\n                                    <IconButton icon={play ? PauseIcon : PlayIcon} appearance=\"minimal\" onClick={togglePlay} />\n                                    <SelectMenu\n                                        title=\"Select speed\"\n                                        options={speedOptions.map((value) => ({ label: `${value}\\u00D7`, value: value }))}\n                                        selected={`${speed}\\u00D7`}\n                                        hasFilter={false}\n                                        onSelect={(item) => setSpeed(item.value as number)}>\n                                        <Button appearance=\"minimal\">{`Speed ${speed}\\u00D7`}</Button>\n                                    </SelectMenu>\n                                </Pane>\n                            </Pane>\n                            <Pane className=\"controls\">\n                                <Pane className=\"timescroll\">\n                                    <input\n                                        ref={timeRef}\n                                        type=\"range\"\n                                        min={start}\n                                        max={end}\n                                        step={1}\n                                        value={time}\n                                        onChange={() => setupTime()}\n                                    />\n                                </Pane>\n                            </Pane>\n                        </Pane>\n                    </Pane>\n                </>\n                :\n                <>\n                    <Heading size={300} paddingBottom={32} className=\"title\">No dynamic data</Heading>\n                </>\n                )\n            }\n        </>\n    )\n}\n","import { CornerDialog, Pane, Text } from \"evergreen-ui\";\nimport { useEffect, useState, useCallback } from \"react\"\nimport { MetacityEngine } from \"../../engine/engine\"\n\n\nexport function MetaDialog(props: {engine: MetacityEngine | undefined}) {\n    const {engine} = props;\n\n    const [meta, setMeta] = useState<{[name: string]: any}>({});\n    const [metaIsShown, setMetaIsShown] = useState(false);\n\n\n    const showMeta = (data: {[name: string]: any}) => {\n        setMeta(data);\n        setMetaIsShown(true);\n    }\n\n    const closeMeta = useCallback(() => {\n        engine?.controls?.select(-1);\n        setMetaIsShown(false);\n    }, [engine?.controls]);\n\n\n    useEffect(() => {\n        if (engine && engine.controls)\n        {\n            engine.controls.showMetaCallback = showMeta;\n            engine.controls.closeMetaCallback = closeMeta;\n        }\n    }, [engine, engine?.controls, closeMeta]);\n\n\n    return (\n        <CornerDialog\n            title=\"Metadata\"\n            hasCancel={false}\n            hasFooter={false}\n            width=\"auto\"\n            isShown={metaIsShown}\n            onCloseComplete={closeMeta}\n            onCancel={closeMeta}\n        >\n            <Pane className=\"meta\">\n                {\n                    Object.keys(meta).map(key => (\n                        <Pane key={key} className=\"attribute\">\n                            <Text className=\"key\">{key}:</Text> <Text className=\"value\">{meta[key]}</Text>\n                        </Pane>\n                    ))\n                }\n            </Pane>\n        </CornerDialog>\n    )\n}","import { Pane } from \"evergreen-ui\";\nimport { useEffect, createRef, useState, useLayoutEffect } from \"react\"\nimport { useParams } from \"react-router\"\nimport { MetacityEngine } from \"../../engine/engine\"\nimport { ViewMenu } from \"./menu\"\nimport { MetaDialog } from \"./metadialog\"\n\n\nfunction useWindowSize() {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n        function updateSize() {\n            setSize([window.innerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    }, []);\n    return size;\n}\n\nexport function View() {\n    const { project_name } = useParams<{ project_name: string }>();\n    const [width, height] = useWindowSize();\n    const [engine, setEngine] = useState<MetacityEngine | undefined>(undefined);\n    const canvas = createRef<HTMLCanvasElement>();\n\n    useEffect(() => {\n        if (canvas.current == null)\n            return;\n\n        const engine = new MetacityEngine(project_name, canvas.current as HTMLCanvasElement);\n        engine.init();\n        setEngine(engine);\n        engine.renderer.frame();\n        \n        return () => {\n            window.location.reload();\n        };\n        \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [project_name]);\n\n\n    useEffect(() => {\n        if (engine == null)\n            return;\n\n        engine.controls?.resize(width, height);\n    }, [width, height, engine]);\n\n    return (\n        <Pane className=\"canvasAnchor\">\n            <MetaDialog engine={engine} />\n            <ViewMenu engine={engine} />\n            <canvas\n                ref={canvas}\n                onMouseDown={(event) => {if (!engine) return; engine.controls?.mouseDown(event.clientX, event.clientY, event.timeStamp, event.button); }}\n                onMouseUp={(event) => { if (!engine) return; engine.controls?.mouseUp(event.clientX, event.clientY, event.timeStamp, event.button); }}\n                onMouseMove={(event) => { if (!engine) return; engine.controls?.mouseOver(event.clientX, event.clientY); }}\n                onKeyDown={(event) => { if (event.repeat || !engine) return; engine.controls?.keyDown(event.code); }}\n                onKeyUp={(event) => { if (event.repeat || !engine) return; engine.controls?.keyUp(event.code); }}\n                tabIndex={0}\n            >\n                Your browser does not support HTML5 canvas\n            </canvas>\n            <Pane id=\"viewStatusBar\">\n                Status\n            </Pane>\n        </Pane>\n    )\n}","import {\n  BrowserRouter as Router, Redirect, Route, Switch\n} from \"react-router-dom\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Export } from './screens/exports/export';\nimport { Home } from './screens/home/home';\nimport { LoginGate } from './screens/login/gate';\nimport { Mapping } from './screens/mapping/mapping';\nimport { Projects } from './screens/projects/projects';\nimport { StyleEditor } from './screens/style/style';\nimport { UploadLayer } from './screens/upload/upload';\nimport { View } from './screens/view/view';\nimport './style.css';\nimport { url } from './url';\n\nexport function App() {\n  return (\n    <Router>\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        //draggable\n        //pauseOnHover\n      />\n      <Switch>\n        <Route exact path={[\"/\"]}>\n          <Redirect to=\"/app\" />\n        </Route>\n        <Route path={url.EXPORTTEMPLATE}>\n          <Export />\n        </Route>\n        <Route path={url.MAPPINGTEMPLATE}>\n          <LoginGate>\n            <Mapping />\n          </LoginGate>\n        </Route>\n        <Route path={url.UPLOADLAYERTEMPLATE}>\n          <LoginGate>\n            <UploadLayer />\n          </LoginGate>\n        </Route>\n        <Route path={url.PROJECTSTEMPLATE}>\n          <LoginGate>\n            <Projects />\n          </LoginGate>\n        </Route>\n        <Route path={url.STYLETEMPLATE}>\n          <LoginGate>\n            <StyleEditor />\n          </LoginGate>\n        </Route>\n        <Route path={url.VIEWTEMPLATE}>\n          <View />\n        </Route>\n        <Route path={url.HOME}>\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { IconContext } from 'react-icons/lib'\nimport { App } from './app'\n\nReactDOM.render(\n  <React.StrictMode>\n    <IconContext.Provider value={{ className: 'react-icons' }}>\n      <App /> \n      </IconContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}